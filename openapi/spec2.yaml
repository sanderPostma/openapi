---
consumes:
- application/x-www-form-urlencoded
definitions:
  account:
    properties:
      business_logo:
        description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          A logo for this account (at least 128px x 128px)"
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/file_upload"
      business_name:
        description: The publicly visible name of the business
        type: string
      business_url:
        description: The publicly visible website of the business
        type: string
      charges_enabled:
        description: Whether the account can create live charges
        type: boolean
      country:
        description: The country of the account
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      debit_negative_balances:
        description: A Boolean indicating if Stripe should try to reclaim negative
          balances from an attached bank account. See our [Understanding Connect Account
          Balances](/docs/connect/account-balances) documentation for details.
        type: boolean
      decline_charge_on:
        "$ref": "#/definitions/account_decline_charge_on"
      default_currency:
        description: The currency this account has chosen to use as the default
        type: string
      details_submitted:
        description: Whether account details have been submitted. Standard accounts
          cannot receive payouts before this is true.
        type: boolean
      display_name:
        description: The display name for this account. This is used on the Stripe
          Dashboard to differentiate between accounts.
        type: string
      email:
        description: The primary user's email address.
        type: string
      external_accounts:
        description: External accounts (bank accounts and debit cards) currently attached
          to this account
        properties:
          data:
            description: The list contains all external accounts that have been attached
              to the Stripe account. These may be bank accounts or cards.
            items:
              "$ref": "#/definitions/bank_account"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: ExternalAccountList
        type: object
        x-expandableFields:
        - data
      id:
        description: Unique identifier for the object.
        type: string
      legal_entity:
        "$ref": "#/definitions/legal_entity"
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - account
        type: string
      payout_schedule:
        "$ref": "#/definitions/transfer_schedule"
      payout_statement_descriptor:
        description: The text that appears on the bank account statement for payouts.
          If not set, this defaults to the platform's bank descriptor as set in the
          Dashboard.
        type: string
      payouts_enabled:
        description: Whether Stripe can send payouts to this account
        type: boolean
      product_description:
        description: Internal-only description of the product sold or service provided
          by the business. It's used by Stripe for risk and underwriting purposes.
        type: string
      statement_descriptor:
        description: The default text that appears on credit card statements when
          a charge is made [directly on the account](/docs/connect/direct-charges)
        type: string
      support_email:
        description: A publicly shareable support email address for the business
        type: string
      support_phone:
        description: A publicly shareable support phone number for the business
        type: string
      timezone:
        description: The timezone used in the Stripe Dashboard for this account. A
          list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones).
        type: string
      tos_acceptance:
        "$ref": "#/definitions/account_tos_acceptance"
      type:
        description: The Stripe account type. Can be `standard`, `express`, or `custom`.
        type: string
      verification:
        "$ref": "#/definitions/account_verification"
    required:
    - charges_enabled
    - country
    - default_currency
    - details_submitted
    - id
    - object
    - payouts_enabled
    - type
    title: Account
    type: object
    x-expandableFields:
    - business_logo
    - decline_charge_on
    - external_accounts
    - legal_entity
    - payout_schedule
    - tos_acceptance
    - verification
    x-resourceId: account
  account_debit_account:
    properties:
      id:
        description: Unique identifier for the object.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - account
        type: string
    required:
    - id
    - object
    title: AccountDebitAccount
    type: object
    x-expandableFields: []
    x-resourceId: account_debit_account
  account_decline_charge_on:
    properties:
      avs_failure:
        description: Whether Stripe should automatically decline charges with an incorrect
          ZIP or postal code. This setting only applies when a ZIP or postal code
          is provided and the bank specifically marks it as failed.
        type: boolean
      cvc_failure:
        description: Whether Stripe should automatically decline charges with an incorrect
          CVC. This setting only applies when a CVC is provided and the bank specifically
          marks it as failed.
        type: boolean
    required:
    - avs_failure
    - cvc_failure
    title: AccountDeclineChargeOn
    type: object
    x-expandableFields: []
  account_tos_acceptance:
    properties:
      date:
        description: The Unix timestamp marking when the Stripe Services Agreement
          was accepted by the account representative
        type: integer
      ip:
        description: The IP address from which the Stripe Services Agreement was accepted
          by the account representative
        type: string
      user_agent:
        description: The user agent of the browser from which the Stripe Services
          Agreement was accepted by the account representative
        type: string
    title: AccountTOSAcceptance
    type: object
    x-expandableFields: []
  account_verification:
    properties:
      disabled_reason:
        description: A string describing the reason for this account being unable
          to create charges or receive payouts, if that is the case. Can be `rejected.fraud`,
          `rejected.terms_of_service`, `rejected.listed`, `rejected.other`, `fields_needed`,
          `listed`, `under_review`, or `other`.
        type: string
      due_by:
        description: By what time the `fields_needed` must be provided. If this date
          is in the past, the account is already in bad standing, and providing `fields_needed`
          is necessary to re-enable payouts and prevent other consequences. If this
          date is in the future, `fields_needed` must be provided to ensure the account
          remains in good standing.
        type: integer
      fields_needed:
        description: Field names that need to be provided for the account to remain
          in good standing. Nested fields are separated by `.` (for example, `legal_entity.first_name`).
        type: array
        items:
            type: string
    required:
    - fields_needed
    title: AccountVerification
    type: object
    x-expandableFields: []
  account_with_keys:
    properties:
      business_logo:
        description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          A logo for this account (at least 128px x 128px)"
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/file_upload"
      business_name:
        description: The publicly visible name of the business
        type: string
      business_url:
        description: The publicly visible website of the business
        type: string
      charges_enabled:
        description: Whether the account can create live charges
        type: boolean
      country:
        description: The country of the account
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      debit_negative_balances:
        description: A Boolean indicating if Stripe should try to reclaim negative
          balances from an attached bank account. See our [Understanding Connect Account
          Balances](/docs/connect/account-balances) documentation for details.
        type: boolean
      decline_charge_on:
        "$ref": "#/definitions/account_decline_charge_on"
      default_currency:
        description: The currency this account has chosen to use as the default
        type: string
      details_submitted:
        description: Whether account details have been submitted. Standard accounts
          cannot receive payouts before this is true.
        type: boolean
      display_name:
        description: The display name for this account. This is used on the Stripe
          Dashboard to differentiate between accounts.
        type: string
      email:
        description: The primary user's email address.
        type: string
      external_accounts:
        description: External accounts (bank accounts and debit cards) currently attached
          to this account
        properties:
          data:
            description: The list contains all external accounts that have been attached
              to the Stripe account. These may be bank accounts or cards.
            items:
              "$ref": "#/definitions/bank_account"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: ExternalAccountList
        type: object
        x-expandableFields:
        - data
      id:
        description: Unique identifier for the object.
        type: string
      keys:
        type: object
      legal_entity:
        "$ref": "#/definitions/legal_entity"
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - account
        type: string
      payout_schedule:
        "$ref": "#/definitions/transfer_schedule"
      payout_statement_descriptor:
        description: The text that appears on the bank account statement for payouts.
          If not set, this defaults to the platform's bank descriptor as set in the
          Dashboard.
        type: string
      payouts_enabled:
        description: Whether Stripe can send payouts to this account
        type: boolean
      product_description:
        description: Internal-only description of the product sold or service provided
          by the business. It's used by Stripe for risk and underwriting purposes.
        type: string
      statement_descriptor:
        description: The default text that appears on credit card statements when
          a charge is made [directly on the account](/docs/connect/direct-charges)
        type: string
      support_email:
        description: A publicly shareable support email address for the business
        type: string
      support_phone:
        description: A publicly shareable support phone number for the business
        type: string
      timezone:
        description: The timezone used in the Stripe Dashboard for this account. A
          list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones).
        type: string
      tos_acceptance:
        "$ref": "#/definitions/account_tos_acceptance"
      type:
        description: The Stripe account type. Can be `standard`, `express`, or `custom`.
        type: string
      verification:
        "$ref": "#/definitions/account_verification"
    required:
    - charges_enabled
    - country
    - default_currency
    - details_submitted
    - id
    - keys
    - object
    - payouts_enabled
    - type
    title: AccountWithKeys
    type: object
    x-expandableFields:
    - business_logo
    - decline_charge_on
    - external_accounts
    - legal_entity
    - payout_schedule
    - tos_acceptance
    - verification
    x-resourceId: account_with_keys
  address:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
      country:
        description: 2-letter country code.
        type: string
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
      postal_code:
        description: ZIP or postal code
        type: string
      state:
        description: State/County/Province/Region.
        type: string
    title: Address
    type: object
    x-expandableFields: []
  alipay_account:
    properties:
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      customer:
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/customer"
          - "$ref": "#/definitions/deleted_object"
      fingerprint:
        description: Uniquely identifies the account and will be the same across all
          Alipay account objects that are linked to the same Alipay account.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - alipay_account
        type: string
      payment_amount:
        description: If the Alipay account object is not reusable, the exact amount
          that you can create a charge for.
        type: integer
      payment_currency:
        description: If the Alipay account object is not reusable, the exact currency
          that you can create a charge for.
        type: string
      reusable:
        description: True if you can create multiple payments using this account.
          If the account is reusable, then you can freely choose the amount of each
          payment.
        type: boolean
      used:
        description: Whether this Alipay account object has ever been used for a payment.
        type: boolean
      username:
        description: The username for the Alipay account.
        type: string
    required:
    - created
    - fingerprint
    - id
    - livemode
    - object
    - reusable
    - used
    - username
    title: AlipayAccount
    type: object
    x-expandableFields:
    - customer
    x-resourceId: alipay_account
  apple_pay_domain:
    properties:
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      domain_name:
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - apple_pay_domain
        type: string
    required:
    - created
    - domain_name
    - id
    - livemode
    - object
    title: ApplePayDomain
    type: object
    x-expandableFields: []
    x-resourceId: apple_pay_domain
  application:
    properties:
      id:
        description: Unique identifier for the object.
        type: string
      name:
        description: The name of the application.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - application
        type: string
    required:
    - id
    - object
    title: Application
    type: object
    x-expandableFields: []
  backwards_compatible_platform_earning:
    properties:
      account:
        description: ID of the Stripe account this fee was taken from.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account"
      amount:
        description: Amount earned, in %s.
        type: integer
      amount_refunded:
        description: Amount in %s refunded (can be less than the amount attribute
          on the fee if a partial refund was issued)
        type: integer
      application:
        description: ID of the Connect application that earned the fee.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/application"
      balance_transaction:
        description: Balance transaction that describes the impact of this collected
          application fee on your account balance (not including refunds).
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      charge:
        description: ID of the charge that the application fee was taken from.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - application_fee
        type: string
      originating_transaction:
        description: ID of the corresponding charge on the platform account, if this
          fee was the result of a charge using the `destination` parameter.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
          - "$ref": "#/definitions/transfer"
      refunded:
        description: Whether the fee has been fully refunded. If the fee is only partially
          refunded, this attribute will still be false.
        type: boolean
      refunds:
        description: A list of refunds that have been applied to the fee.
        properties:
          data:
            items:
              "$ref": "#/definitions/fee_refund"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: FeeRefundList
        type: object
        x-expandableFields:
        - data
    required:
    - account
    - amount
    - amount_refunded
    - application
    - balance_transaction
    - charge
    - created
    - currency
    - id
    - livemode
    - object
    - refunded
    - refunds
    title: BackwardsCompatiblePlatformEarning
    type: object
    x-expandableFields:
    - account
    - application
    - balance_transaction
    - charge
    - originating_transaction
    - refunds
  balance:
    properties:
      available:
        description: Funds that are available to be paid out, whether automatically
          by Stripe or explicitly via the [transfers API](#transfers). The available
          balance for each currency and payment type can be found in the `source_types`
          property.
        type: array
        items:
          type: string
      connect_reserved:
        description: Funds held due to negative balances on connected Custom accounts.
          The connect reserve balance for each currency and payment type can be found
          in the `source_types` property.
        type: array
        items:
          type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - balance
        type: string
      pending:
        description: Funds that are not yet available in the balance, due to the 7-day
          rolling pay cycle. The pending balance for each currency, and for each payment
          type, can be found in the `source_types` property.
        type: array
        items:
          type: string
    required:
    - available
    - livemode
    - object
    - pending
    title: Balance
    type: object
    x-expandableFields: []
    x-resourceId: balance
  balance_transaction:
    properties:
      amount:
        description: Gross amount of the transaction, in %s.
        type: integer
      available_on:
        description: The date the transaction's net funds will become available in
          the Stripe balance.
        type: integer
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      exchange_rate:
        type: number
      fee:
        description: Fees (in %s) paid for this transaction.
        type: integer
      fee_details:
        description: Detailed breakdown of fees (in %s) paid for this transaction.
        items:
          "$ref": "#/definitions/fee"
        type: array
      id:
        description: Unique identifier for the object.
        type: string
      net:
        description: Net amount of the transaction, in %s.
        type: integer
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - balance_transaction
        type: string
      source:
        description: The Stripe object to which this transaction is related.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/bitcoin_transaction"
          - "$ref": "#/definitions/charge"
          - "$ref": "#/definitions/dispute"
          - "$ref": "#/definitions/fee_refund"
          - "$ref": "#/definitions/payout"
          - "$ref": "#/definitions/transfer"
          - "$ref": "#/definitions/transfer_recipient_transfer"
          - "$ref": "#/definitions/platform_fee"
          - "$ref": "#/definitions/refund"
          - "$ref": "#/definitions/reserve_transaction"
          - "$ref": "#/definitions/transfer_reversal"
          - "$ref": "#/definitions/connect_collection_transfer"
          - "$ref": "#/definitions/topup"
      status:
        description: If the transaction's net funds are available in the Stripe balance
          yet. Either `available` or `pending`.
        type: string
      type:
        description: 'Transaction type: `adjustment`, `application_fee`, `application_fee_refund`,
          `charge`, `payment`, `payment_failure_refund`, `payment_refund`, `refund`,
          `transfer`, `transfer_refund`, `payout`, `payout_cancel`, `payout_failure`,
          `validation`, `stripe_fee`, or `network_cost`.'
        type: string
    required:
    - amount
    - available_on
    - created
    - currency
    - fee
    - fee_details
    - id
    - net
    - object
    - status
    - type
    title: BalanceTransaction
    type: object
    x-expandableFields:
    - fee_details
    - source
    x-resourceId: balance_transaction
  bank_account:
    properties:
      account:
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account"
      account_holder_name:
        description: The name of the person or business that owns the bank account.
        type: string
      account_holder_type:
        description: The type of entity that holds the account. This can be either
          `individual` or `company`.
        type: string
      bank_name:
        description: Name of the bank associated with the routing number (e.g., `WELLS
          FARGO`).
        type: string
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        type: string
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/payouts)
          paid out to the bank account.
        type: string
      customer:
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/customer"
          - "$ref": "#/definitions/deleted_object"
      default_for_currency:
        description: Whether this external account is the default account for its
          currency.
        type: boolean
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      last4:
        type: string
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - bank_account
        type: string
      routing_number:
        description: The routing transit number for the bank account.
        type: string
      status:
        description: Possible values are `new`, `validated`, `verified`, `verification_failed`,
          or `errored`. A bank account that hasn't had any activity or validation
          performed is `new`. If Stripe can determine that the bank account exists,
          its status will be `validated`. Note that there often isn’t enough information
          to know (e.g., for smaller credit unions), and the validation is not always
          run. If customer bank account verification has succeeded, the bank account
          status will be `verified`. If the verification failed for any reason, such
          as microdeposit failure, the status will be `verification_failed`. If a
          transfer sent to this bank account fails, we'll set the status to `errored`
          and will not continue to send transfers until the bank details are updated.
        type: string
    required:
    - country
    - currency
    - id
    - last4
    - object
    - status
    title: BankAccount
    type: object
    x-expandableFields:
    - account
    - customer
    x-resourceId: bank_account
  bitcoin_receiver:
    properties:
      active:
        description: True when this bitcoin receiver has received a non-zero amount
          of bitcoin.
        type: boolean
      amount:
        description: The amount of `currency` that you are collecting as payment.
        type: integer
      amount_received:
        description: The amount of `currency` to which `bitcoin_amount_received` has
          been converted.
        type: integer
      bitcoin_amount:
        description: 'The amount of bitcoin that the customer should send to fill
          the receiver. The `bitcoin_amount` is denominated in Satoshi: there are
          10^8 Satoshi in one bitcoin.'
        type: integer
      bitcoin_amount_received:
        description: The amount of bitcoin that has been sent by the customer to this
          receiver.
        type: integer
      bitcoin_uri:
        description: This URI can be displayed to the customer as a clickable link
          (to activate their bitcoin client) or as a QR code (for mobile wallets).
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/currencies)
          to which the bitcoin will be converted.
        type: string
      customer:
        type: string
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      email:
        description: The customer's email address, set by the API call that creates
          the receiver.
        type: string
      filled:
        description: This flag is initially false and updates to true when the customer
          sends the `bitcoin_amount` to this receiver.
        type: boolean
      id:
        description: Unique identifier for the object.
        type: string
      inbound_address:
        description: A bitcoin address that is specific to this receiver. The customer
          can send bitcoin to this address to fill the receiver.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - bitcoin_receiver
        type: string
      payment:
        description: The ID of the payment created from the receiver, if any. Hidden
          when viewing the receiver with a publishable key.
        type: string
      refund_address:
        type: string
      transactions:
        description: A list with one entry for each time that the customer sent bitcoin
          to the receiver. Hidden when viewing the receiver with a publishable key.
        properties:
          data:
            items:
              "$ref": "#/definitions/bitcoin_transaction"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: BitcoinTransactionList
        type: object
        x-expandableFields:
        - data
      uncaptured_funds:
        description: This receiver contains uncaptured funds that can be used for
          a payment or refunded.
        type: boolean
      used_for_payment:
        type: boolean
    required:
    - active
    - amount
    - amount_received
    - bitcoin_amount
    - bitcoin_amount_received
    - bitcoin_uri
    - created
    - currency
    - filled
    - id
    - inbound_address
    - livemode
    - metadata
    - object
    - uncaptured_funds
    title: BitcoinReceiver
    type: object
    x-expandableFields:
    - transactions
    x-resourceId: bitcoin_receiver
  bitcoin_transaction:
    properties:
      amount:
        description: The amount of `currency` that the transaction was converted to
          in real-time.
        type: integer
      bitcoin_amount:
        description: The amount of bitcoin contained in the transaction.
        type: integer
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/currencies)
          to which this transaction was converted.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - bitcoin_transaction
        type: string
      receiver:
        description: The receiver to which this transaction was sent.
        type: string
    required:
    - amount
    - bitcoin_amount
    - created
    - currency
    - id
    - object
    - receiver
    title: BitcoinTransaction
    type: object
    x-expandableFields: []
    x-resourceId: bitcoin_transaction
  card:
    properties:
      account:
        description: The account this card belongs to. This attribute will not be
          in the card object if the card belongs to a customer or recipient instead.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account"
      address_city:
        description: City/District/Suburb/Town/Village.
        type: string
      address_country:
        description: Billing address country, if provided when creating card.
        type: string
      address_line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
      address_line1_check:
        description: 'If `address_line1` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        type: string
      address_line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
      address_state:
        description: State/County/Province/Region.
        type: string
      address_zip:
        description: ZIP or postal code.
        type: string
      address_zip_check:
        description: 'If `address_zip` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        type: string
      available_payout_methods:
        description: A set of available payout methods for this card. Will be either
          `["standard"]` or `["standard", "instant"]`. Only values from this set should
          be passed as the `method` when creating a transfer.
        items:
          type: string
        type: array
      brand:
        description: Card brand. Can be `American Express`, `Diners Club`, `Discover`,
          `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.
        type: string
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      currency:
        description: Three-letter [ISO code for currency](https://stripe.com/docs/payouts).
          Only applicable on accounts (not customers or recipients). The card can
          be used as a transfer destination for funds in this currency.
        type: string
      customer:
        description: The customer that this card belongs to. This attribute will not
          be in the card object if the card belongs to an account or recipient instead.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/customer"
          - "$ref": "#/definitions/deleted_object"
      cvc_check:
        description: 'If a CVC was provided, results of the check: `pass`, `fail`,
          `unavailable`, or `unchecked`.'
        type: string
      default_for_currency:
        description: Only applicable on accounts (not customers or recipients). This
          indicates whether this card is the default external account for its currency.
        type: boolean
      dynamic_last4:
        description: "(For tokenized numbers only.) The last four digits of the device
          account number."
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        description: Uniquely identifies this particular card number. You can use
          this attribute to check whether two customers who've signed up with you
          are using the same card number, for example.
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      last4:
        description: The last four digits of the card.
        type: string
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      name:
        description: Cardholder name.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - card
        type: string
      recipient:
        description: The recipient that this card belongs to. This attribute will
          not be in the card object if the card belongs to a customer or account instead.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/transfer_recipient"
      tokenization_method:
        description: If the card number is tokenized, this is the method that was
          used. Can be `apple_pay` or `android_pay`.
        type: string
    required:
    - brand
    - exp_month
    - exp_year
    - funding
    - id
    - last4
    - metadata
    - object
    title: Card
    type: object
    x-expandableFields:
    - account
    - customer
    - recipient
    x-resourceId: card
  charge:
    properties:
      amount:
        description: A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal)
          (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency)
          representing how much to charge. The minimum amount is $0.50 US or [equivalent
          in charge currency](https://support.stripe.com/questions/what-is-the-minimum-amount-i-can-charge-with-stripe).
        type: integer
      amount_refunded:
        description: Amount in %s refunded (can be less than the amount attribute
          on the charge if a partial refund was issued).
        type: integer
      application:
        description: ID of the Connect application that created the charge.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/application"
      application_fee:
        description: The application fee (if any) for the charge. [See the Connect
          documentation](/docs/connect/direct-charges#collecting-fees) for details.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/backwards_compatible_platform_earning"
          - "$ref": "#/definitions/platform_fee"
      balance_transaction:
        description: ID of the balance transaction that describes the impact of this
          charge on your account balance (not including refunds or disputes).
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      captured:
        description: If the charge was created without capturing, this Boolean represents
          whether it is still uncaptured or has since been captured.
        type: boolean
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        description: ID of the customer this charge is for if one exists.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/customer"
          - "$ref": "#/definitions/deleted_object"
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      destination:
        description: The account (if any) the charge was made on behalf of, with an
          automatic transfer. [See the Connect documentation](/docs/connect/destination-charges)
          for details.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account"
      dispute:
        description: Details about the dispute if the charge has been disputed.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/dispute"
      failure_code:
        description: Error code explaining reason for charge failure if available
          (see [the errors section](/docs/api#errors) for a list of codes).
        type: string
      failure_message:
        description: Message to user further explaining reason for charge failure
          if available.
        type: string
      fraud_details:
        description: Hash with information on fraud assessments for the charge. Assessments
          reported by you have the key `user_report` and, if set, possible values
          of `safe` and `fraudulent`. Assessments from Stripe have the key `stripe_report`
          and, if set, the value `fraudulent`.
        type: object
      id:
        description: Unique identifier for the object.
        type: string
      invoice:
        description: ID of the invoice this charge is for if one exists.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/invoice"
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - charge
        type: string
      on_behalf_of:
        description: The account (if any) the charge was made on behalf of without
          triggering an automatic transfer. See the [Connect documentation](/docs/connect/charges-transfers)
          for details.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account"
      order:
        description: ID of the order this charge is for if one exists.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/order"
      outcome:
        "$ref": "#/definitions/charge_outcome"
      paid:
        description: "`true` if the charge succeeded, or was successfully authorized
          for later capture."
        type: boolean
      receipt_email:
        description: This is the email address that the receipt for this charge was
          sent to.
        type: string
      receipt_number:
        description: This is the transaction number that appears on email receipts
          sent for this charge. This attribute will be `null` until a receipt has
          been sent.
        type: string
      refunded:
        description: Whether the charge has been fully refunded. If the charge is
          only partially refunded, this attribute will still be false.
        type: boolean
      refunds:
        description: A list of refunds that have been applied to the charge.
        properties:
          data:
            items:
              "$ref": "#/definitions/refund"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: RefundList
        type: object
        x-expandableFields:
        - data
      review:
        description: ID of the review associated with this charge if one exists.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/radar_review"
      shipping:
        "$ref": "#/definitions/shipping"
      source:
        "$ref": "#/definitions/account_debit_account"
      source_transfer:
        description: The transfer ID which created this charge. Only present if the
          charge came from another Stripe account. [See the Connect documentation](/docs/connect/destination-charges)
          for details.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/transfer"
      statement_descriptor:
        description: Extra information about a charge. This will appear on your customer's
          credit card statement. It must contain at least one letter.
        type: string
      status:
        description: The status of the payment is either `succeeded`, `pending`, or
          `failed`.
        type: string
      transfer:
        description: ID of the transfer to the `destination` account (only applicable
          if the charge was created using the `destination` parameter).
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/transfer"
      transfer_group:
        description: A string that identifies this transaction as part of a group.
          See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions)
          for details.
        type: string
    required:
    - amount
    - amount_refunded
    - captured
    - created
    - currency
    - id
    - livemode
    - metadata
    - object
    - paid
    - refunded
    - refunds
    - source
    - status
    title: Charge
    type: object
    x-expandableFields:
    - application
    - application_fee
    - balance_transaction
    - customer
    - destination
    - dispute
    - invoice
    - on_behalf_of
    - order
    - outcome
    - refunds
    - review
    - shipping
    - source
    - source_transfer
    - transfer
    x-resourceId: charge
  charge_outcome:
    properties:
      network_status:
        description: Possible values are `approved_by_network`, `declined_by_network`,
          `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval`
          indicates the payment was [blocked by Stripe](/docs/declines#blocked-payments)
          after bank authorization, and may temporarily appear as "pending" on a cardholder's
          statement.
        type: string
      reason:
        description: An enumerated value providing a more detailed explanation of
          the outcome's `type`. Charges blocked by Radar's default block rule have
          the value `highest_risk_level`. Charges placed in review by Radar's default
          review rule have the value `elevated_risk_level`. Charges authorized, blocked,
          or placed in review by custom rules have the value `rule`. See [understanding
          declines](/docs/declines) for more details.
        type: string
      risk_level:
        description: Stripe's evaluation of the riskiness of the payment. Possible
          values for evaluated payments are `normal`, `elevated`, `highest`. For non-card
          payments, and card-based payments predating the public assignment of risk
          levels, this field will have the value `not_assessed`. In the event of an
          error in the evaluation, this field will have the value `unknown`.
        type: string
      rule:
        description: The ID of the Radar rule that matched the payment, if applicable.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/radar_rule"
      seller_message:
        description: A human-readable description of the outcome type and reason,
          designed for you (the recipient of the payment), not your customer.
        type: string
      type:
        description: Possible values are `authorized`, `manual_review`, `issuer_declined`,
          `blocked`, and `invalid`. See [understanding declines](/docs/declines) and
          [Radar reviews](radar/review) for details.
        type: string
    required:
    - type
    title: ChargeOutcome
    type: object
    x-expandableFields:
    - rule
  connect_collection_transfer:
    properties:
      amount:
        description: Amount transferred, in %s.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      destination:
        description: ID of the account that funds are being collected for.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account"
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - connect_collection_transfer
        type: string
    required:
    - amount
    - currency
    - destination
    - id
    - livemode
    - object
    title: ConnectCollectionTransfer
    type: object
    x-expandableFields:
    - destination
  country_spec:
    properties:
      default_currency:
        description: The default currency for this country. This applies to both payment
          methods and bank accounts.
        type: string
      id:
        description: Unique identifier for the object. Represented as the ISO country
          code for this country.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - country_spec
        type: string
      supported_bank_account_currencies:
        description: Currencies that can be accepted in the specific country (for
          transfers).
        type: object
      supported_payment_currencies:
        description: Currencies that can be accepted in the specified country (for
          payments).
        items:
          type: string
        type: array
      supported_payment_methods:
        description: Payment methods available in the specified country. You may need
          to enable some payment methods (e.g., [ACH](https://stripe.com/docs/ach))
          on your account before they appear in this list. The `stripe` payment method
          refers to [charging through your platform](https://stripe.com/docs/connect/destination-charges).
        items:
          type: string
        type: array
      supported_transfer_countries:
        description: Countries that can accept transfers from the specified country.
        items:
          type: string
        type: array
      verification_fields:
        description: Lists the types of verification data needed to keep an account
          open. Includes 'minimum' fields, which every account must eventually provide,
          as well as a 'additional' fields, which are only required for some users.
        type: object
    required:
    - default_currency
    - id
    - object
    - supported_bank_account_currencies
    - supported_payment_currencies
    - supported_payment_methods
    - supported_transfer_countries
    - verification_fields
    title: CountrySpec
    type: object
    x-expandableFields: []
    x-resourceId: country_spec
  coupon:
    properties:
      amount_off:
        description: Amount (in the `currency` specified) that will be taken off the
          subtotal of any invoices for this customer.
        type: integer
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: If `amount_off` has been set, the three-letter [ISO code for
          the currency](https://stripe.com/docs/currencies) of the amount to take
          off.
        type: string
      duration:
        description: One of `forever`, `once`, and `repeating`. Describes how long
          a customer who applies this coupon will get the discount.
        enum:
        - forever
        - once
        - repeating
        type: string
      duration_in_months:
        description: If `duration` is `repeating`, the number of months the coupon
          applies. Null if coupon `duration` is `forever` or `once`.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      max_redemptions:
        description: Maximum number of times this coupon can be redeemed, in total,
          before it is no longer valid.
        type: integer
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      name:
        description: Name of the coupon displayed to customers on for instance invoices
          or receipts.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - coupon
        type: string
      percent_off:
        description: Percent that will be taken off the subtotal of any invoices for
          this customer for the duration of the coupon. For example, a coupon with
          percent_off of 50 will make a %s100 invoice %s50 instead.
        type: integer
      redeem_by:
        description: Date after which the coupon can no longer be redeemed.
        type: integer
      times_redeemed:
        description: Number of times this coupon has been applied to a customer.
        type: integer
      valid:
        description: Taking account of the above properties, whether this coupon can
          still be applied to a customer.
        type: boolean
    required:
    - created
    - duration
    - id
    - livemode
    - metadata
    - object
    - times_redeemed
    - valid
    title: Coupon
    type: object
    x-expandableFields: []
    x-resourceId: coupon
  customer:
    properties:
      account_balance:
        description: Current balance, if any, being stored on the customer's account.
          If negative, the customer has credit to apply to the next invoice. If positive,
          the customer has an amount owed that will be added to the next invoice.
          The balance does not refer to any unpaid invoices; it solely takes into
          account amounts that have yet to be successfully applied to any invoice.
          This balance is only taken into account for recurring billing purposes (i.e.,
          subscriptions, invoices, invoice items).
        type: integer
      business_vat_id:
        description: The customer's VAT identification number. Appears on invoices
          emailed to this customer.
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/currencies)
          the customer can be charged in for recurring billing purposes.
        type: string
      default_source:
        description: ID of the default source attached to this customer.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account_debit_account"
          - "$ref": "#/definitions/alipay_account"
          - "$ref": "#/definitions/bank_account"
          - "$ref": "#/definitions/bitcoin_receiver"
          - "$ref": "#/definitions/card"
          - "$ref": "#/definitions/source"
      delinquent:
        description: When the customer's latest invoice is billed by charging automatically,
          delinquent is true if the invoice's latest charge is failed. When the customer's
          latest invoice is billed by sending an invoice, delinquent is true if the
          invoice is not paid by its due date.
        type: boolean
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      discount:
        "$ref": "#/definitions/discount"
      email:
        description: The customer's email address.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      invoice_prefix:
        description: The prefix for the customer used to generate unique invoice numbers.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - customer
        type: string
      shipping:
        "$ref": "#/definitions/customer_shipping"
      sources:
        description: The customer's payment sources, if any.
        properties:
          data:
            description: The list contains all payment sources that have been attached
              to the customer.
            items:
              "$ref": "#/definitions/account_debit_account"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: SourceList
        type: object
        x-expandableFields:
        - data
      subscriptions:
        description: The customer's current subscriptions, if any.
        properties:
          data:
            items:
              "$ref": "#/definitions/subscription"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: SubscriptionList
        type: object
        x-expandableFields:
        - data
    required:
    - created
    - id
    - livemode
    - object
    - sources
    title: Customer
    type: object
    x-expandableFields:
    - default_source
    - discount
    - shipping
    - sources
    - subscriptions
    x-resourceId: customer
  customer_shipping:
    properties:
      address:
        "$ref": "#/definitions/address"
      name:
        description: Customer name.
        type: string
      phone:
        description: Customer phone (including extension).
        type: string
    required:
    - address
    - name
    title: CustomerShipping
    type: object
    x-expandableFields:
    - address
  customer_source:
    properties:
      id:
        description: Unique identifier for the object.
        type: string
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - bank_account
        type: string
    required:
    - id
    - object
    title: Polymorphic
    type: object
    x-polymorphicResources:
      oneOf:
      - "$ref": "#/definitions/alipay_account"
      - "$ref": "#/definitions/bank_account"
      - "$ref": "#/definitions/bitcoin_receiver"
      - "$ref": "#/definitions/card"
      - "$ref": "#/definitions/source"
    x-resourceId: customer_source
  customer_source_create:
    properties:
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/payouts)
          paid out to the bank account.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - bank_account
        type: string
    required:
    - currency
    - id
    - object
    title: Polymorphic
    type: object
    x-polymorphicResources:
      oneOf:
      - "$ref": "#/definitions/bank_account"
      - "$ref": "#/definitions/card"
      - "$ref": "#/definitions/source"
    x-resourceId: customer_source_create
  deleted_bank_account:
    properties:
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/payouts)
          paid out to the bank account.
        type: string
      deleted:
        description: Always true for a deleted object
        enum:
        - true
        type: boolean
      id:
        description: Unique identifier for the object.
        type: string
    required:
    - deleted
    - id
    title: DeletedBankAccount
    type: object
    x-expandableFields: []
    x-resourceId: deleted_bank_account
  deleted_card:
    properties:
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/payouts)
          paid out to the bank account.
        type: string
      deleted:
        description: Always true for a deleted object
        enum:
        - true
        type: boolean
      id:
        description: Unique identifier for the object.
        type: string
    required:
    - deleted
    - id
    title: DeletedCard
    type: object
    x-expandableFields: []
    x-resourceId: deleted_card
  deleted_discount:
    properties:
      deleted:
        description: Always true for a deleted object
        enum:
        - true
        type: boolean
    required:
    - deleted
    title: DeletedDiscount
    type: object
    x-expandableFields: []
    x-resourceId: deleted_discount
  deleted_object:
    properties:
      deleted:
        description: Always true for a deleted object
        enum:
        - true
        type: boolean
      id:
        description: Unique identifier for the object.
        type: string
    required:
    - deleted
    - id
    title: DeletedObject
    type: object
    x-expandableFields: []
    x-resourceId: deleted_object
  deleted_product:
    properties:
      deleted:
        description: Always true for a deleted object
        enum:
        - true
        type: boolean
      id:
        description: Unique identifier for the object.
        type: string
    required:
    - deleted
    - id
    title: DeletedProduct
    type: object
    x-expandableFields: []
    x-resourceId: deleted_product
  delivery_estimate:
    properties:
      date:
        description: If `type` is `"exact"`, `date` will be the expected delivery
          date in the format YYYY-MM-DD.
        type: string
      earliest:
        description: If `type` is `"range"`, `earliest` will be be the earliest delivery
          date in the format YYYY-MM-DD.
        type: string
      latest:
        description: If `type` is `"range"`, `latest` will be the latest delivery
          date in the format YYYY-MM-DD.
        type: string
      type:
        description: The type of estimate. Must be either `"range"` or `"exact"`.
        type: string
    required:
    - type
    title: DeliveryEstimate
    type: object
    x-expandableFields: []
  discount:
    properties:
      coupon:
        "$ref": "#/definitions/coupon"
      customer:
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/customer"
          - "$ref": "#/definitions/deleted_object"
      end:
        description: If the coupon has a duration of `repeating`, the date that this
          discount will end. If the coupon has a duration of `once` or `forever`,
          this attribute will be null.
        type: integer
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - discount
        type: string
      start:
        description: Date that the coupon was applied.
        type: integer
      subscription:
        description: The subscription that this coupon is applied to, if it is applied
          to a particular subscription.
        type: string
    required:
    - coupon
    - object
    - start
    title: Discount
    type: object
    x-expandableFields:
    - coupon
    - customer
    x-resourceId: discount
  dispute:
    properties:
      amount:
        description: Disputed amount. Usually the amount of the charge, but can differ
          (usually because of currency fluctuation or because only part of the order
          is disputed).
        type: integer
      balance_transactions:
        description: List of zero, one, or two balance transactions that show funds
          withdrawn and reinstated to your Stripe account as a result of this dispute.
        items:
          "$ref": "#/definitions/balance_transaction"
        type: array
      charge:
        description: ID of the charge that was disputed.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      evidence:
        "$ref": "#/definitions/dispute_evidence"
      evidence_details:
        "$ref": "#/definitions/dispute_evidence_details"
      id:
        description: Unique identifier for the object.
        type: string
      is_charge_refundable:
        description: If true, it is still possible to refund the disputed payment.
          Once the payment has been fully refunded, no further funds will be withdrawn
          from your Stripe account as a result of this dispute.
        type: boolean
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - dispute
        type: string
      reason:
        description: Reason given by cardholder for dispute. Possible values are `duplicate`,
          `fraudulent`, `subscription_canceled`, `product_unacceptable`, `product_not_received`,
          `unrecognized`, `credit_not_processed`, `general`, `incorrect_account_details`,
          `insufficient_funds`, `bank_cannot_process`, `debit_not_authorized`, or
          `customer_initiated`. Read more about [dispute reasons](/docs/disputes/categories).
        type: string
      status:
        description: Current status of dispute. Possible values are `warning_needs_response`,
          `warning_under_review`, `warning_closed`, `needs_response`, `under_review`,
          `charge_refunded`, `won`, or `lost`.
        enum:
        - charge_refunded
        - lost
        - needs_response
        - under_review
        - warning_closed
        - warning_needs_response
        - warning_under_review
        - won
        type: string
    required:
    - amount
    - balance_transactions
    - charge
    - created
    - currency
    - evidence
    - evidence_details
    - id
    - is_charge_refundable
    - livemode
    - metadata
    - object
    - reason
    - status
    title: Dispute
    type: object
    x-expandableFields:
    - balance_transactions
    - charge
    - evidence
    - evidence_details
    x-resourceId: dispute
  dispute_evidence:
    properties:
      access_activity_log:
        description: Any server or activity logs showing proof that the customer accessed
          or downloaded the purchased digital product. This information should include
          IP addresses, corresponding timestamps, and any detailed recorded activity.
        type: string
      billing_address:
        description: The billing address provided by the customer.
        type: string
      cancellation_policy:
        description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Your subscription cancellation policy, as shown to the customer."
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/file_upload"
      cancellation_policy_disclosure:
        description: An explanation of how and when the customer was shown your refund
          policy prior to purchase.
        type: string
      cancellation_rebuttal:
        description: A justification for why the customer's subscription was not canceled.
        type: string
      customer_communication:
        description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Any communication with the customer that you feel is relevant to your case.
          Examples include emails proving that the customer received the product or
          service, or demonstrating their use of or satisfaction with the product
          or service."
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/file_upload"
      customer_email_address:
        description: The email address of the customer.
        type: string
      customer_name:
        description: The name of the customer.
        type: string
      customer_purchase_ip:
        description: The IP address that the customer used when making the purchase.
        type: string
      customer_signature:
        description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          A relevant document or contract showing the customer's signature."
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/file_upload"
      duplicate_charge_documentation:
        description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Documentation for the prior charge that can uniquely identify the charge,
          such as a receipt, shipping label, work order, etc. This document should
          be paired with a similar document from the disputed payment that proves
          the two payments are separate."
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/file_upload"
      duplicate_charge_explanation:
        description: An explanation of the difference between the disputed charge
          versus the prior charge that appears to be a duplicate.
        type: string
      duplicate_charge_id:
        description: The Stripe ID for the prior charge which appears to be a duplicate
          of the disputed charge.
        type: string
      product_description:
        description: A description of the product or service that was sold.
        type: string
      receipt:
        description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Any receipt or message sent to the customer notifying them of the charge."
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/file_upload"
      refund_policy:
        description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Your refund policy, as shown to the customer."
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/file_upload"
      refund_policy_disclosure:
        description: Documentation demonstrating that the customer was shown your
          refund policy prior to purchase.
        type: string
      refund_refusal_explanation:
        description: A justification for why the customer is not entitled to a refund.
        type: string
      service_date:
        description: The date on which the customer received or began receiving the
          purchased service, in a clear human-readable format.
        type: string
      service_documentation:
        description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Documentation showing proof that a service was provided to the customer.
          This could include a copy of a signed contract, work order, or other form
          of written agreement."
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/file_upload"
      shipping_address:
        description: The address to which a physical product was shipped. You should
          try to include as complete address information as possible.
        type: string
      shipping_carrier:
        description: The delivery service that shipped a physical product, such as
          Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase,
          please separate them with commas.
        type: string
      shipping_date:
        description: The date on which a physical product began its route to the shipping
          address, in a clear human-readable format.
        type: string
      shipping_documentation:
        description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Documentation showing proof that a product was shipped to the customer at
          the same address the customer provided to you. This could include a copy
          of the shipment receipt, shipping label, etc. It should show the customer's
          full shipping address, if possible."
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/file_upload"
      shipping_tracking_number:
        description: The tracking number for a physical product, obtained from the
          delivery service. If multiple tracking numbers were generated for this purchase,
          please separate them with commas.
        type: string
      uncategorized_file:
        description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Any additional evidence or statements."
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/file_upload"
      uncategorized_text:
        description: Any additional evidence or statements.
        type: string
    title: DisputeEvidence
    type: object
    x-expandableFields:
    - cancellation_policy
    - customer_communication
    - customer_signature
    - duplicate_charge_documentation
    - receipt
    - refund_policy
    - service_documentation
    - shipping_documentation
    - uncategorized_file
  dispute_evidence_details:
    properties:
      due_by:
        description: Date by which evidence must be submitted in order to successfully
          challenge dispute. Will be null if the customer's bank or credit card company
          doesn't allow a response for this particular dispute.
        type: integer
      has_evidence:
        description: Whether evidence has been staged for this dispute.
        type: boolean
      past_due:
        description: Whether the last evidence submission was submitted past the due
          date. Defaults to `false` if no evidence submissions have occurred. If `true`,
          then delivery of the latest evidence is *not* guaranteed.
        type: boolean
      submission_count:
        description: The number of times evidence has been submitted. Typically, you
          may only submit evidence once.
        type: integer
    required:
    - has_evidence
    - past_due
    - submission_count
    title: DisputeEvidenceDetails
    type: object
    x-expandableFields: []
  ephemeral_key:
    properties:
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      expires:
        description: Time at which the key will expire. Measured in seconds since
          the Unix epoch.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - ephemeral_key
        type: string
    required:
    - created
    - expires
    - id
    - livemode
    - object
    title: EphemeralKey
    type: object
    x-expandableFields: []
    x-resourceId: ephemeral_key
  ephemeral_key_with_secret:
    properties:
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      expires:
        description: Time at which the key will expire. Measured in seconds since
          the Unix epoch.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - ephemeral_key
        type: string
      secret:
        description: The key's secret. You can use this value to make authorized requests
          to the Stripe API.
        type: string
    required:
    - created
    - expires
    - id
    - livemode
    - object
    - secret
    title: EphemeralKeyWithSecret
    type: object
    x-expandableFields: []
    x-resourceId: ephemeral_key_with_secret
  error:
    description: An error response from the Stripe API
    properties:
      error:
        description: A description of the error.
        properties:
          charge:
            description: For card errors, the ID of the failed charge.
            type: string
          code:
            description: For some errors that could be handled programmatically, a
              short string indicating the [error code](/docs/error-codes) reported.
            type: string
          decline_code:
            description: For card errors resulting from a card issuer decline, a short
              string indicating the [card issuer's reason for the decline](/docs/declines#issuer-declines)
              if they provide one.
            type: string
          doc_url:
            description: A URL to more information about the [error code](/docs/error-codes)
              reported.
            type: string
          message:
            description: A human-readable message providing more details about the
              error. For card errors, these messages can be shown to your users.
            type: string
          param:
            description: If the error is parameter-specific, the parameter related
              to the error. For example, you can use this to display a message near
              the correct form field.
            type: string
          type:
            description: The type of error returned. One of `api_connection_error`,
              `api_error`, `authentication_error`, `card_error`, `idempotency_error`,
              `invalid_request_error`, or `rate_limit_error`
            enum:
            - api_connection_error
            - api_error
            - authentication_error
            - card_error
            - idempotency_error
            - invalid_request_error
            - rate_limit_error
            type: string
        required:
        - type
        title: APIErrors
        type: object
        x-expandableFields: []
    required:
    - error
    type: object
  exchange_rate:
    properties:
      id:
        description: Unique identifier for the object. Represented as the three-letter
          [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) in
          lowercase.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - exchange_rate
        type: string
      rates:
        description: Hash where the keys are supported currencies and the values are
          the exchange rate at which the base id currency converts to the key currency.
        type: object
    required:
    - id
    - object
    - rates
    title: ExchangeRate
    type: object
    x-expandableFields: []
    x-resourceId: exchange_rate
  external_account_source:
    properties:
      account:
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account"
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        type: string
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/payouts)
          paid out to the bank account.
        type: string
      customer:
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/customer"
          - "$ref": "#/definitions/deleted_object"
      default_for_currency:
        description: Whether this external account is the default account for its
          currency.
        type: boolean
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      last4:
        type: string
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - bank_account
        type: string
    required:
    - country
    - currency
    - id
    - last4
    - object
    title: Polymorphic
    type: object
    x-expandableFields:
    - account
    - customer
    x-polymorphicResources:
      oneOf:
      - "$ref": "#/definitions/bank_account"
      - "$ref": "#/definitions/card"
    x-resourceId: external_account_source
  fee:
    properties:
      amount:
        description: Amount of the fee, in cents.
        type: integer
      application:
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      type:
        description: 'Type of the fee, one of: `application_fee`, `stripe_fee` or
          `tax`.'
        type: string
    required:
    - amount
    - currency
    - type
    title: Fee
    type: object
    x-expandableFields: []
  fee_refund:
    properties:
      amount:
        description: Amount, in %s.
        type: integer
      balance_transaction:
        description: Balance transaction that describes the impact on your account
          balance.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      fee:
        description: ID of the application fee that was refunded.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/platform_fee"
      id:
        description: Unique identifier for the object.
        type: string
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - fee_refund
        type: string
    required:
    - amount
    - created
    - currency
    - fee
    - id
    - metadata
    - object
    title: FeeRefund
    type: object
    x-expandableFields:
    - balance_transaction
    - fee
    x-resourceId: fee_refund
  file_upload:
    properties:
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      filename:
        description: A filename for the file, suitable for saving to a filesystem.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - file_upload
        type: string
      purpose:
        description: The purpose of the uploaded file. Possible values are `business_logo`,
          `customer_signature`, `dispute_evidence`, `identity_document`, `pci_document`,
          or `tax_document_user_upload`.
        type: string
      size:
        description: The size in bytes of the file upload object.
        type: integer
      type:
        description: 'The type of the file returned. Returns one of the following:
          `csv`, `docx`, `gif`, `jpg`, `pdf`, `png`, `xls`, or `xlsx`.'
        type: string
      url:
        description: A read-only URL where the uploaded file can be accessed. Will
          be nil if the purpose of the uploaded file is `identity_document`. Also
          nil if retrieved with the publishable API key.
        type: string
    required:
    - created
    - id
    - object
    - purpose
    - size
    title: FileUpload
    type: object
    x-expandableFields: []
    x-resourceId: file_upload
  inventory:
    properties:
      quantity:
        description: The count of inventory available. Will be present if and only
          if `type` is `finite`.
        type: integer
      type:
        description: Inventory type. Possible values are `finite`, `bucket` (not quantified),
          and `infinite`.
        type: string
      value:
        description: An indicator of the inventory available. Possible values are
          `in_stock`, `limited`, and `out_of_stock`. Will be present if and only if
          `type` is `bucket`.
        type: string
    required:
    - type
    title: Inventory
    type: object
    x-expandableFields: []
  invoice:
    properties:
      amount_due:
        description: Final amount due at this time for this invoice. If the invoice's
          total is smaller than the minimum charge amount, for example, or if there
          is account credit that can be applied to the invoice, the `amount_due` may
          be 0. If there is a positive `starting_balance` for the invoice (the customer
          owes money), the `amount_due` will also take that into account. The charge
          that gets generated for the invoice will be for the amount specified in
          `amount_due`.
        type: integer
      amount_paid:
        description: The amount, in %s, that was paid.
        type: integer
      amount_remaining:
        description: The amount remaining, in %s, that is due.
        type: integer
      application_fee:
        description: The fee in %s that will be applied to the invoice and transferred
          to the application owner's Stripe account when the invoice is paid.
        type: integer
      attempt_count:
        description: Number of payment attempts made for this invoice, from the perspective
          of the payment retry schedule. Any payment attempt counts as the first attempt,
          and subsequently only automatic retries increment the attempt count. In
          other words, manual payment attempts after the first attempt do not affect
          the retry schedule.
        type: integer
      attempted:
        description: Whether an attempt has been made to pay the invoice. An invoice
          is not attempted until 1 hour after the `invoice.created` webhook, for example,
          so you might not want to display that invoice as unpaid to your users.
        type: boolean
      billing:
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay this invoice using the default
          source attached to the customer. When sending an invoice, Stripe will email
          this invoice to the customer with payment instructions.
        enum:
        - charge_automatically
        - send_invoice
        type: string
      billing_reason:
        description: 'Indicates the reason why the invoice was created. `subscription_cycle`
          indicates an invoice created by a subscription advancing into a new period.
          `subscription_update` indicates an invoice created due to creating or updating
          a subscription. `subscription` is set for all old invoices to indicate either
          a change to a subscription or a period advancement. `manual` is set for
          all invoices unrelated to a subscription (for example: created via the invoice
          editor). The `upcoming` value is reserved for simulated invoices per the
          upcoming invoice endpoint.'
        enum:
        - manual
        - subscription
        - subscription_cycle
        - subscription_threshold
        - subscription_update
        - upcoming
        type: string
      charge:
        description: ID of the latest charge generated for this invoice, if any.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
      closed:
        description: Whether the invoice is still trying to collect payment. An invoice
          is closed if it's either paid or it has been marked closed. A closed invoice
          will no longer attempt to collect payment.
        type: boolean
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/customer"
          - "$ref": "#/definitions/deleted_object"
      date:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      discount:
        "$ref": "#/definitions/discount"
      due_date:
        description: The date on which payment for this invoice is due. This value
          will be `null` for invoices where `billing=charge_automatically`.
        type: integer
      ending_balance:
        description: Ending customer balance after the invoice is frozen. Invoices
          are frozen approximately an hour after successful webhook delivery or when
          payment collection is attempted for the invoice. If the invoice has not
          been frozen yet, this will be null.
        type: integer
      forgiven:
        description: Whether the invoice has been forgiven. Forgiving an invoice instructs
          us to update the subscription status as if the invoice were successfully
          paid. Once an invoice has been forgiven, it cannot be unforgiven or reopened.
        type: boolean
      hosted_invoice_url:
        description: The URL for the hosted invoice page, which allows customers to
          view and pay an invoice. If the invoice has not been frozen yet, this will
          be null.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      invoice_pdf:
        description: The link to download the PDF for the invoice. If the invoice
          has not been frozen yet, this will be null.
        type: string
      lines:
        description: 'The individual line items that make up the invoice. `lines`
          is sorted as follows: invoice items in reverse chronological order, followed
          by the subscription, if any.'
        properties:
          data:
            items:
              "$ref": "#/definitions/invoice_line_item"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: InvoiceLinesList
        type: object
        x-expandableFields:
        - data
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      next_payment_attempt:
        description: The time at which payment will next be attempted. This value
          will be `null` for invoices where `billing=send_invoice`.
        type: integer
      number:
        description: A unique, identifying string that appears on emails sent to the
          customer for this invoice. This starts with the customer's unique invoice_prefix
          if it is specified.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - invoice
        type: string
      paid:
        description: Whether payment was successfully collected for this invoice.
          An invoice can be paid (most commonly) with a charge or with credit from
          the customer's account balance.
        type: boolean
      period_end:
        description: End of the usage period during which invoice items were added
          to this invoice.
        type: integer
      period_start:
        description: Start of the usage period during which invoice items were added
          to this invoice.
        type: integer
      receipt_number:
        description: This is the transaction number that appears on email receipts
          sent for this invoice.
        type: string
      starting_balance:
        description: Starting customer balance before the invoice is frozen. If the
          invoice has not been frozen yet, this will be the current customer balance.
        type: integer
      statement_descriptor:
        description: Extra information about an invoice for the customer's credit
          card statement.
        type: string
      subscription:
        description: The subscription that this invoice was prepared for, if any.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/subscription"
      subscription_proration_date:
        description: Only set for upcoming invoices that preview prorations. The time
          used to calculate prorations.
        type: integer
      subtotal:
        description: Total of all subscriptions, invoice items, and prorations on
          the invoice before any discount is applied.
        type: integer
      tax:
        description: The amount of tax included in the total, calculated from `tax_percent`
          and the subtotal. If no `tax_percent` is defined, this value will be null.
        type: integer
      tax_percent:
        description: This percentage of the subtotal has been added to the total amount
          of the invoice, including invoice line items and discounts. This field is
          inherited from the subscription's `tax_percent` field, but can be changed
          before the invoice is paid. This field defaults to null.
        type: number
      total:
        description: Total after discount.
        type: integer
      webhooks_delivered_at:
        description: The time at which webhooks for this invoice were successfully
          delivered (if the invoice had no webhooks to deliver, this will match `date`).
          Invoice payment is delayed until webhooks are delivered, or until all webhook
          delivery attempts have been exhausted.
        type: integer
    required:
    - amount_due
    - amount_paid
    - amount_remaining
    - attempt_count
    - attempted
    - closed
    - currency
    - customer
    - date
    - forgiven
    - id
    - lines
    - livemode
    - object
    - paid
    - period_end
    - period_start
    - starting_balance
    - subtotal
    - total
    title: Invoice
    type: object
    x-expandableFields:
    - charge
    - customer
    - discount
    - lines
    - subscription
    x-resourceId: invoice
  invoice_item:
    properties:
      amount:
        description: Amount (in the `currency` specified) of the invoice item. This
          should always be equal to `unit_amount * quantity`.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        description: The ID of the customer who will be billed when this invoice item
          is billed.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/customer"
          - "$ref": "#/definitions/deleted_object"
      date:
        type: integer
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      discountable:
        description: If true, discounts will apply to this invoice item. Always false
          for prorations.
        type: boolean
      id:
        description: Unique identifier for the object.
        type: string
      invoice:
        description: The ID of the invoice this invoice item belongs to.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/invoice"
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - invoiceitem
        type: string
      period:
        type: object
      plan:
        "$ref": "#/definitions/plan"
      proration:
        description: Whether the invoice item was created automatically as a proration
          adjustment when the customer switched plans.
        type: boolean
      quantity:
        description: Quantity of units for the invoice item. If the invoice item is
          a proration, the quantity of the subscription that the proration was computed
          for.
        type: integer
      subscription:
        description: The subscription that this invoice item has been created for,
          if any.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/subscription"
      subscription_item:
        type: string
      unit_amount:
        description: Unit Amount (in the `currency` specified) of the invoice item.
        type: integer
    required:
    - amount
    - currency
    - customer
    - date
    - discountable
    - id
    - livemode
    - metadata
    - object
    - proration
    - quantity
    - unit_amount
    title: InvoiceItem
    type: object
    x-expandableFields:
    - customer
    - invoice
    - plan
    - subscription
    x-resourceId: invoice_item
  invoice_line_item:
    properties:
      amount:
        description: The amount, in %s.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      discountable:
        description: If true, discounts will apply to this line item. Always false
          for prorations.
        type: boolean
      id:
        description: Unique identifier for the object.
        type: string
      invoice_item:
        type: string
      livemode:
        description: Whether this is a test line item.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - line_item
        type: string
      period:
        "$ref": "#/definitions/invoice_line_item_period"
      plan:
        "$ref": "#/definitions/plan"
      proration:
        description: Whether this is a proration.
        type: boolean
      quantity:
        description: The quantity of the subscription, if the line item is a subscription
          or a proration.
        type: integer
      subscription:
        description: When type is `invoiceitem`, the subscription that the invoice
          item pertains to, if any. Left blank when `type` is already subscription,
          as it'd be redundant with `id`.
        type: string
      subscription_item:
        description: The subscription item that generated this invoice item. Left
          empty if the line item is not an explicit result of a subscription.
        type: string
      type:
        description: A string identifying the type of the source of this line item,
          either an `invoiceitem` or a `subscription`.
        type: string
    required:
    - amount
    - currency
    - discountable
    - id
    - livemode
    - metadata
    - object
    - period
    - proration
    - type
    title: InvoiceLineItem
    type: object
    x-expandableFields:
    - period
    - plan
    x-resourceId: invoice_line_item
  invoice_line_item_period:
    properties:
      end:
        description: End of the line item's billing period
        type: integer
      start:
        description: Start of the line item's billing period
        type: integer
    required:
    - end
    - start
    title: InvoiceLineItemPeriod
    type: object
    x-expandableFields: []
  issuer_fraud_record:
    properties:
      charge:
        description: ID of the charge this issuer fraud record is for, optionally
          expanded.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      fraud_type:
        description: The type of fraud labelled by the issuer. One of `card_never_received`,
          `fraudulent_card_application`, `made_with_counterfeit_card`, `made_with_lost_card`,
          `made_with_stolen_card`, `misc`, `unauthorized_use_of_card`.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - issuer_fraud_record
        type: string
      post_date:
        description: The timestamp at which the card issuer posted the issuer fraud
          record.
        type: integer
    required:
    - charge
    - created
    - fraud_type
    - id
    - livemode
    - object
    - post_date
    title: IssuerFraudRecord
    type: object
    x-expandableFields:
    - charge
    x-resourceId: issuer_fraud_record
  legacy_transfer_reversal:
    properties:
      amount:
        description: Amount, in %s.
        type: integer
      balance_transaction:
        description: Balance transaction that describes the impact on your account
          balance.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - transfer_reversal
        type: string
      transfer:
        description: ID of the transfer that was reversed.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/payout"
          - "$ref": "#/definitions/transfer"
          - "$ref": "#/definitions/transfer_recipient_transfer"
    required:
    - amount
    - created
    - currency
    - id
    - metadata
    - object
    - transfer
    title: LegacyTransferReversal
    type: object
    x-expandableFields:
    - balance_transaction
    - transfer
    x-resourceId: legacy_transfer_reversal
  legal_entity:
    properties:
      additional_owners:
        description: An array of any owners with at least 25% ownership of the company,
          excluding the individual responsible for the account.
        items:
          "$ref": "#/definitions/legal_entity_additional_owner"
        type: array
      address:
        "$ref": "#/definitions/legal_entity_address"
      address_kana:
        "$ref": "#/definitions/legal_entity_japan_address"
      address_kanji:
        "$ref": "#/definitions/legal_entity_japan_address"
      business_name:
        description: The legal name of the company.
        type: string
      business_name_kana:
        description: The Kana variation of the legal name of the company (Japan only).
        type: string
      business_name_kanji:
        description: The Kanji variation of the legal name of the company (Japan only).
        type: string
      business_tax_id_provided:
        description: Whether the business ID number of the legal entity has been provided.
        type: boolean
      business_vat_id_provided:
        description: Whether the business VAT number of the legal entity has been
          provided.
        type: boolean
      dob:
        "$ref": "#/definitions/legal_entity_dob"
      first_name:
        description: The first name of the individual responsible for the account.
        type: string
      first_name_kana:
        description: The Kana variation of the first name of the individual responsible
          for the account (Japan only).
        type: string
      first_name_kanji:
        description: The Kanji variation of the first name of the individual responsible
          for the account (Japan only).
        type: string
      gender:
        description: The gender of the individual responsible for the account (International
          regulations require either "male" or "female").
        type: string
      last_name:
        description: The last name of the individual responsible for the account.
        type: string
      last_name_kana:
        description: The Kana varation of the last name of the individual responsible
          for the account (Japan only).
        type: string
      last_name_kanji:
        description: The Kanji varation of the last name of the individual responsible
          for the account (Japan only).
        type: string
      maiden_name:
        description: The maiden name of the individual responsible for the account.
        type: string
      personal_address:
        "$ref": "#/definitions/legal_entity_address"
      personal_address_kana:
        "$ref": "#/definitions/legal_entity_japan_address"
      personal_address_kanji:
        "$ref": "#/definitions/legal_entity_japan_address"
      personal_id_number_provided:
        description: Whether the personal ID number of the individual responsible
          for the account has been provided.
        type: boolean
      phone_number:
        description: The phone number of the company, used for verification.
        type: string
      ssn_last_4_provided:
        description: Whether the last 4 ssn digits of the individual responsible for
          the account have been provided.
        type: boolean
      tax_id_registrar:
        type: string
      type:
        description: Either "individual" or "company", for what kind of legal entity
          the account owner is for.
        type: string
      verification:
        "$ref": "#/definitions/legal_entity_verification"
    title: LegalEntity
    type: object
    x-expandableFields:
    - additional_owners
    - address
    - address_kana
    - address_kanji
    - dob
    - personal_address
    - personal_address_kana
    - personal_address_kanji
    - verification
  legal_entity_additional_owner:
    properties:
      address:
        "$ref": "#/definitions/legal_entity_address"
      dob:
        "$ref": "#/definitions/legal_entity_dob"
      first_name:
        description: The first name of this additional owner.
        type: string
      last_name:
        description: The last name of this additional owner.
        type: string
      maiden_name:
        description: The maiden name of this additional owner.
        type: string
      personal_id_number_provided:
        description: Whether the personal ID number of this additional owner has been
          provided.
        type: boolean
      verification:
        "$ref": "#/definitions/legal_entity_verification"
    required:
    - dob
    - verification
    title: LegalEntityAdditionalOwner
    type: object
    x-expandableFields:
    - address
    - dob
    - verification
  legal_entity_address:
    properties:
      city:
        description: City/District/Suburb/Town/Village.
        type: string
      country:
        description: 2-letter country code.
        type: string
      line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
      line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
      postal_code:
        description: ZIP or postal code
        type: string
      state:
        description: State/County/Province/Region.
        type: string
    title: LegalEntityAddress
    type: object
    x-expandableFields: []
  legal_entity_dob:
    properties:
      day:
        description: The day of birth, between 1 and 31.
        type: integer
      month:
        description: The month of birth, between 1 and 12.
        type: integer
      year:
        description: The four-digit year of birth.
        type: integer
    title: LegalEntityDOB
    type: object
    x-expandableFields: []
  legal_entity_japan_address:
    properties:
      city:
        description: City/Ward.
        type: string
      country:
        description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: string
      line1:
        description: Block/Building number.
        type: string
      line2:
        description: Building details.
        type: string
      postal_code:
        description: Zip/Postal Code.
        type: string
      state:
        description: Prefecture.
        type: string
      town:
        description: Town/cho-me.
        type: string
    title: LegalEntityJapanAddress
    type: object
    x-expandableFields: []
  legal_entity_verification:
    properties:
      details:
        description: A user-displayable string describing the verification state for
          this legal entity. For example, if a document is uploaded and the picture
          is too fuzzy, this may say "Identity document is too unclear to read".
        type: string
      details_code:
        description: One of `scan_corrupt`, `scan_not_readable`, `scan_failed_greyscale`,
          `scan_not_uploaded`, `scan_id_type_not_supported`, `scan_id_country_not_supported`,
          `scan_name_mismatch`, `scan_failed_other`, `failed_keyed_identity`, or `failed_other`.
          A machine-readable code specifying the verification state for this legal
          entity.
        type: string
      document:
        description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          A photo (jpg or png) of the front of an identifying document, either a passport
          or local ID card."
        type: string
      document_back:
        description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          A photo (jpg or png) of the back of an identifying document, either a passport
          or local ID card."
        type: string
      status:
        description: The state of verification for this legal entity. Possible values
          are `unverified`, `pending`, or `verified`.
        type: string
    required:
    - status
    title: LegalEntityVerification
    type: object
    x-expandableFields: []
  light_account_logout:
    properties: {}
    title: LightAccountLogout
    type: object
    x-expandableFields: []
    x-resourceId: light_account_logout
  limited_account:
    properties:
      application_icon:
        type: string
      application_logo:
        type: string
      application_name:
        type: string
      application_url:
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - account
        type: string
    required:
    - id
    - object
    title: LimitedAccount
    type: object
    x-expandableFields: []
  login_link:
    properties:
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - login_link
        type: string
      url:
        description: The URL for the login link.
        type: string
    required:
    - created
    - object
    - url
    title: LoginLink
    type: object
    x-expandableFields: []
    x-resourceId: login_link
  notification_event:
    properties:
      api_version:
        description: 'The Stripe API version used to render `data`. *Note: This property
          is populated only for events on or after October 31, 2014*.'
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      data:
        "$ref": "#/definitions/notification_event_data"
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - event
        type: string
      pending_webhooks:
        description: Number of webhooks that have yet to be successfully delivered
          (i.e., to return a 20x response) to the URLs you've specified.
        type: integer
      request:
        "$ref": "#/definitions/notification_event_request"
      type:
        description: Description of the event (e.g., `invoice.created` or `charge.refunded`).
        type: string
    required:
    - created
    - data
    - id
    - livemode
    - object
    - pending_webhooks
    - type
    title: NotificationEvent
    type: object
    x-expandableFields:
    - data
    - request
    x-resourceId: notification_event
  notification_event_data:
    properties:
      object:
        description: Object containing the API resource relevant to the event. For
          example, an `invoice.created` event will have a full [invoice object](#invoice_object)
          as the value of the object key.
        type: object
      previous_attributes:
        description: Object containing the names of the attributes that have changed,
          and their previous values (sent along only with *.updated events).
        type: object
    required:
    - object
    title: NotificationEventData
    type: object
    x-expandableFields: []
  notification_event_request:
    properties:
      id:
        description: ID of the API request that caused the event. If null, the event
          was automatic (e.g., Stripe's automatic subscription handling). Request
          logs are available in the [dashboard](https://dashboard.stripe.com/logs),
          but currently not in the API.
        type: string
      idempotency_key:
        description: 'The idempotency key transmitted during the request, if any.
          *Note: This property is populated only for events on or after May 23, 2017*.'
        type: string
    title: NotificationEventRequest
    type: object
    x-expandableFields: []
  order:
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100
          cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
          representing the total amount for the order.
        type: integer
      amount_returned:
        type: integer
      application:
        description: ID of the Connect Application that created the order.
        type: string
      application_fee:
        type: integer
      charge:
        description: The ID of the payment used to pay for the order. Present if the
          order status is `paid`, `fulfilled`, or `refunded`.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        description: The customer used for the order.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/customer"
          - "$ref": "#/definitions/deleted_object"
      email:
        description: The email address of the customer placing the order.
        type: string
      external_coupon_code:
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      items:
        description: List of items constituting the order.
        items:
          "$ref": "#/definitions/order_item"
        type: array
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - order
        type: string
      returns:
        properties:
          data:
            items:
              "$ref": "#/definitions/order_return"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: OrderReturnList
        type: object
        x-expandableFields:
        - data
      selected_shipping_method:
        description: The shipping method that is currently selected for this order,
          if any. If present, it is equal to one of the `id`s of shipping methods
          in the `shipping_methods` array. At order creation time, if there are multiple
          shipping methods, Stripe will automatically selected the first method.
        type: string
      shipping:
        "$ref": "#/definitions/shipping"
      shipping_methods:
        description: A list of supported shipping methods for this order. The desired
          shipping method can be specified either by updating the order, or when paying
          it.
        items:
          "$ref": "#/definitions/shipping_method"
        type: array
      status:
        description: Current order status. One of `created`, `paid`, `canceled`, `fulfilled`,
          or `returned`. More detail in the [Relay API Overview](/docs/orders/guide#understanding-order-statuses).
        type: string
      status_transitions:
        "$ref": "#/definitions/status_transitions"
      updated:
        type: integer
      upstream_id:
        description: The user's order ID if it is different from the Stripe order
          ID.
        type: string
    required:
    - amount
    - created
    - currency
    - id
    - items
    - livemode
    - metadata
    - object
    - status
    title: Order
    type: object
    x-expandableFields:
    - charge
    - customer
    - items
    - returns
    - shipping
    - shipping_methods
    - status_transitions
    x-resourceId: order
  order_item:
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100
          cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
          representing the total amount for the line item.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        description: Description of the line item, meant to be displayable to the
          user (e.g., `"Express shipping"`).
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - order_item
        type: string
      parent:
        description: The ID of the associated object for this line item. Expandable
          if not null (e.g., expandable to a SKU).
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/discount"
          - "$ref": "#/definitions/sku"
      quantity:
        description: A positive integer representing the number of instances of `parent`
          that are included in this order item. Applicable/present only if `type`
          is `sku`.
        type: integer
      type:
        description: The type of line item. One of `sku`, `tax`, `shipping`, or `discount`.
        type: string
    required:
    - amount
    - currency
    - description
    - object
    - type
    title: OrderItem
    type: object
    x-expandableFields:
    - parent
  order_return:
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100
          cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
          representing the total amount for the returned line item.
        type: integer
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      items:
        description: The items included in this order return.
        items:
          "$ref": "#/definitions/order_item"
        type: array
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - order_return
        type: string
      order:
        description: The order that this return includes items from.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/order"
      refund:
        description: The ID of the refund issued for this return.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/refund"
    required:
    - amount
    - created
    - currency
    - id
    - items
    - livemode
    - object
    title: OrderReturn
    type: object
    x-expandableFields:
    - items
    - order
    - refund
    x-resourceId: order_return
  package_dimensions:
    properties:
      height:
        description: Height, in inches.
        type: number
      length:
        description: Length, in inches.
        type: number
      weight:
        description: Weight, in ounces.
        type: number
      width:
        description: Width, in inches.
        type: number
    required:
    - height
    - length
    - weight
    - width
    title: PackageDimensions
    type: object
    x-expandableFields: []
  payout:
    properties:
      amount:
        description: Amount (in %s) to be transferred to your bank account or debit
          card.
        type: integer
      arrival_date:
        description: Date the payout is expected to arrive in the bank. This factors
          in delays like weekends or bank holidays.
        type: integer
      automatic:
        description: Returns `true` if the payout was created by an [automated payout
          schedule](/docs/payouts#payout-schedule), and `false` if it was [requested
          manually](https://stripe.com/docs/payouts#manual-payouts).
        type: boolean
      balance_transaction:
        description: ID of the balance transaction that describes the impact of this
          payout on your account balance.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      destination:
        description: ID of the bank account or card the payout was sent to.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/bank_account"
          - "$ref": "#/definitions/card"
          - "$ref": "#/definitions/deleted_bank_account"
          - "$ref": "#/definitions/deleted_card"
      failure_balance_transaction:
        description: If the payout failed or was canceled, this will be the ID of
          the balance transaction that reversed the initial balance transaction, and
          puts the funds from the failed payout back in your balance.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      failure_code:
        description: Error code explaining reason for payout failure if available.
          See [Types of payout failures](/docs/api#payout_failures) for a list of
          failure codes.
        type: string
      failure_message:
        description: Message to user further explaining reason for payout failure
          if available.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      method:
        description: The method used to send this payout, which can be `standard`
          or `instant`. `instant` is only supported for payouts to debit cards. (See
          [Instant payouts for marketplaces](/blog/instant-payouts-for-marketplaces)
          for more information.)
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - payout
        type: string
      source_type:
        description: The source balance this payout came from. One of `card`, `bank_account`,
          `bitcoin_receiver`, or `alipay_account`.
        type: string
      statement_descriptor:
        description: Extra information about a payout to be displayed on the user's
          bank statement.
        type: string
      status:
        description: Current status of the payout (`paid`, `pending`, `in_transit`,
          `canceled` or `failed`). A payout will be `pending` until it is submitted
          to the bank, at which point it becomes `in_transit`. It will then change
          to `paid` if the transaction goes through. If it does not go through successfully,
          its status will change to `failed` or `canceled`.
        type: string
      type:
        description: Can be `bank_account` or `card`.
        type: string
    required:
    - amount
    - arrival_date
    - automatic
    - created
    - currency
    - id
    - livemode
    - metadata
    - method
    - object
    - source_type
    - status
    - type
    title: Payout
    type: object
    x-expandableFields:
    - balance_transaction
    - destination
    - failure_balance_transaction
    x-resourceId: payout
  plan:
    properties:
      active:
        description: Whether the plan is currently available for new subscriptions.
        type: boolean
      aggregate_usage:
        description: Specifies a usage aggregation strategy for plans of `usage_type=metered`.
          Allowed values are `sum` for summing up all usage during a period, `last_during_period`
          for picking the last usage record reported within a period, `last_ever`
          for picking the last usage record ever (across period bounds) or `max` which
          picks the usage record with the maximum reported usage during a period.
          Defaults to `sum`.
        enum:
        - last_during_period
        - last_ever
        - max
        - sum
        type: string
      amount:
        description: The amount in %s to be charged on the interval specified.
        type: integer
      billing_scheme:
        description: Describes how to compute the price per period. Either `per_unit`
          or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`)
          will be charged per unit in `quantity` (for plans with `usage_type=licensed`),
          or per unit of total usage (for plans with `usage_type=metered`). `tiered`
          indicates that the unit pricing will be computed using a tiering strategy
          as defined using the `tiers` and `tiers_mode` attributes.
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      interval:
        description: One of `day`, `week`, `month` or `year`. The frequency with which
          a subscription should be billed.
        type: string
      interval_count:
        description: The number of intervals (specified in the `interval` property)
          between subscription billings. For example, `interval=month` and `interval_count=3`
          bills every 3 months.
        type: integer
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      nickname:
        description: A brief description of the plan, hidden from customers.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - plan
        type: string
      product:
        description: The product whose pricing this plan determines.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/product"
          - "$ref": "#/definitions/deleted_product"
      tiers:
        description: Each element represents a pricing tier. This parameter requires
          `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
        items:
          "$ref": "#/definitions/plan_tier"
        type: array
      tiers_mode:
        description: Defines if the tiering price should be `graduated` or `volume`
          based. In `volume`-based tiering, the maximum quantity within a period determines
          the per unit price, in `graduated` tiering pricing can successively change
          as the quantity grows.
        enum:
        - graduated
        - volume
        type: string
      transform_usage:
        "$ref": "#/definitions/transform_usage"
      trial_period_days:
        description: Default number of trial days when subscribing a customer to this
          plan using [`trial_from_plan=true`](/docs/api#create_subscription-trial_from_plan).
        type: integer
      usage_type:
        description: Configures how the quantity per period should be determined,
          can be either `metered` or `licensed`. `licensed` will automatically bill
          the `quantity` set for a plan when adding it to a subscription, `metered`
          will aggregate the total usage based on usage records. Defaults to `licensed`.
        type: string
    required:
    - active
    - created
    - currency
    - id
    - interval
    - interval_count
    - livemode
    - metadata
    - object
    - usage_type
    title: Plan
    type: object
    x-expandableFields:
    - product
    - tiers
    - transform_usage
    x-resourceId: plan
  plan_tier:
    properties:
      amount:
        description: Per unit price for units relevant to the tier.
        type: integer
      up_to:
        description: Up to and including to this quantity will be contained in the
          tier.
        type: integer
    required:
    - amount
    title: PlanTier
    type: object
    x-expandableFields: []
  platform_earning:
    properties:
      account:
        description: ID of the Stripe account this fee was taken from.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account"
      amount:
        description: Amount earned, in %s.
        type: integer
      amount_refunded:
        description: Amount in %s refunded (can be less than the amount attribute
          on the fee if a partial refund was issued)
        type: integer
      application:
        description: ID of the Connect application that earned the fee.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/application"
      balance_transaction:
        description: Balance transaction that describes the impact of this collected
          application fee on your account balance (not including refunds).
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      charge:
        description: ID of the charge that the application fee was taken from.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - application_fee
        type: string
      originating_transaction:
        description: ID of the corresponding charge on the platform account, if this
          fee was the result of a charge using the `destination` parameter.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
          - "$ref": "#/definitions/transfer"
      refunded:
        description: Whether the fee has been fully refunded. If the fee is only partially
          refunded, this attribute will still be false.
        type: boolean
      refunds:
        description: A list of refunds that have been applied to the fee.
        properties:
          data:
            items:
              "$ref": "#/definitions/fee_refund"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: FeeRefundList
        type: object
        x-expandableFields:
        - data
    required:
    - account
    - amount
    - amount_refunded
    - application
    - balance_transaction
    - charge
    - created
    - currency
    - id
    - livemode
    - object
    - refunded
    - refunds
    title: PlatformEarning
    type: object
    x-expandableFields:
    - account
    - application
    - balance_transaction
    - charge
    - originating_transaction
    - refunds
    x-resourceId: platform_earning
  platform_fee:
    properties:
      account:
        description: ID of the Stripe account this fee was taken from.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account"
      amount:
        description: Amount earned, in %s.
        type: integer
      amount_refunded:
        type: integer
      application:
        description: ID of the Connect Application that earned the fee.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/application"
      balance_transaction:
        description: Balance transaction that describes the impact of this collected
          application fee on your account balance (not including refunds).
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      charge:
        description: ID of the charge that the application fee was taken from.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - application_fee
        type: string
      originating_transaction:
        description: ID of the corresponding charge on the platform account, if this
          fee was the result of a charge using the `destination` parameter.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
          - "$ref": "#/definitions/transfer"
      refunded:
        description: Whether the fee has been fully refunded. If the fee is only partially
          refunded, this attribute will still be false.
        type: boolean
      refunds:
        description: A list of refunds that have been applied to the fee.
        properties:
          data:
            items:
              "$ref": "#/definitions/fee_refund"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: FeeRefundList
        type: object
        x-expandableFields:
        - data
    required:
    - account
    - amount
    - amount_refunded
    - application
    - balance_transaction
    - charge
    - created
    - currency
    - id
    - livemode
    - object
    - refunded
    - refunds
    title: PlatformFee
    type: object
    x-expandableFields:
    - account
    - application
    - balance_transaction
    - charge
    - originating_transaction
    - refunds
  product:
    properties:
      active:
        description: Whether the product is currently available for purchase.
        type: boolean
      attributes:
        description: A list of up to 5 attributes that each SKU can provide values
          for (e.g., `["color", "size"]`). Only applicable to products of `type=good`.
        items:
          type: string
        type: array
      caption:
        description: A short one-line description of the product, meant to be displayable
          to the customer. Only applicable to products of `type=good`.
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      deactivate_on:
        description: An array of connect application identifiers that cannot purchase
          this product. Only applicable to products of `type=good`.
        items:
          type: string
        type: array
      description:
        description: The product's description, meant to be displayable to the customer.
          Only applicable to products of `type=good`.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      images:
        description: A list of up to 8 URLs of images for this product, meant to be
          displayable to the customer. Only applicable to products of `type=good`.
        items:
          type: string
        type: array
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      name:
        description: The product's name, meant to be displayable to the customer.
          Applicable to both `service` and `good` types.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - product
        type: string
      package_dimensions:
        "$ref": "#/definitions/package_dimensions"
      shippable:
        description: Whether this product is a shipped good. Only applicable to products
          of `type=good`.
        type: boolean
      statement_descriptor:
        description: Extra information about a product which will appear on your customer's
          credit card statement. In the case that multiple products are billed at
          once, the first statement descriptor will be used. Only available on products
          of type=`service`.
        type: string
      type:
        description: The type of the product. The product is either of type `good`,
          which is eligible for use with Orders and SKUs, or `service`, which is eligible
          for use with Subscriptions and Plans.
        type: string
      unit_label:
        description: A label that represents units of this product, such as seat(s),
          in Stripe and on customers’ receipts and invoices. Only available on products
          of type=`service`.
        type: string
      updated:
        type: integer
      url:
        description: A URL of a publicly-accessible webpage for this product. Only
          applicable to products of `type=good`.
        type: string
    required:
    - created
    - id
    - images
    - livemode
    - metadata
    - name
    - object
    - type
    - updated
    title: Product
    type: object
    x-expandableFields:
    - package_dimensions
    x-resourceId: product
  radar_review:
    properties:
      charge:
        description: The charge associated with this review.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - review
        type: string
      open:
        description: If `true`, the review needs action.
        type: boolean
      reason:
        description: The reason the review is currently open or closed. One of `rule`,
          `manual`, `approved`, `refunded`, `refunded_as_fraud`, or `disputed`.
        type: string
    required:
    - charge
    - created
    - id
    - livemode
    - object
    - open
    - reason
    title: RadarReview
    type: object
    x-expandableFields:
    - charge
  radar_rule:
    properties:
      action:
        description: The action taken on the payment.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      predicate:
        description: The predicate to evaluate the payment against.
        type: string
    required:
    - action
    - id
    - predicate
    title: RadarRule
    type: object
    x-expandableFields: []
  refund:
    properties:
      amount:
        description: Amount, in %s.
        type: integer
      balance_transaction:
        description: Balance transaction that describes the impact on your account
          balance.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      charge:
        description: ID of the charge that was refunded.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      failure_balance_transaction:
        description: If the refund failed, this balance transaction describes the
          adjustment made on your account balance that reverses the initial balance
          transaction.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      failure_reason:
        description: If the refund failed, the reason for refund failure if known.
          Possible values are `lost_or_stolen_card`, `expired_or_canceled_card`, or
          `unknown`.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - refund
        type: string
      reason:
        description: Reason for the refund. If set, possible values are `duplicate`,
          `fraudulent`, and `requested_by_customer`.
        type: string
      receipt_number:
        description: This is the transaction number that appears on email receipts
          sent for this refund.
        type: string
      status:
        description: Status of the refund. For credit card refunds, this can be `succeeded`
          or `failed`. For other types of refunds, it can be `pending`, `succeeded`,
          `failed`, or `canceled`. Refer to our [refunds](/docs/refunds#failed-refunds)
          documentation for more details.
        type: string
    required:
    - amount
    - created
    - currency
    - id
    - metadata
    - object
    title: Refund
    type: object
    x-expandableFields:
    - balance_transaction
    - charge
    - failure_balance_transaction
    x-resourceId: refund
  reserve_transaction:
    properties:
      amount:
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - reserve_transaction
        type: string
    required:
    - amount
    - currency
    - id
    - object
    title: ReserveTransaction
    type: object
    x-expandableFields: []
  shipping:
    properties:
      address:
        "$ref": "#/definitions/address"
      carrier:
        description: The delivery service that shipped a physical product, such as
          Fedex, UPS, USPS, etc.
        type: string
      name:
        description: Recipient name.
        type: string
      phone:
        description: Recipient phone (including extension).
        type: string
      tracking_number:
        description: The tracking number for a physical product, obtained from the
          delivery service. If multiple tracking numbers were generated for this purchase,
          please separate them with commas.
        type: string
    required:
    - address
    - name
    title: Shipping
    type: object
    x-expandableFields:
    - address
  shipping_method:
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100
          cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
          representing the total amount for the line item.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      delivery_estimate:
        "$ref": "#/definitions/delivery_estimate"
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
    required:
    - amount
    - currency
    - description
    - id
    title: ShippingMethod
    type: object
    x-expandableFields:
    - delivery_estimate
  sku:
    properties:
      active:
        description: Whether the SKU is available for purchase.
        type: boolean
      attributes:
        description: 'A dictionary of attributes and values for the attributes defined
          by the product. If, for example, a product''s attributes are `["size", "gender"]`,
          a valid SKU has the following dictionary of attributes: `{"size": "Medium",
          "gender": "Unisex"}`.'
        type: object
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      image:
        description: The URL of an image for this SKU, meant to be displayable to
          the customer.
        type: string
      inventory:
        "$ref": "#/definitions/inventory"
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - sku
        type: string
      package_dimensions:
        "$ref": "#/definitions/package_dimensions"
      price:
        description: The cost of the item as a positive integer in the smallest currency
          unit (that is, 100 cents to charge $1.00, or 100 to charge ¥100, Japanese
          Yen being a zero-decimal currency).
        type: integer
      product:
        description: The ID of the product this SKU is associated with. The product
          must be currently active.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/product"
      updated:
        type: integer
    required:
    - active
    - attributes
    - created
    - currency
    - id
    - inventory
    - livemode
    - metadata
    - object
    - price
    - product
    - updated
    title: SKU
    type: object
    x-expandableFields:
    - inventory
    - package_dimensions
    - product
    x-resourceId: sku
  source:
    properties:
      ach_credit_transfer:
        properties:
          account_number:
            type: string
          bank_name:
            type: string
          fingerprint:
            type: string
          routing_number:
            type: string
          swift_code:
            type: string
        type: object
      ach_debit:
        properties:
          bank_name:
            type: string
          country:
            type: string
          fingerprint:
            type: string
          last4:
            type: string
          routing_number:
            type: string
          type:
            type: string
        type: object
      alipay:
        properties:
          data_string:
            type: string
          native_url:
            type: string
          statement_descriptor:
            type: string
        type: object
      amount:
        description: A positive integer in the smallest currency unit (that is, 100
          cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
          representing the total amount associated with the source. This is the amount
          for which the source will be chargeable once ready. Required for `single_use`
          sources.
        type: integer
      bancontact:
        properties:
          bank_code:
            type: string
          bank_name:
            type: string
          bic:
            type: string
          iban_last4:
            type: string
          preferred_language:
            type: string
          statement_descriptor:
            type: string
        type: object
      bitcoin:
        properties:
          address:
            type: string
          amount:
            type: integer
          amount_charged:
            type: integer
          amount_received:
            type: integer
          amount_returned:
            type: integer
          refund_address:
            type: string
          uri:
            type: string
        type: object
      card:
        properties:
          address_line1_check:
            type: string
          address_zip_check:
            type: string
          brand:
            type: string
          card_automatically_updated:
            type: boolean
          country:
            type: string
          cvc_check:
            type: string
          dynamic_last4:
            type: string
          exp_month:
            type: integer
          exp_year:
            type: integer
          fingerprint:
            type: string
          funding:
            type: string
          last4:
            type: string
          skip_validation:
            type: boolean
          three_d_secure:
            type: string
          tokenization_method:
            type: string
        type: object
      card_present:
        properties:
          brand:
            type: string
          card_automatically_updated:
            type: boolean
          country:
            type: string
          data_type:
            type: string
          emv_auth_data:
            type: string
          evidence_customer_signature:
            type: string
          evidence_transaction_certificate:
            type: string
          exp_month:
            type: integer
          exp_year:
            type: integer
          fingerprint:
            type: string
          funding:
            type: string
          last4:
            type: string
          read_method:
            type: string
          register_country:
            type: string
          register_id:
            type: string
          transaction_start_time:
            type: string
        type: object
      client_secret:
        description: The client secret of the source. Used for client-side retrieval
          using a publishable key.
        type: string
      code_verification:
        "$ref": "#/definitions/source_code_verification_flow"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/currencies)
          associated with the source. This is the currency for which the source will
          be chargeable once ready. Required for `single_use` sources.
        type: string
      eps:
        properties:
          reference:
            type: string
          statement_descriptor:
            type: string
        type: object
      flow:
        description: The authentication `flow` of the source. `flow` is one of `redirect`,
          `receiver`, `code_verification`, `none`.
        type: string
      giropay:
        properties:
          bank_code:
            type: string
          bank_name:
            type: string
          bic:
            type: string
          statement_descriptor:
            type: string
        type: object
      id:
        description: Unique identifier for the object.
        type: string
      ideal:
        properties:
          bank:
            type: string
          bic:
            type: string
          iban_last4:
            type: string
          statement_descriptor:
            type: string
        type: object
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      multibanco:
        properties:
          entity:
            type: string
          reference:
            type: string
          refund_account_holder_address_city:
            type: string
          refund_account_holder_address_country:
            type: string
          refund_account_holder_address_line1:
            type: string
          refund_account_holder_address_line2:
            type: string
          refund_account_holder_address_postal_code:
            type: string
          refund_account_holder_address_state:
            type: string
          refund_account_holder_name:
            type: string
          refund_iban:
            type: string
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - source
        type: string
      owner:
        "$ref": "#/definitions/source_owner"
      p24:
        properties:
          reference:
            type: string
        type: object
      receiver:
        "$ref": "#/definitions/source_receiver_flow"
      redirect:
        "$ref": "#/definitions/source_redirect_flow"
      sepa_credit_transfer:
        properties:
          bank_name:
            type: string
          bic:
            type: string
          iban:
            type: string
          refund_account_holder_address_city:
            type: string
          refund_account_holder_address_country:
            type: string
          refund_account_holder_address_line1:
            type: string
          refund_account_holder_address_line2:
            type: string
          refund_account_holder_address_postal_code:
            type: string
          refund_account_holder_address_state:
            type: string
          refund_account_holder_name:
            type: string
          refund_iban:
            type: string
        type: object
      sepa_debit:
        properties:
          bank_code:
            type: string
          branch_code:
            type: string
          country:
            type: string
          fingerprint:
            type: string
          last4:
            type: string
          mandate_reference:
            type: string
          mandate_url:
            type: string
          skip_validation:
            type: boolean
        type: object
      sofort:
        properties:
          bank_code:
            type: string
          bank_name:
            type: string
          bic:
            type: string
          country:
            type: string
          iban_last4:
            type: string
          preferred_language:
            type: string
          statement_descriptor:
            type: string
        type: object
      statement_descriptor:
        description: Extra information about a source. This will appear on your customer's
          statement every time you charge the source.
        type: string
      status:
        description: The status of the source, one of `canceled`, `chargeable`, `consumed`,
          `failed`, or `pending`. Only `chargeable` sources can be used to create
          a charge.
        type: string
      three_d_secure:
        properties:
          authenticated:
            type: boolean
          card:
            type: string
          customer:
            type: string
        type: object
      type:
        description: The `type` of the source. The `type` is a payment method, one
          of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `bitcoin`,
          `card`, `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `p24`,
          `sepa_credit_transfer`, `sepa_debit`, `sofort`, or `three_d_secure`. An
          additional hash is included on the source with a name matching this value.
          It contains additional information specific to the [payment method](/docs/sources)
          used.
        enum:
        - ach_credit_transfer
        - ach_debit
        - alipay
        - bancontact
        - bitcoin
        - card
        - card_present
        - eps
        - giropay
        - ideal
        - multibanco
        - p24
        - sepa_credit_transfer
        - sepa_debit
        - sofort
        - three_d_secure
        type: string
      usage:
        description: Either `reusable` or `single_use`. Whether this source should
          be reusable or not. Some source types may or may not be reusable by construction,
          while other may leave the option at creation. If an incompatible value is
          passed, an error will be returned.
        type: string
    required:
    - client_secret
    - created
    - flow
    - id
    - livemode
    - object
    - status
    - type
    title: Source
    type: object
    x-expandableFields:
    - code_verification
    - owner
    - receiver
    - redirect
    x-resourceId: source
  source_code_verification_flow:
    properties:
      attempts_remaining:
        description: The number of attempts remaining to authenticate the source object
          with a verification code.
        type: integer
      status:
        description: The status of the code verification, either `pending` (awaiting
          verification, `attempts_remaining` should be greater than 0), `succeeded`
          (successful verification) or `failed` (failed verification, cannot be verified
          anymore as `attempts_remaining` should be 0).
        type: string
    required:
    - attempts_remaining
    - status
    title: SourceCodeVerificationFlow
    type: object
    x-expandableFields: []
  source_mandate_notification:
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100
          cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
          representing the amount associated with the mandate notification. The amount
          is expressed in the currency of the underlying source. Required if the notification
          type is `debit_initiated`.
        type: integer
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - source_mandate_notification
        type: string
      reason:
        description: The reason of the mandate notification. Valid reasons are `mandate_confirmed`
          or `debit_initiated`.
        type: string
      source:
        "$ref": "#/definitions/source"
      status:
        description: The status of the mandate notification. Valid statuses are `pending`
          or `submitted`.
        type: string
      type:
        description: The type of source this mandate notification is attached to.
          Should be the source type identifier code for the payment method, such as
          `three_d_secure`.
        type: string
    required:
    - created
    - id
    - livemode
    - object
    - reason
    - source
    - status
    - type
    title: SourceMandateNotification
    type: object
    x-expandableFields:
    - source
    x-resourceId: source_mandate_notification
  source_owner:
    properties:
      address:
        "$ref": "#/definitions/address"
      email:
        description: Owner's email address.
        type: string
      name:
        description: Owner's full name.
        type: string
      phone:
        description: Owner's phone number (including extension).
        type: string
      verified_address:
        "$ref": "#/definitions/address"
      verified_email:
        description: Verified owner's email address. Verified values are verified
          or provided by the payment method directly (and if supported) at the time
          of authorization or settlement. They cannot be set or mutated.
        type: string
      verified_name:
        description: Verified owner's full name. Verified values are verified or provided
          by the payment method directly (and if supported) at the time of authorization
          or settlement. They cannot be set or mutated.
        type: string
      verified_phone:
        description: Verified owner's phone number (including extension). Verified
          values are verified or provided by the payment method directly (and if supported)
          at the time of authorization or settlement. They cannot be set or mutated.
        type: string
    title: SourceOwner
    type: object
    x-expandableFields:
    - address
    - verified_address
  source_receiver_flow:
    properties:
      address:
        description: The address of the receiver source. This is the value that should
          be communicated to the customer to send their funds to.
        type: string
      amount_charged:
        description: The total amount that was charged by you. The amount charged
          is expressed in the source's currency.
        type: integer
      amount_received:
        description: The total amount received by the receiver source. `amount_received
          = amount_returned + amount_charged` is true at all time. The amount received
          is expressed in the source's currency.
        type: integer
      amount_returned:
        description: The total amount that was returned to the customer. The amount
          returned is expressed in the source's currency.
        type: integer
    required:
    - amount_charged
    - amount_received
    - amount_returned
    title: SourceReceiverFlow
    type: object
    x-expandableFields: []
  source_redirect_flow:
    properties:
      failure_reason:
        description: The failure reason for the redirect, either `user_abort` (the
          customer aborted or dropped out of the redirect flow), `declined` (the authentication
          failed or the transaction was declined), or `processing_error` (the redirect
          failed due to a technical error). Present only if the redirect status is
          `failed`.
        type: string
      return_url:
        description: The URL you provide to redirect the customer to after they authenticated
          their payment.
        type: string
      status:
        description: The status of the redirect, either `pending` (ready to be used
          by your customer to authenticate the transaction), `succeeded` (succesful
          authentication, cannot be reused) or `not_required` (redirect should not
          be used) or `failed` (failed authentication, cannot be reused).
        type: string
      url:
        description: The URL provided to you to redirect a customer to as part of
          a `redirect` authentication flow.
        type: string
    required:
    - return_url
    - status
    - url
    title: SourceRedirectFlow
    type: object
    x-expandableFields: []
  source_transaction:
    properties:
      ach_credit_transfer:
        properties:
          account_number:
            type: string
          bank_name:
            type: string
          fingerprint:
            type: string
          routing_number:
            type: string
          swift_code:
            type: string
        type: object
      ach_debit:
        properties:
          bank_name:
            type: string
          country:
            type: string
          fingerprint:
            type: string
          last4:
            type: string
          routing_number:
            type: string
          type:
            type: string
        type: object
      alipay:
        properties:
          data_string:
            type: string
          native_url:
            type: string
          statement_descriptor:
            type: string
        type: object
      amount:
        description: A positive integer in the smallest currency unit (that is, 100
          cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
          representing the amount your customer has pushed to the receiver.
        type: integer
      bancontact:
        properties:
          bank_code:
            type: string
          bank_name:
            type: string
          bic:
            type: string
          iban_last4:
            type: string
          preferred_language:
            type: string
          statement_descriptor:
            type: string
        type: object
      bitcoin:
        properties:
          address:
            type: string
          amount:
            type: integer
          amount_charged:
            type: integer
          amount_received:
            type: integer
          amount_returned:
            type: integer
          refund_address:
            type: string
          uri:
            type: string
        type: object
      card:
        properties:
          address_line1_check:
            type: string
          address_zip_check:
            type: string
          brand:
            type: string
          card_automatically_updated:
            type: boolean
          country:
            type: string
          cvc_check:
            type: string
          dynamic_last4:
            type: string
          exp_month:
            type: integer
          exp_year:
            type: integer
          fingerprint:
            type: string
          funding:
            type: string
          last4:
            type: string
          skip_validation:
            type: boolean
          three_d_secure:
            type: string
          tokenization_method:
            type: string
        type: object
      card_present:
        properties:
          brand:
            type: string
          card_automatically_updated:
            type: boolean
          country:
            type: string
          data_type:
            type: string
          emv_auth_data:
            type: string
          evidence_customer_signature:
            type: string
          evidence_transaction_certificate:
            type: string
          exp_month:
            type: integer
          exp_year:
            type: integer
          fingerprint:
            type: string
          funding:
            type: string
          last4:
            type: string
          read_method:
            type: string
          register_country:
            type: string
          register_id:
            type: string
          transaction_start_time:
            type: string
        type: object
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      eps:
        properties:
          reference:
            type: string
          statement_descriptor:
            type: string
        type: object
      giropay:
        properties:
          bank_code:
            type: string
          bank_name:
            type: string
          bic:
            type: string
          statement_descriptor:
            type: string
        type: object
      id:
        description: Unique identifier for the object.
        type: string
      ideal:
        properties:
          bank:
            type: string
          bic:
            type: string
          iban_last4:
            type: string
          statement_descriptor:
            type: string
        type: object
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      multibanco:
        properties:
          entity:
            type: string
          reference:
            type: string
          refund_account_holder_address_city:
            type: string
          refund_account_holder_address_country:
            type: string
          refund_account_holder_address_line1:
            type: string
          refund_account_holder_address_line2:
            type: string
          refund_account_holder_address_postal_code:
            type: string
          refund_account_holder_address_state:
            type: string
          refund_account_holder_name:
            type: string
          refund_iban:
            type: string
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - source_transaction
        type: string
      p24:
        properties:
          reference:
            type: string
        type: object
      sepa_credit_transfer:
        properties:
          bank_name:
            type: string
          bic:
            type: string
          iban:
            type: string
          refund_account_holder_address_city:
            type: string
          refund_account_holder_address_country:
            type: string
          refund_account_holder_address_line1:
            type: string
          refund_account_holder_address_line2:
            type: string
          refund_account_holder_address_postal_code:
            type: string
          refund_account_holder_address_state:
            type: string
          refund_account_holder_name:
            type: string
          refund_iban:
            type: string
        type: object
      sepa_debit:
        properties:
          bank_code:
            type: string
          branch_code:
            type: string
          country:
            type: string
          fingerprint:
            type: string
          last4:
            type: string
          mandate_reference:
            type: string
          mandate_url:
            type: string
          skip_validation:
            type: boolean
        type: object
      sofort:
        properties:
          bank_code:
            type: string
          bank_name:
            type: string
          bic:
            type: string
          country:
            type: string
          iban_last4:
            type: string
          preferred_language:
            type: string
          statement_descriptor:
            type: string
        type: object
      source:
        description: The ID of the source this transaction is attached to.
        type: string
      three_d_secure:
        properties:
          authenticated:
            type: boolean
          card:
            type: string
          customer:
            type: string
        type: object
      type:
        description: The type of source this transaction is attached to.
        enum:
        - ach_credit_transfer
        - ach_debit
        - alipay
        - bancontact
        - bitcoin
        - card
        - card_present
        - eps
        - giropay
        - ideal
        - multibanco
        - p24
        - sepa_credit_transfer
        - sepa_debit
        - sofort
        - three_d_secure
        type: string
    required:
    - amount
    - created
    - currency
    - id
    - livemode
    - object
    - source
    - type
    title: SourceTransaction
    type: object
    x-expandableFields: []
    x-resourceId: source_transaction
  status_transitions:
    properties:
      canceled:
        type: integer
      fulfiled:
        type: integer
      paid:
        type: integer
      returned:
        type: integer
    title: StatusTransitions
    type: object
    x-expandableFields: []
  subscription:
    properties:
      application_fee_percent:
        description: A non-negative decimal between 0 and 100, with at most two decimal
          places. This represents the percentage of the subscription invoice subtotal
          that will be transferred to the application owner's Stripe account.
        type: number
      billing:
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay this subscription at the end of
          the cycle using the default source attached to the customer. When sending
          an invoice, Stripe will email your customer an invoice with payment instructions.
        enum:
        - charge_automatically
        - send_invoice
        type: string
      billing_cycle_anchor:
        description: Determines the date of the first full invoice, and, for plans
          with `month` or `year` intervals, the day of the month for subsequent invoices.
        type: integer
      cancel_at_period_end:
        description: If the subscription has been canceled with the `at_period_end`
          flag set to `true`, `cancel_at_period_end` on the subscription will be true.
          You can use this attribute to determine whether a subscription that has
          a status of active is scheduled to be canceled at the end of the current
          period.
        type: boolean
      canceled_at:
        description: If the subscription has been canceled, the date of that cancellation.
          If the subscription was canceled with `cancel_at_period_end`, `canceled_at`
          will still reflect the date of the initial cancellation request, not the
          end of the subscription period when the subscription is automatically moved
          to a canceled state.
        type: integer
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      current_period_end:
        description: End of the current period that the subscription has been invoiced
          for. At the end of this period, a new invoice will be created.
        type: integer
      current_period_start:
        description: Start of the current period that the subscription has been invoiced
          for.
        type: integer
      customer:
        description: ID of the customer who owns the subscription.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/customer"
          - "$ref": "#/definitions/deleted_object"
      days_until_due:
        description: Number of days a customer has to pay invoices generated by this
          subscription. This value will be `null` for subscriptions where `billing=charge_automatically`.
        type: integer
      discount:
        "$ref": "#/definitions/discount"
      ended_at:
        description: If the subscription has ended, the date the subscription ended.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      items:
        properties:
          data:
            items:
              "$ref": "#/definitions/subscription_item"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: SubscriptionItemList
        type: object
        x-expandableFields:
        - data
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - subscription
        type: string
      plan:
        "$ref": "#/definitions/plan"
      quantity:
        description: The quantity of the plan to which the customer should be subscribed.
          For example, if your plan is $10/user/month, and your customer has 5 users,
          you could pass 5 as the quantity to have the customer charged $50 (5 x $10)
          monthly.
        type: integer
      start:
        description: Date the most recent update to this subscription started.
        type: integer
      status:
        description: Possible values are `trialing`, `active`, `past_due`, `canceled`,
          or `unpaid`. A subscription still in its trial period is `trialing` and
          moves to `active` when the trial period is over. If subscription `billing=charge_automatically`
          it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid`
          (depending on your subscriptions settings) when Stripe has exhausted all
          payment retry attempts. If subscription `billing=send_invoice` it becomes
          `past_due` when its invoice is not paid by the due date, and `canceled`
          or `unpaid` if it is still not paid by an additional deadline after that.
          Note that when a subscription has a status of `unpaid`, no subsequent invoices
          will be attempted (invoices will be created, but then immediately automatically
          closed.) After receiving updated payment information from a customer, you
          may choose to reopen and pay their closed invoices.
        enum:
        - active
        - canceled
        - past_due
        - trialing
        - unpaid
        type: string
      tax_percent:
        description: If provided, each invoice created by this subscription will apply
          the tax rate, increasing the amount billed to the customer.
        type: number
      trial_end:
        description: If the subscription has a trial, the end of that trial.
        type: integer
      trial_start:
        description: If the subscription has a trial, the beginning of that trial.
        type: integer
    required:
    - cancel_at_period_end
    - created
    - customer
    - id
    - livemode
    - metadata
    - object
    - start
    - status
    title: Subscription
    type: object
    x-expandableFields:
    - customer
    - discount
    - items
    - plan
    x-resourceId: subscription
  subscription_item:
    properties:
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - subscription_item
        type: string
      plan:
        "$ref": "#/definitions/plan"
      quantity:
        description: The [quantity](/docs/subscriptions/quantities) of the plan to
          which the customer should be subscribed.
        type: integer
      subscription:
        description: The `subscription` this `subscription_item` belongs to.
        type: string
    required:
    - created
    - id
    - metadata
    - object
    - plan
    title: SubscriptionItem
    type: object
    x-expandableFields:
    - plan
    x-resourceId: subscription_item
  tax_rate_template:
    properties:
      id:
        description: Unique identifier for the object.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - taxratetemplate
        type: string
    required:
    - id
    - object
    title: TaxRateTemplate
    type: object
    x-expandableFields: []
    x-resourceId: tax_rate_template
  three_d_secure:
    properties:
      amount:
        type: integer
      authenticated:
        description: True if the cardholder went through the authentication flow and
          their bank indicated that authentication succeeded.
        type: boolean
      card:
        "$ref": "#/definitions/card"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - three_d_secure
        type: string
      redirect_url:
        description: If present, this is the URL that you should send the cardholder
          to for authentication. If you are going to use Stripe.js to display the
          authentication page in an iframe, you should use the value "_callback".
        type: string
      status:
        description: Possible values are `redirect_pending`, `succeeded`, or `failed`.
          When the cardholder can be authenticated, the object starts with status
          `redirect_pending`. When liability will be shifted to the cardholder's bank
          (either because the cardholder was successfully authenticated, or because
          the bank has not implemented 3D Secure, the object wlil be in status `succeeded`.
          `failed` indicates that authentication was attempted unsuccessfully.
        type: string
    required:
    - amount
    - authenticated
    - card
    - created
    - currency
    - id
    - livemode
    - object
    - status
    title: ThreeDSecure
    type: object
    x-expandableFields:
    - card
    x-resourceId: three_d_secure
  token:
    properties:
      bank_account:
        "$ref": "#/definitions/token_bank_account"
      card:
        "$ref": "#/definitions/token_card"
      client_ip:
        description: IP address of the client that generated the token.
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - token
        type: string
      type:
        description: 'Type of the token: `account`, `bank_account`, `card`, or `pii`.'
        type: string
      used:
        description: Whether this token has already been used (tokens can be used
          only once).
        type: boolean
    required:
    - created
    - id
    - livemode
    - object
    - type
    - used
    title: Token
    type: object
    x-expandableFields:
    - bank_account
    - card
    x-resourceId: token
  token_bank_account:
    properties:
      account_holder_name:
        description: The name of the person or business that owns the bank account.
        type: string
      account_holder_type:
        description: The type of entity that holds the account. This can be either
          `individual` or `company`.
        type: string
      bank_name:
        description: Name of the bank associated with the routing number (e.g., `WELLS
          FARGO`).
        type: string
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        type: string
      currency:
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/payouts)
          paid out to the bank account.
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      last4:
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - bank_account
        type: string
      routing_number:
        description: The routing transit number for the bank account.
        type: string
      status:
        description: Possible values are `new`, `validated`, `verified`, `verification_failed`,
          or `errored`. A bank account that hasn't had any activity or validation
          performed is `new`. If Stripe can determine that the bank account exists,
          its status will be `validated`. Note that there often isn’t enough information
          to know (e.g., for smaller credit unions), and the validation is not always
          run. If customer bank account verification has succeeded, the bank account
          status will be `verified`. If the verification failed for any reason, such
          as microdeposit failure, the status will be `verification_failed`. If a
          transfer sent to this bank account fails, we'll set the status to `errored`
          and will not continue to send transfers until the bank details are updated.
        type: string
    required:
    - country
    - currency
    - id
    - last4
    - object
    - status
    title: TokenBankAccount
    type: object
    x-expandableFields: []
  token_card:
    properties:
      address_city:
        description: City/District/Suburb/Town/Village.
        type: string
      address_country:
        description: Billing address country, if provided when creating card.
        type: string
      address_line1:
        description: Address line 1 (Street address/PO Box/Company name).
        type: string
      address_line1_check:
        description: 'If `address_line1` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        type: string
      address_line2:
        description: Address line 2 (Apartment/Suite/Unit/Building).
        type: string
      address_state:
        description: State/County/Province/Region.
        type: string
      address_zip:
        description: ZIP or postal code.
        type: string
      address_zip_check:
        description: 'If `address_zip` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        type: string
      brand:
        description: Card brand. Can be `American Express`, `Diners Club`, `Discover`,
          `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.
        type: string
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      cvc_check:
        description: 'If a CVC was provided, results of the check: `pass`, `fail`,
          `unavailable`, or `unchecked`.'
        type: string
      dynamic_last4:
        description: "(For tokenized numbers only.) The last four digits of the device
          account number."
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        description: Uniquely identifies this particular card number. You can use
          this attribute to check whether two customers who've signed up with you
          are using the same card number, for example.
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      last4:
        description: The last four digits of the card.
        type: string
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      name:
        description: Cardholder name.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - card
        type: string
      tokenization_method:
        description: If the card number is tokenized, this is the method that was
          used. Can be `apple_pay` or `android_pay`.
        type: string
    required:
    - brand
    - exp_month
    - exp_year
    - funding
    - id
    - last4
    - metadata
    - object
    title: TokenCard
    type: object
    x-expandableFields: []
  topup:
    properties:
      amount:
        description: Amount transferred, in %s.
        type: integer
      balance_transaction:
        description: ID of the balance transaction that describes the impact of this
          top-up on your account balance.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      expected_availability_date:
        description: Date the funds are expected to arrive in your Stripe account
          for payouts. This factors in delays like weekends or bank holidays.
        type: integer
      failure_code:
        description: Error code explaining reason for top up failure if available
          (see [the errors section](/docs/api#errors) for a list of codes).
        type: string
      failure_message:
        description: Message to user further explaining reason for top up failure
          if available.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - topup
        type: string
      source:
        "$ref": "#/definitions/source"
      statement_descriptor:
        description: Extra information about a top-up. This will appear on your source's
          bank statement. It must contain at least one letter.
        type: string
      status:
        description: The status of the top-up is either `failed`, `pending`, `reversed`,
          or `succeeded`.
        enum:
        - failed
        - pending
        - reversed
        - succeeded
        type: string
    required:
    - amount
    - created
    - currency
    - id
    - livemode
    - metadata
    - object
    - source
    - status
    title: Topup
    type: object
    x-expandableFields:
    - balance_transaction
    - source
    x-resourceId: topup
  transfer:
    properties:
      amount:
        description: Amount in %s to be transferred.
        type: integer
      amount_reversed:
        description: Amount in %s reversed (can be less than the amount attribute
          on the transfer if a partial reversal was issued).
        type: integer
      balance_transaction:
        description: Balance transaction that describes the impact of this transfer
          on your account balance.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      created:
        description: Time that this record of the transfer was first created.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      destination:
        description: ID of the Stripe account the transfer was sent to.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account"
      destination_payment:
        description: If the destination is a Stripe account, this will be the ID of
          the payment that the destination account received for the transfer.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: A set of key/value pairs that you can attach to a transfer object.
          It can be useful for storing additional information about the transfer in
          a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - transfer
        type: string
      reversals:
        description: A list of reversals that have been applied to the transfer.
        properties:
          data:
            items:
              "$ref": "#/definitions/transfer_reversal"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: TransferReversalList
        type: object
        x-expandableFields:
        - data
      reversed:
        description: Whether the transfer has been fully reversed. If the transfer
          is only partially reversed, this attribute will still be false.
        type: boolean
      source_transaction:
        description: ID of the charge or payment that was used to fund the transfer.
          If null, the transfer was funded from the available balance.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
      source_type:
        description: The source balance this transfer came from. One of `card`, `bank_account`,
          `bitcoin_receiver`, or `alipay_account`.
        type: string
      transfer_group:
        description: A string that identifies this transaction as part of a group.
          See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions)
          for details.
        type: string
    required:
    - amount
    - amount_reversed
    - created
    - currency
    - id
    - livemode
    - metadata
    - object
    - reversals
    - reversed
    title: Transfer
    type: object
    x-expandableFields:
    - balance_transaction
    - destination
    - destination_payment
    - reversals
    - source_transaction
    x-resourceId: transfer
  transfer_recipient:
    properties:
      active_account:
        "$ref": "#/definitions/bank_account"
      cards:
        properties:
          data:
            items:
              "$ref": "#/definitions/card"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: CardList
        type: object
        x-expandableFields:
        - data
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      default_card:
        description: The default card to use for creating transfers to this recipient.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/card"
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      email:
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      migrated_to:
        description: 'The ID of the [Custom account](/docs/connect/custom-accounts)
          this recipient was migrated to. If set, the recipient can no longer be updated,
          nor can transfers be made to it: use the Custom account instead.'
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account"
      name:
        description: Full, legal name of the recipient.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - recipient
        type: string
      rolled_back_from:
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account"
      type:
        description: Type of the recipient, one of `individual` or `corporation`.
        type: string
    required:
    - created
    - id
    - livemode
    - metadata
    - object
    - type
    title: TransferRecipient
    type: object
    x-expandableFields:
    - active_account
    - cards
    - default_card
    - migrated_to
    - rolled_back_from
    x-resourceId: transfer_recipient
  transfer_recipient_transfer:
    properties:
      amount:
        description: Amount (in %s) to be transferred to your bank account.
        type: integer
      amount_reversed:
        description: Amount in %s reversed (can be less than the amount attribute
          on the transfer if a partial reversal was issued).
        type: integer
      application_fee:
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/backwards_compatible_platform_earning"
      automatic:
        description: Returns `true` if the payout was created by an [automated payout
          schedule](/docs/payouts#payout-schedule), and `false` if it was [requested
          manually](https://stripe.com/docs/payouts#manual-payouts).
        type: boolean
      balance_transaction:
        description: Balance transaction that describes the impact of this transfer
          on your account balance.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      date:
        description: Date the transfer is scheduled to arrive in the bank. This factors
          in delays like weekends or bank holidays.
        type: integer
      description:
        description: Internal-only description of the transfer.
        type: string
      destination:
        description: ID of the bank account, card, or Stripe account the transfer
          was sent to.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/account"
          - "$ref": "#/definitions/bank_account"
          - "$ref": "#/definitions/card"
      destination_payment:
        description: If the destination is a Stripe account, this will be the ID of
          the payment that the destination account received for the transfer.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
      failure_code:
        description: Error code explaining reason for transfer failure if available.
          See [Types of transfer failures](/docs/api#transfer_failures) for a list
          of failure codes.
        type: string
      failure_message:
        description: Message to user further explaining reason for transfer failure
          if available.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      method:
        description: The method used to send this transfer, which can be `standard`
          or `instant`. `instant` is only supported for transfers to debit cards.
          (See [Instant payouts for marketplaces](/blog/instant-payouts-for-marketplaces)
          for more information.)
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - recipient_transfer
        type: string
      reversals:
        description: A list of reversals that have been applied to the transfer.
        properties:
          data:
            items:
              "$ref": "#/definitions/transfer_reversal"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: TransferReversalList
        type: object
        x-expandableFields:
        - data
      reversed:
        description: Whether the transfer has been fully reversed. If the transfer
          is only partially reversed, this attribute will still be false.
        type: boolean
      source_transaction:
        description: ID of the charge (or other transaction) that was used to fund
          the transfer. If null, the transfer was funded from the available balance.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
          - "$ref": "#/definitions/platform_fee"
          - "$ref": "#/definitions/transfer_reversal"
      source_type:
        description: The source balance this transfer came from. One of `card`, `bank_account`,
          `bitcoin_receiver`, or `alipay_account`.
        type: string
      statement_descriptor:
        description: Extra information about a transfer to be displayed on the user's
          bank statement.
        type: string
      status:
        description: Current status of the transfer (`paid`, `pending`, `in_transit`,
          `canceled` or `failed`). A transfer will be `pending` until it is submitted
          to the bank, at which point it becomes `in_transit`. It will then change
          to `paid` if the transaction goes through. If it does not go through successfully,
          its status will change to `failed` or `canceled`.
        type: string
      transfer_group:
        description: A string that identifies this transaction as part of a group.
          See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions)
          for details.
        type: string
      type:
        description: Can be `card`, `bank_account`, or `stripe_account`.
        type: string
    required:
    - amount
    - amount_reversed
    - automatic
    - created
    - currency
    - date
    - id
    - livemode
    - metadata
    - object
    - reversals
    - reversed
    - status
    - type
    title: TransferRecipientTransfer
    type: object
    x-expandableFields:
    - application_fee
    - balance_transaction
    - destination
    - destination_payment
    - reversals
    - source_transaction
  transfer_reversal:
    properties:
      amount:
        description: Amount, in %s.
        type: integer
      balance_transaction:
        description: Balance transaction that describes the impact on your account
          balance.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/balance_transaction"
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - transfer_reversal
        type: string
      transfer:
        description: ID of the transfer that was reversed.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/transfer"
    required:
    - amount
    - created
    - currency
    - id
    - metadata
    - object
    - transfer
    title: TransferReversal
    type: object
    x-expandableFields:
    - balance_transaction
    - transfer
    x-resourceId: transfer_reversal
  transfer_schedule:
    properties:
      delay_days:
        description: The number of days charges for the account will be held before
          being paid out.
        type: integer
      interval:
        description: How frequently funds will be paid out. One of `manual` (transfers
          only created via API call), `daily`, `weekly`, or `monthly`.
        type: string
      monthly_anchor:
        description: The day of the month funds will be paid out. Only shown if `interval`
          is monthly. Payouts scheduled between 29-31st of the month are sent on the
          last day of shorter months.
        type: integer
      weekly_anchor:
        description: The day of the week funds will be paid out, of the style 'monday',
          'tuesday', etc. Only shown if `interval` is weekly.
        type: string
    required:
    - delay_days
    - interval
    title: TransferSchedule
    type: object
    x-expandableFields: []
  transform_usage:
    properties:
      divide_by:
        description: Divide usage by this number.
        type: integer
      round:
        description: After division, either round the result `up` or `down`.
        enum:
        - down
        - up
        type: string
    required:
    - divide_by
    - round
    title: TransformUsage
    type: object
    x-expandableFields: []
  upcoming_invoice:
    properties:
      amount_due:
        description: Final amount due at this time for this invoice. If the invoice's
          total is smaller than the minimum charge amount, for example, or if there
          is account credit that can be applied to the invoice, the `amount_due` may
          be 0. If there is a positive `starting_balance` for the invoice (the customer
          owes money), the `amount_due` will also take that into account. The charge
          that gets generated for the invoice will be for the amount specified in
          `amount_due`.
        type: integer
      amount_paid:
        description: The amount, in %s, that was paid.
        type: integer
      amount_remaining:
        description: The amount remaining, in %s, that is due.
        type: integer
      application_fee:
        description: The fee in %s that will be applied to the invoice and transferred
          to the application owner's Stripe account when the invoice is paid.
        type: integer
      attempt_count:
        description: Number of payment attempts made for this invoice, from the perspective
          of the payment retry schedule. Any payment attempt counts as the first attempt,
          and subsequently only automatic retries increment the attempt count. In
          other words, manual payment attempts after the first attempt do not affect
          the retry schedule.
        type: integer
      attempted:
        description: Whether an attempt has been made to pay the invoice. An invoice
          is not attempted until 1 hour after the `invoice.created` webhook, for example,
          so you might not want to display that invoice as unpaid to your users.
        type: boolean
      billing:
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay this invoice using the default
          source attached to the customer. When sending an invoice, Stripe will email
          this invoice to the customer with payment instructions.
        enum:
        - charge_automatically
        - send_invoice
        type: string
      billing_reason:
        description: 'Indicates the reason why the invoice was created. `subscription_cycle`
          indicates an invoice created by a subscription advancing into a new period.
          `subscription_update` indicates an invoice created due to creating or updating
          a subscription. `subscription` is set for all old invoices to indicate either
          a change to a subscription or a period advancement. `manual` is set for
          all invoices unrelated to a subscription (for example: created via the invoice
          editor). The `upcoming` value is reserved for simulated invoices per the
          upcoming invoice endpoint.'
        enum:
        - manual
        - subscription
        - subscription_cycle
        - subscription_threshold
        - subscription_update
        - upcoming
        type: string
      charge:
        description: ID of the latest charge generated for this invoice, if any.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/charge"
      closed:
        description: Whether the invoice is still trying to collect payment. An invoice
          is closed if it's either paid or it has been marked closed. A closed invoice
          will no longer attempt to collect payment.
        type: boolean
      currency:
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/customer"
          - "$ref": "#/definitions/deleted_object"
      date:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      discount:
        "$ref": "#/definitions/discount"
      due_date:
        description: The date on which payment for this invoice is due. This value
          will be `null` for invoices where `billing=charge_automatically`.
        type: integer
      ending_balance:
        description: Ending customer balance after the invoice is frozen. Invoices
          are frozen approximately an hour after successful webhook delivery or when
          payment collection is attempted for the invoice. If the invoice has not
          been frozen yet, this will be null.
        type: integer
      forgiven:
        description: Whether the invoice has been forgiven. Forgiving an invoice instructs
          us to update the subscription status as if the invoice were successfully
          paid. Once an invoice has been forgiven, it cannot be unforgiven or reopened.
        type: boolean
      lines:
        description: 'The individual line items that make up the invoice. `lines`
          is sorted as follows: invoice items in reverse chronological order, followed
          by the subscription, if any.'
        properties:
          data:
            items:
              "$ref": "#/definitions/invoice_line_item"
            type: array
          has_more:
            description: True if this list has another page of items after this one
              that can be fetched.
            type: boolean
          object:
            description: String representing the object's type. Objects of the same
              type share the same value. Always has the value `list`.
            enum:
            - list
            type: string
          url:
            description: The URL where this list can be accessed.
            type: string
        required:
        - data
        - has_more
        - object
        - url
        title: InvoiceLinesList
        type: object
        x-expandableFields:
        - data
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        description: Set of key-value pairs that you can attach to an object. This
          can be useful for storing additional information about the object in a structured
          format.
        type: object
      next_payment_attempt:
        description: The time at which payment will next be attempted. This value
          will be `null` for invoices where `billing=send_invoice`.
        type: integer
      number:
        description: A unique, identifying string that appears on emails sent to the
          customer for this invoice. This starts with the customer's unique invoice_prefix
          if it is specified.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - invoice
        type: string
      paid:
        description: Whether payment was successfully collected for this invoice.
          An invoice can be paid (most commonly) with a charge or with credit from
          the customer's account balance.
        type: boolean
      period_end:
        description: End of the usage period during which invoice items were added
          to this invoice.
        type: integer
      period_start:
        description: Start of the usage period during which invoice items were added
          to this invoice.
        type: integer
      receipt_number:
        description: This is the transaction number that appears on email receipts
          sent for this invoice.
        type: string
      starting_balance:
        description: Starting customer balance before the invoice is frozen. If the
          invoice has not been frozen yet, this will be the current customer balance.
        type: integer
      statement_descriptor:
        description: Extra information about an invoice for the customer's credit
          card statement.
        type: string
      subscription:
        description: The subscription that this invoice was prepared for, if any.
        type: string
        x-expansionResources:
          oneOf:
          - "$ref": "#/definitions/subscription"
      subscription_proration_date:
        description: Only set for upcoming invoices that preview prorations. The time
          used to calculate prorations.
        type: integer
      subtotal:
        description: Total of all subscriptions, invoice items, and prorations on
          the invoice before any discount is applied.
        type: integer
      tax:
        description: The amount of tax included in the total, calculated from `tax_percent`
          and the subtotal. If no `tax_percent` is defined, this value will be null.
        type: integer
      tax_percent:
        description: This percentage of the subtotal has been added to the total amount
          of the invoice, including invoice line items and discounts. This field is
          inherited from the subscription's `tax_percent` field, but can be changed
          before the invoice is paid. This field defaults to null.
        type: number
      total:
        description: Total after discount.
        type: integer
      webhooks_delivered_at:
        description: The time at which webhooks for this invoice were successfully
          delivered (if the invoice had no webhooks to deliver, this will match `date`).
          Invoice payment is delayed until webhooks are delivered, or until all webhook
          delivery attempts have been exhausted.
        type: integer
    required:
    - amount_due
    - amount_paid
    - amount_remaining
    - attempt_count
    - attempted
    - closed
    - currency
    - customer
    - date
    - forgiven
    - lines
    - livemode
    - object
    - paid
    - period_end
    - period_start
    - starting_balance
    - subtotal
    - total
    title: UpcomingInvoice
    type: object
    x-expandableFields:
    - charge
    - customer
    - discount
    - lines
    - subscription
    x-resourceId: upcoming_invoice
  usage_record:
    properties:
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        enum:
        - usage_record
        type: string
      quantity:
        description: The usage quantity for the specified date.
        type: integer
      subscription_item:
        description: The ID of the subscription item this usage record contains data
          for.
        type: string
      timestamp:
        description: The timestamp when this usage occurred.
        type: integer
    required:
    - id
    - livemode
    - object
    - quantity
    - subscription_item
    - timestamp
    title: UsageRecord
    type: object
    x-expandableFields: []
    x-resourceId: usage_record
host: api.stripe.com
info:
  contact:
    email: dev-platform@stripe.com
    name: Stripe Dev Platform Team
    url: https://stripe.com
  description: The Stripe REST API. Please see https://stripe.com/docs/api for more
    details.
  termsOfService: https://stripe.com/us/terms/
  title: Stripe API
  version: '2018-05-21'
paths:
  "/v1/3d_secure":
    post:
      description: ''
      operationId: Create3DSecure
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            amount:
              description: Amount of the charge that you will create when authentication
                completes.
              type: integer
            card:
              description: The ID of a card token, or the ID of a card belonging to
                the given customer.
              type: string
            currency:
              description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
                in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
              type: string
            customer:
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            return_url:
              description: The URL that the cardholder's browser will be returned
                to when authentication completes.
              type: string
          required:
          - amount
          - currency
          - return_url
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/three_d_secure"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/3d_secure/{three_d_secure}":
    get:
      description: "<p>Retrieves a 3D Secure object.</p>"
      operationId: Retrieve3DSecure
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        type: array
        items:
          type: string
      - description: The identifier of the 3D Secure object to be retrieved.
        in: path
        name: three_d_secure
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/three_d_secure"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/account":
    delete:
      description: <p>With <a href="/docs/connect">Connect</a>, you may delete Custom
        accounts you manage.</p><p>Custom accounts created using test-mode keys can
        be deleted at any time. Custom accounts created using live-mode keys may only
        be deleted once all balances are zero.</p><p>If you are looking to close your
        own account, use the <a href="https://dashboard.stripe.com/account/data">data
        tab in your account settings</a> instead.</p>
      operationId: AccountDelete
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            account:
              description: The identifier of the account to be deleted. If none is
                provided, will default to the account of the API key.
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the details of the account.</p>"
      operationId: AccountRetrieve
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the account to retrieve. If none is provided,
          the account associated with the API key is returned.
        in: query
        name: account
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>Updates a connected <a href="/docs/connect/accounts">Express
        or Custom account</a> by setting the values of the parameters passed. Any
        parameters not provided are left unchanged. Most parameters can be changed
        only for Custom accounts. (These are marked <strong>Custom Only</strong> below.)
        Parameters marked <strong>Custom and Express</strong> are supported by both
        account types.</p><p>To update your own account, use the <a href="https://dashboard.stripe.com/account">Dashboard</a>.
        Refer to our <a href="/docs/connect/updating-accounts">Connect</a> documentation
        to learn more about updating accounts.</p>
      operationId: AccountUpdate
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            account:
              type: string
            account_token:
              type: string
            bank_account:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's bank account details.
            business_logo:
              description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
                A logo for this account (at least 128px x 128px)"
              type: string
            business_name:
              description: The publicly sharable name for this account.
              type: string
            business_primary_color:
              description: A CSS hex color value representing the primary branding
                color for this account.
              type: string
            business_url:
              description: The URL that best shows the service or product provided
                by this account.
              type: string
            debit_negative_balances:
              description: A Boolean indicating whether Stripe should try to reclaim
                negative balances from an attached bank account. For details, see
                [Understanding Connect Account Balances](/docs/connect/account-balances).
              type: boolean
            decline_charge_on:
              description: Account-level settings to automatically decline certain
                types of charges, regardless of the card issuer's decision.
              properties:
                avs_failure:
                  type: boolean
                cvc_failure:
                  type: boolean
              title: account_decline_charge_on_specs
              type: object
            default_currency:
              description: Three-letter ISO currency code representing the default
                currency for the account. This must be a currency that [Stripe supports
                in the account's country](https://stripe.com/docs/payouts).
              type: string
            email:
              description: Email address of the account representative. For Standard
                accounts, this is used to ask them to claim their Stripe account.
                For Custom accounts, this only makes the account easier to identify
                to platforms; Stripe does not email the account representative.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            external_account:
              description: A card or bank account to attach to the account. You can
                provide either a token, like the ones returned by [Stripe.js](/docs/stripe.js),
                or a dictionary, as documented in the `external_account` parameter
                for [bank account](/docs/api#account_create_bank_account) creation.
                <br><br>By default, providing an external account sets it as the new
                default external account for its currency, and deletes the old default
                if one exists. To add additional external accounts without replacing
                the existing default for the currency, use the bank account or card
                creation API.
            legal_entity:
              description: Information about the legal entity itself, including information
                about the associated account representative.
              properties:
                additional_owners:
                  items:
                    properties:
                      address:
                        properties:
                          city:
                            type: string
                          country:
                            type: string
                          line1:
                            type: string
                          line2:
                            type: string
                          postal_code:
                            type: string
                          state:
                            type: string
                        title: account_address_specs
                        type: object
                      dob:
                        properties:
                          day:
                            type: integer
                          month:
                            type: integer
                          year:
                            type: integer
                        required:
                        - day
                        - month
                        - year
                        title: date_of_birth_specs
                        type: object
                      first_name:
                        type: string
                      last_name:
                        type: string
                      maiden_name:
                        type: string
                      personal_id_number:
                        type: string
                      verification:
                        properties: {}
                        title: account_person_verification_specs
                        type: object
                    title: account_owner_specs
                    type: object
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  title: account_address_specs
                  type: object
                address_kana:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                    town:
                      type: string
                  title: japan_address_kana_specs
                  type: object
                address_kanji:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                    town:
                      type: string
                  title: japan_address_kanji_specs
                  type: object
                business_name:
                  type: string
                business_name_kana:
                  type: string
                business_name_kanji:
                  type: string
                business_tax_id:
                  type: string
                business_vat_id:
                  type: string
                dob:
                  properties:
                    day:
                      type: integer
                    month:
                      type: integer
                    year:
                      type: integer
                  required:
                  - day
                  - month
                  - year
                  title: date_of_birth_specs
                  type: object
                first_name:
                  type: string
                first_name_kana:
                  type: string
                first_name_kanji:
                  type: string
                gender:
                  type: string
                last_name:
                  type: string
                last_name_kana:
                  type: string
                last_name_kanji:
                  type: string
                maiden_name:
                  type: string
                personal_address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  title: account_address_specs
                  type: object
                personal_address_kana:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                    town:
                      type: string
                  title: japan_address_kana_specs
                  type: object
                personal_address_kanji:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                    town:
                      type: string
                  title: japan_address_kanji_specs
                  type: object
                personal_id_number:
                  type: string
                phone_number:
                  type: string
                ssn_last_4:
                  type: string
                tax_id_registrar:
                  type: string
                type:
                  type: string
                verification:
                  properties: {}
                  title: account_person_verification_specs
                  type: object
              title: account_legal_entity_specs
              type: object
            metadata:
              description: A set of key-value pairs that you can attach to an `Account`
                object. This can be useful for storing additional information about
                the account in a structured format.
              type: object
            payout_schedule:
              description: Details on when funds from charges are available, and when
                they are paid out to an external account. For details, see our [Setting
                Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information)
                documentation.
              properties:
                delay_days:
                  type: integer
                interval:
                  enum:
                  - daily
                  - four_times_monthly
                  - manual
                  - monthly
                  - weekly
                  type: string
                monthly_anchor:
                  type: integer
                weekly_anchor:
                  enum:
                  - friday
                  - monday
                  - saturday
                  - sunday
                  - thursday
                  - tuesday
                  - wednesday
                  type: string
              title: transfer_schedule_specs
              type: object
            payout_statement_descriptor:
              description: The text that appears on the bank account statement for
                payouts. If not set, this defaults to the platform's bank descriptor
                as set in the Dashboard.
              type: string
            product_description:
              description: Internal-only description of the product sold by, or service
                provided by, the business. Used by Stripe for risk and underwriting
                purposes.
              type: string
            statement_descriptor:
              description: The default text that appears on credit card statements
                when a charge is made [directly on the account](/docs/connect/direct-charges)
              type: string
            support_email:
              description: A publicly shareable support email address for the business.
              type: string
            support_phone:
              description: A publicly shareable support phone number for the business.
              type: string
            support_url:
              description: A publicly shareable URL that provides support for this
                account.
              type: string
            tos_acceptance:
              description: Details on the account's acceptance of the [Stripe Services
                Agreement](/docs/connect/updating-accounts#tos-acceptance).
              properties:
                date:
                  type: integer
                ip:
                  type: string
                user_agent:
                  type: string
              required:
              - date
              - ip
              title: account_tos_acceptance_specs
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/account/bank_accounts":
    post:
      description: ''
      operationId: CreateAccountExternalAccount
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            bank_account:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's bank account details.
            default_for_currency:
              description: When set to true, or if this is the first external account
                added in this currency, this account becomes the default external
                account for its currency.
              type: boolean
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            external_account:
              description: This string to be replaced by DocSpecGenerator.
            metadata:
              description: A set of key-value pairs that you can attach to an external
                account object. It can be useful for storing additional information
                about the external account in a structured format.
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external_account_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/account/bank_accounts/{id}":
    delete:
      description: ''
      operationId: DeleteAccountExternalAccount
      parameters:
      - description: The ID of the external account to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_bank_account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveAccountExternalAccount
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external_account_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>Updates the metadata of a bank account belonging to a <a href="/docs/connect/custom-accounts">Custom
        account</a>, and optionally sets it as the default for its currency. Other
        bank account details are not editable by design.</p><p>You can re-enable a
        disabled bank account by performing an update call without providing any arguments
        or changes.</p>
      operationId: UpdateAccountExternalAccount
      parameters:
      - description: The ID of the bank account to update
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            address_city:
              description: City/District/Suburb/Town/Village.
              type: string
            address_country:
              description: Billing address country, if provided when creating card.
              type: string
            address_line1:
              description: Address line 1 (Street address/PO Box/Company name).
              type: string
            address_line2:
              description: Address line 2 (Apartment/Suite/Unit/Building).
              type: string
            address_state:
              description: State/County/Province/Region.
              type: string
            address_zip:
              description: ZIP or postal code
              type: string
            default_for_currency:
              type: boolean
            exp_month:
              description: Two digit number representing the card’s expiration month.
              type: string
            exp_year:
              description: Four digit number representing the card’s expiration year.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
            name:
              description: Cardholder name.
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external_account_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/account/external_accounts":
    get:
      description: ''
      operationId: AllAccountExternalAccounts
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                description: The list contains all external accounts that have been
                  attached to the Stripe account. These may be bank accounts or cards.
                items:
                  "$ref": "#/definitions/bank_account"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: ExternalAccountList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateAccountExternalAccount
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            bank_account:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's bank account details.
            default_for_currency:
              description: When set to true, or if this is the first external account
                added in this currency, this account becomes the default external
                account for its currency.
              type: boolean
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            external_account:
              description: This string to be replaced by DocSpecGenerator.
            metadata:
              description: A set of key-value pairs that you can attach to an external
                account object. It can be useful for storing additional information
                about the external account in a structured format.
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external_account_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/account/external_accounts/{id}":
    delete:
      description: ''
      operationId: DeleteAccountExternalAccount
      parameters:
      - description: The ID of the external account to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_bank_account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveAccountExternalAccount
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external_account_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>Updates the metadata of a bank account belonging to a <a href="/docs/connect/custom-accounts">Custom
        account</a>, and optionally sets it as the default for its currency. Other
        bank account details are not editable by design.</p><p>You can re-enable a
        disabled bank account by performing an update call without providing any arguments
        or changes.</p>
      operationId: UpdateAccountExternalAccount
      parameters:
      - description: The ID of the bank account to update
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            address_city:
              description: City/District/Suburb/Town/Village.
              type: string
            address_country:
              description: Billing address country, if provided when creating card.
              type: string
            address_line1:
              description: Address line 1 (Street address/PO Box/Company name).
              type: string
            address_line2:
              description: Address line 2 (Apartment/Suite/Unit/Building).
              type: string
            address_state:
              description: State/County/Province/Region.
              type: string
            address_zip:
              description: ZIP or postal code
              type: string
            default_for_currency:
              type: boolean
            exp_month:
              description: Two digit number representing the card’s expiration month.
              type: string
            exp_year:
              description: Four digit number representing the card’s expiration year.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
            name:
              description: Cardholder name.
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external_account_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/account/login_links":
    post:
      description: <p>Creates a single-use login link for an Express account to access
        their Stripe dashboard.</p><p><strong>You may only create login links for
        <a href="/docs/connect/express-accounts">Express accounts</a> connected to
        your platform</strong>.</p>
      operationId: LoginLinkCreate
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            account:
              description: The identifier of the account to create a login link for.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            redirect_url:
              description: Where to redirect the user after they log out of their
                dashboard.
              type: string
          required:
          - account
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/login_link"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/account/logout":
    put:
      description: <p>Invalidates all sessions for a light account, for a platform
        to use during platform logout.</p><p><strong>You may only log out <a href="/docs/connect/express-accounts">Express
        accounts</a> connected to your platform</strong>.</p>
      operationId: LightAccountLogout
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            account:
              description: The identifier of the account to log out.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
          required:
          - account
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/light_account_logout"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts":
    get:
      description: <p>Returns a list of accounts connected to your platform via <a
        href="/docs/connect">Connect</a>. If you’re not a platform, the list is empty.</p>
      operationId: AllAccount
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/account"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: AccountCreate
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            account_token:
              type: string
            bank_account:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's bank account details.
            business_logo:
              description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
                A logo for this account (at least 128px x 128px)"
              type: string
            business_name:
              description: The publicly sharable name for this account.
              type: string
            business_primary_color:
              description: A CSS hex color value representing the primary branding
                color for this account.
              type: string
            business_url:
              description: The URL that best shows the service or product provided
                by this account.
              type: string
            country:
              type: string
            debit_negative_balances:
              description: A Boolean indicating whether Stripe should try to reclaim
                negative balances from an attached bank account. For details, see
                [Understanding Connect Account Balances](/docs/connect/account-balances).
              type: boolean
            decline_charge_on:
              description: Account-level settings to automatically decline certain
                types of charges, regardless of the card issuer's decision.
              properties:
                avs_failure:
                  type: boolean
                cvc_failure:
                  type: boolean
              title: account_decline_charge_on_specs
              type: object
            default_currency:
              description: Three-letter ISO currency code representing the default
                currency for the account. This must be a currency that [Stripe supports
                in the account's country](https://stripe.com/docs/payouts).
              type: string
            email:
              description: Email address of the account representative. For Standard
                accounts, this is used to ask them to claim their Stripe account.
                For Custom accounts, this only makes the account easier to identify
                to platforms; Stripe does not email the account representative.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            external_account:
              description: A card or bank account to attach to the account. You can
                provide either a token, like the ones returned by [Stripe.js](/docs/stripe.js),
                or a dictionary, as documented in the `external_account` parameter
                for [bank account](/docs/api#account_create_bank_account) creation.
                <br><br>By default, providing an external account sets it as the new
                default external account for its currency, and deletes the old default
                if one exists. To add additional external accounts without replacing
                the existing default for the currency, use the bank account or card
                creation API.
            from_recipient:
              type: string
            legal_entity:
              description: Information about the legal entity itself, including information
                about the associated account representative.
              properties:
                additional_owners:
                  items:
                    properties:
                      address:
                        properties:
                          city:
                            type: string
                          country:
                            type: string
                          line1:
                            type: string
                          line2:
                            type: string
                          postal_code:
                            type: string
                          state:
                            type: string
                        title: account_address_specs
                        type: object
                      dob:
                        properties:
                          day:
                            type: integer
                          month:
                            type: integer
                          year:
                            type: integer
                        required:
                        - day
                        - month
                        - year
                        title: date_of_birth_specs
                        type: object
                      first_name:
                        type: string
                      last_name:
                        type: string
                      maiden_name:
                        type: string
                      personal_id_number:
                        type: string
                      verification:
                        properties: {}
                        title: account_person_verification_specs
                        type: object
                    title: account_owner_specs
                    type: object
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  title: account_address_specs
                  type: object
                address_kana:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                    town:
                      type: string
                  title: japan_address_kana_specs
                  type: object
                address_kanji:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                    town:
                      type: string
                  title: japan_address_kanji_specs
                  type: object
                business_name:
                  type: string
                business_name_kana:
                  type: string
                business_name_kanji:
                  type: string
                business_tax_id:
                  type: string
                business_vat_id:
                  type: string
                dob:
                  properties:
                    day:
                      type: integer
                    month:
                      type: integer
                    year:
                      type: integer
                  required:
                  - day
                  - month
                  - year
                  title: date_of_birth_specs
                  type: object
                first_name:
                  type: string
                first_name_kana:
                  type: string
                first_name_kanji:
                  type: string
                gender:
                  type: string
                last_name:
                  type: string
                last_name_kana:
                  type: string
                last_name_kanji:
                  type: string
                maiden_name:
                  type: string
                personal_address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  title: account_address_specs
                  type: object
                personal_address_kana:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                    town:
                      type: string
                  title: japan_address_kana_specs
                  type: object
                personal_address_kanji:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                    town:
                      type: string
                  title: japan_address_kanji_specs
                  type: object
                personal_id_number:
                  type: string
                phone_number:
                  type: string
                ssn_last_4:
                  type: string
                tax_id_registrar:
                  type: string
                type:
                  type: string
                verification:
                  properties: {}
                  title: account_person_verification_specs
                  type: object
              title: account_legal_entity_specs
              type: object
            metadata:
              description: A set of key-value pairs that you can attach to an `Account`
                object. This can be useful for storing additional information about
                the account in a structured format.
              type: object
            payout_schedule:
              description: Details on when funds from charges are available, and when
                they are paid out to an external account. For details, see our [Setting
                Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information)
                documentation.
              properties:
                delay_days:
                  type: integer
                interval:
                  enum:
                  - daily
                  - four_times_monthly
                  - manual
                  - monthly
                  - weekly
                  type: string
                monthly_anchor:
                  type: integer
                weekly_anchor:
                  enum:
                  - friday
                  - monday
                  - saturday
                  - sunday
                  - thursday
                  - tuesday
                  - wednesday
                  type: string
              title: transfer_schedule_specs
              type: object
            payout_statement_descriptor:
              description: The text that appears on the bank account statement for
                payouts. If not set, this defaults to the platform's bank descriptor
                as set in the Dashboard.
              type: string
            product_description:
              description: Internal-only description of the product sold by, or service
                provided by, the business. Used by Stripe for risk and underwriting
                purposes.
              type: string
            statement_descriptor:
              description: The default text that appears on credit card statements
                when a charge is made [directly on the account](/docs/connect/direct-charges)
              type: string
            support_email:
              description: A publicly shareable support email address for the business.
              type: string
            support_phone:
              description: A publicly shareable support phone number for the business.
              type: string
            support_url:
              description: A publicly shareable URL that provides support for this
                account.
              type: string
            tos_acceptance:
              description: Details on the account's acceptance of the [Stripe Services
                Agreement](/docs/connect/updating-accounts#tos-acceptance).
              properties:
                date:
                  type: integer
                ip:
                  type: string
                user_agent:
                  type: string
              required:
              - date
              - ip
              title: account_tos_acceptance_specs
              type: object
            type:
              enum:
              - custom
              - express
              - standard
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account_with_keys"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}":
    delete:
      description: <p>With <a href="/docs/connect">Connect</a>, you may delete Custom
        accounts you manage.</p><p>Custom accounts created using test-mode keys can
        be deleted at any time. Custom accounts created using live-mode keys may only
        be deleted once all balances are zero.</p><p>If you are looking to close your
        own account, use the <a href="https://dashboard.stripe.com/account/data">data
        tab in your account settings</a> instead.</p>
      operationId: AccountDelete
      parameters:
      - description: The identifier of the account to be deleted. If none is provided,
          will default to the account of the API key.
        in: path
        name: account
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the details of the account.</p>"
      operationId: AccountRetrieve
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the account to retrieve. If none is provided,
          the account associated with the API key is returned.
        in: path
        name: account
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>Updates a connected <a href="/docs/connect/accounts">Express
        or Custom account</a> by setting the values of the parameters passed. Any
        parameters not provided are left unchanged. Most parameters can be changed
        only for Custom accounts. (These are marked <strong>Custom Only</strong> below.)
        Parameters marked <strong>Custom and Express</strong> are supported by both
        account types.</p><p>To update your own account, use the <a href="https://dashboard.stripe.com/account">Dashboard</a>.
        Refer to our <a href="/docs/connect/updating-accounts">Connect</a> documentation
        to learn more about updating accounts.</p>
      operationId: AccountUpdate
      parameters:
      - in: path
        name: account
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            account_token:
              type: string
            bank_account:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's bank account details.
            business_logo:
              description: "(ID of a [file upload](https://stripe.com/docs/guides/file-upload))
                A logo for this account (at least 128px x 128px)"
              type: string
            business_name:
              description: The publicly sharable name for this account.
              type: string
            business_primary_color:
              description: A CSS hex color value representing the primary branding
                color for this account.
              type: string
            business_url:
              description: The URL that best shows the service or product provided
                by this account.
              type: string
            debit_negative_balances:
              description: A Boolean indicating whether Stripe should try to reclaim
                negative balances from an attached bank account. For details, see
                [Understanding Connect Account Balances](/docs/connect/account-balances).
              type: boolean
            decline_charge_on:
              description: Account-level settings to automatically decline certain
                types of charges, regardless of the card issuer's decision.
              properties:
                avs_failure:
                  type: boolean
                cvc_failure:
                  type: boolean
              title: account_decline_charge_on_specs
              type: object
            default_currency:
              description: Three-letter ISO currency code representing the default
                currency for the account. This must be a currency that [Stripe supports
                in the account's country](https://stripe.com/docs/payouts).
              type: string
            email:
              description: Email address of the account representative. For Standard
                accounts, this is used to ask them to claim their Stripe account.
                For Custom accounts, this only makes the account easier to identify
                to platforms; Stripe does not email the account representative.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            external_account:
              description: A card or bank account to attach to the account. You can
                provide either a token, like the ones returned by [Stripe.js](/docs/stripe.js),
                or a dictionary, as documented in the `external_account` parameter
                for [bank account](/docs/api#account_create_bank_account) creation.
                <br><br>By default, providing an external account sets it as the new
                default external account for its currency, and deletes the old default
                if one exists. To add additional external accounts without replacing
                the existing default for the currency, use the bank account or card
                creation API.
            legal_entity:
              description: Information about the legal entity itself, including information
                about the associated account representative.
              properties:
                additional_owners:
                  items:
                    properties:
                      address:
                        properties:
                          city:
                            type: string
                          country:
                            type: string
                          line1:
                            type: string
                          line2:
                            type: string
                          postal_code:
                            type: string
                          state:
                            type: string
                        title: account_address_specs
                        type: object
                      dob:
                        properties:
                          day:
                            type: integer
                          month:
                            type: integer
                          year:
                            type: integer
                        required:
                        - day
                        - month
                        - year
                        title: date_of_birth_specs
                        type: object
                      first_name:
                        type: string
                      last_name:
                        type: string
                      maiden_name:
                        type: string
                      personal_id_number:
                        type: string
                      verification:
                        properties: {}
                        title: account_person_verification_specs
                        type: object
                    title: account_owner_specs
                    type: object
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  title: account_address_specs
                  type: object
                address_kana:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                    town:
                      type: string
                  title: japan_address_kana_specs
                  type: object
                address_kanji:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                    town:
                      type: string
                  title: japan_address_kanji_specs
                  type: object
                business_name:
                  type: string
                business_name_kana:
                  type: string
                business_name_kanji:
                  type: string
                business_tax_id:
                  type: string
                business_vat_id:
                  type: string
                dob:
                  properties:
                    day:
                      type: integer
                    month:
                      type: integer
                    year:
                      type: integer
                  required:
                  - day
                  - month
                  - year
                  title: date_of_birth_specs
                  type: object
                first_name:
                  type: string
                first_name_kana:
                  type: string
                first_name_kanji:
                  type: string
                gender:
                  type: string
                last_name:
                  type: string
                last_name_kana:
                  type: string
                last_name_kanji:
                  type: string
                maiden_name:
                  type: string
                personal_address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  title: account_address_specs
                  type: object
                personal_address_kana:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                    town:
                      type: string
                  title: japan_address_kana_specs
                  type: object
                personal_address_kanji:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                    town:
                      type: string
                  title: japan_address_kanji_specs
                  type: object
                personal_id_number:
                  type: string
                phone_number:
                  type: string
                ssn_last_4:
                  type: string
                tax_id_registrar:
                  type: string
                type:
                  type: string
                verification:
                  properties: {}
                  title: account_person_verification_specs
                  type: object
              title: account_legal_entity_specs
              type: object
            metadata:
              description: A set of key-value pairs that you can attach to an `Account`
                object. This can be useful for storing additional information about
                the account in a structured format.
              type: object
            payout_schedule:
              description: Details on when funds from charges are available, and when
                they are paid out to an external account. For details, see our [Setting
                Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information)
                documentation.
              properties:
                delay_days:
                  type: integer
                interval:
                  enum:
                  - daily
                  - four_times_monthly
                  - manual
                  - monthly
                  - weekly
                  type: string
                monthly_anchor:
                  type: integer
                weekly_anchor:
                  enum:
                  - friday
                  - monday
                  - saturday
                  - sunday
                  - thursday
                  - tuesday
                  - wednesday
                  type: string
              title: transfer_schedule_specs
              type: object
            payout_statement_descriptor:
              description: The text that appears on the bank account statement for
                payouts. If not set, this defaults to the platform's bank descriptor
                as set in the Dashboard.
              type: string
            product_description:
              description: Internal-only description of the product sold by, or service
                provided by, the business. Used by Stripe for risk and underwriting
                purposes.
              type: string
            statement_descriptor:
              description: The default text that appears on credit card statements
                when a charge is made [directly on the account](/docs/connect/direct-charges)
              type: string
            support_email:
              description: A publicly shareable support email address for the business.
              type: string
            support_phone:
              description: A publicly shareable support phone number for the business.
              type: string
            support_url:
              description: A publicly shareable URL that provides support for this
                account.
              type: string
            tos_acceptance:
              description: Details on the account's acceptance of the [Stripe Services
                Agreement](/docs/connect/updating-accounts#tos-acceptance).
              properties:
                date:
                  type: integer
                ip:
                  type: string
                user_agent:
                  type: string
              required:
              - date
              - ip
              title: account_tos_acceptance_specs
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}/bank_accounts":
    post:
      description: ''
      operationId: CreateAccountExternalAccount
      parameters:
      - in: path
        name: account
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            bank_account:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's bank account details.
            default_for_currency:
              description: When set to true, or if this is the first external account
                added in this currency, this account becomes the default external
                account for its currency.
              type: boolean
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            external_account:
              description: This string to be replaced by DocSpecGenerator.
            metadata:
              description: A set of key-value pairs that you can attach to an external
                account object. It can be useful for storing additional information
                about the external account in a structured format.
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external_account_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}/bank_accounts/{id}":
    delete:
      description: ''
      operationId: DeleteAccountExternalAccount
      parameters:
      - in: path
        name: account
        required: true
        type: string
      - description: The ID of the external account to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_bank_account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveAccountExternalAccount
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: account
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external_account_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>Updates the metadata of a bank account belonging to a <a href="/docs/connect/custom-accounts">Custom
        account</a>, and optionally sets it as the default for its currency. Other
        bank account details are not editable by design.</p><p>You can re-enable a
        disabled bank account by performing an update call without providing any arguments
        or changes.</p>
      operationId: UpdateAccountExternalAccount
      parameters:
      - in: path
        name: account
        required: true
        type: string
      - description: The ID of the bank account to update
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            address_city:
              description: City/District/Suburb/Town/Village.
              type: string
            address_country:
              description: Billing address country, if provided when creating card.
              type: string
            address_line1:
              description: Address line 1 (Street address/PO Box/Company name).
              type: string
            address_line2:
              description: Address line 2 (Apartment/Suite/Unit/Building).
              type: string
            address_state:
              description: State/County/Province/Region.
              type: string
            address_zip:
              description: ZIP or postal code
              type: string
            default_for_currency:
              type: boolean
            exp_month:
              description: Two digit number representing the card’s expiration month.
              type: string
            exp_year:
              description: Four digit number representing the card’s expiration year.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
            name:
              description: Cardholder name.
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external_account_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}/external_accounts":
    get:
      description: ''
      operationId: AllAccountExternalAccounts
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: account
        required: true
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                description: The list contains all external accounts that have been
                  attached to the Stripe account. These may be bank accounts or cards.
                items:
                  "$ref": "#/definitions/bank_account"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: ExternalAccountList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateAccountExternalAccount
      parameters:
      - in: path
        name: account
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            bank_account:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's bank account details.
            default_for_currency:
              description: When set to true, or if this is the first external account
                added in this currency, this account becomes the default external
                account for its currency.
              type: boolean
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            external_account:
              description: This string to be replaced by DocSpecGenerator.
            metadata:
              description: A set of key-value pairs that you can attach to an external
                account object. It can be useful for storing additional information
                about the external account in a structured format.
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external_account_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}/external_accounts/{id}":
    delete:
      description: ''
      operationId: DeleteAccountExternalAccount
      parameters:
      - in: path
        name: account
        required: true
        type: string
      - description: The ID of the external account to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_bank_account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveAccountExternalAccount
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: account
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external_account_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>Updates the metadata of a bank account belonging to a <a href="/docs/connect/custom-accounts">Custom
        account</a>, and optionally sets it as the default for its currency. Other
        bank account details are not editable by design.</p><p>You can re-enable a
        disabled bank account by performing an update call without providing any arguments
        or changes.</p>
      operationId: UpdateAccountExternalAccount
      parameters:
      - in: path
        name: account
        required: true
        type: string
      - description: The ID of the bank account to update
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            address_city:
              description: City/District/Suburb/Town/Village.
              type: string
            address_country:
              description: Billing address country, if provided when creating card.
              type: string
            address_line1:
              description: Address line 1 (Street address/PO Box/Company name).
              type: string
            address_line2:
              description: Address line 2 (Apartment/Suite/Unit/Building).
              type: string
            address_state:
              description: State/County/Province/Region.
              type: string
            address_zip:
              description: ZIP or postal code
              type: string
            default_for_currency:
              type: boolean
            exp_month:
              description: Two digit number representing the card’s expiration month.
              type: string
            exp_year:
              description: Four digit number representing the card’s expiration year.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
            name:
              description: Cardholder name.
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external_account_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}/login_links":
    post:
      description: <p>Creates a single-use login link for an Express account to access
        their Stripe dashboard.</p><p><strong>You may only create login links for
        <a href="/docs/connect/express-accounts">Express accounts</a> connected to
        your platform</strong>.</p>
      operationId: LoginLinkCreate
      parameters:
      - description: The identifier of the account to create a login link for.
        in: path
        name: account
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            redirect_url:
              description: Where to redirect the user after they log out of their
                dashboard.
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/login_link"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}/logout":
    put:
      description: <p>Invalidates all sessions for a light account, for a platform
        to use during platform logout.</p><p><strong>You may only log out <a href="/docs/connect/express-accounts">Express
        accounts</a> connected to your platform</strong>.</p>
      operationId: LightAccountLogout
      parameters:
      - description: The identifier of the account to log out.
        in: path
        name: account
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/light_account_logout"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}/reject":
    post:
      description: <p>With <a href="/docs/connect">Connect</a>, you may flag accounts
        as suspicious.</p><p>Test-mode Custom and Express accounts can be rejected
        at any time. Accounts created using live-mode keys may only be rejected once
        all balances are zero.</p>
      operationId: AccountReject
      parameters:
      - description: The identifier of the account to reject
        in: path
        name: account
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            reason:
              description: The reason for rejecting the account. Can be `fraud`, `terms_of_service`,
                or `other`.
              type: string
          required:
          - reason
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/apple_pay/domains":
    get:
      description: ''
      operationId: AllApplePayDomains
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: query
        name: domain_name
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/apple_pay_domain"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: ApplePayDomainList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateApplePayDomain
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            domain_name:
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
          required:
          - domain_name
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/apple_pay_domain"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/apple_pay/domains/{domain}":
    delete:
      description: ''
      operationId: DeleteApplePayDomain
      parameters:
      - in: path
        name: domain
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveApplePayDomain
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: domain
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/apple_pay_domain"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/application_fees":
    get:
      description: "<p>Returns a list of application fees you’ve previously collected.
        The application fees are returned in sorted order, with the most recent fees
        appearing first.</p>"
      operationId: AllPlatformEarnings
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: Only return application fees for the charge specified by this
          charge ID.
        in: query
        name: charge
        required: false
        type: string
      - in: query
        name: created
        required: false
        type: integer
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/platform_earning"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/application_fees/{fee}/refunds/{id}":
    get:
      description: "<p>By default, you can see the 10 most recent refunds stored directly
        on the application fee object, but you can also retrieve details about a specific
        refund stored on the application fee.</p>"
      operationId: RetrievePlatformEarningRefund
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: ID of the application fee refunded.
        in: path
        name: fee
        required: true
        type: string
      - description: ID of refund to retrieve.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/fee_refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the specified application fee refund by setting the
        values of the parameters passed. Any parameters not provided will be left
        unchanged.</p><p>This request only accepts metadata as an argument.</p>"
      operationId: UpdatePlatformEarningRefund
      parameters:
      - description: ID of the application fee refunded.
        in: path
        name: fee
        required: true
        type: string
      - description: ID of refund to retrieve.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: Set of key-value pairs that you can attach to an object.
                This can be useful for storing additional information about the object
                in a structured format. Individual keys can be unset by posting an
                empty value to them. All keys can be unset by posting an empty value
                to `metadata`.
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/fee_refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/application_fees/{id}":
    get:
      description: "<p>Retrieves the details of an application fee that your account
        has collected. The same information is returned when refunding the application
        fee.</p>"
      operationId: RetrievePlatformEarning
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the fee to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/platform_earning"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/application_fees/{id}/refund":
    post:
      description: ''
      operationId: DeprecatedCreateRefundPlatformEarning
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              type: integer
            directive:
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/platform_earning"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/application_fees/{id}/refunds":
    get:
      description: "<p>You can see a list of the refunds belonging to a specific application
        fee. Note that the 10 most recent refunds are always available by default
        on the application fee object. If you need more than those 10, you can use
        this API method and the <code>limit</code> and <code>starting_after</code>
        parameters to page through additional refunds.</p>"
      operationId: AllPlatformEarningsRefunds
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the application fee whose refunds will be retrieved.
        in: path
        name: id
        required: true
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/fee_refund"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: FeeRefundList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreatePlatformEarningRefund
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              type: integer
            directive:
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/fee_refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/balance":
    get:
      description: "<p>Retrieves the current account balance, based on the authentication
        that was used to make the request.</p>"
      operationId: BalanceRetrieve
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/balance"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/balance/history":
    get:
      description: "<p>Returns a list of transactions that have contributed to the
        Stripe account balance (e.g., charges, transfers, and so forth). The transactions
        are returned in sorted order, with the most recent transactions appearing
        first.</p>"
      operationId: AllBalanceTransactions
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: query
        name: available_on
        required: false
        type: integer
      - in: query
        name: created
        required: false
        type: integer
      - in: query
        name: currency
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: For automatic Stripe payouts only, only returns transactions
          that were payed out on the specified payout ID.
        in: query
        name: payout
        required: false
        type: string
      - description: Only returns the original transaction.
        in: query
        name: source
        required: false
        type: string
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: 'Only returns transactions of the given type. One of: `charge`,
          `refund`, `adjustment`, `application_fee`, `application_fee_refund`, `transfer`,
          `payment`, `payout`, `payout_failure`, `stripe_fee`, or `network_cost`.'
        in: query
        name: type
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/balance_transaction"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: BalanceTransactionsList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/balance/history/{id}":
    get:
      description: "<p>Retrieves the balance transaction with the given ID.</p>"
      operationId: RetrieveBalanceTransaction
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the desired balance transaction, as found on any API
          object that affects the balance (e.g., a charge or transfer).
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/balance_transaction"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/bitcoin/receivers":
    get:
      deprecated: true
      description: "<p>Returns a list of your receivers. Receivers are returned sorted
        by creation date, with the most recently created receivers appearing first.</p>"
      operationId: BitcoinAllReceivers
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: Filter for active receivers.
        in: query
        name: active
        required: false
        type: boolean
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: Filter for filled receivers.
        in: query
        name: filled
        required: false
        type: boolean
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: Filter for receivers with uncaptured funds.
        in: query
        name: uncaptured_funds
        required: false
        type: boolean
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/bitcoin_receiver"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/bitcoin/receivers/{id}":
    get:
      deprecated: true
      description: "<p>Retrieves the Bitcoin receiver with the given ID.</p>"
      operationId: BitcoinRetrieveReceiver
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/bitcoin_receiver"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/bitcoin/receivers/{receiver}/transactions":
    get:
      deprecated: true
      description: ''
      operationId: BitcoinAllTransactions
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: Only return transactions for the customer specified by this customer
          ID.
        in: query
        name: customer
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: Only return transactions for the receiver specified by this receiver
          ID.
        in: path
        name: receiver
        required: true
        type: string
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/bitcoin_transaction"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: BitcoinTransactionList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/bitcoin/transactions":
    get:
      deprecated: true
      description: ''
      operationId: BitcoinAllTransactions
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: Only return transactions for the customer specified by this customer
          ID.
        in: query
        name: customer
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: Only return transactions for the receiver specified by this receiver
          ID.
        in: query
        name: receiver
        required: false
        type: string
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/bitcoin_transaction"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: BitcoinTransactionList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges":
    get:
      description: "<p>Returns a list of charges you’ve previously created. The charges
        are returned in sorted order, with the most recent charges appearing first.</p>"
      operationId: AllCharges
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: query
        name: created
        required: false
        type: integer
      - description: Only return charges for the customer specified by this customer
          ID.
        in: query
        name: customer
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: 'A filter on the list, based on the source of the charge. The
          value can be a dictionary with the following options:'
        in: query
        name: source
        required: false
        type: string
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: Only return charges for this transfer group.
        in: query
        name: transfer_group
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/charge"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateCharge
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            alternate_statement_descriptors:
              properties:
                kana:
                  type: string
                kanji:
                  type: string
              title: alternate_statement_descriptors_params
              type: object
            amount:
              type: integer
            application:
              type: string
            application_fee:
              type: integer
            capture:
              type: boolean
            card: {}
            card_program:
              type: string
            currency:
              type: string
            customer:
              type: string
            description:
              type: string
            destination:
              properties:
                account:
                  type: string
                amount:
                  type: integer
              required:
              - account
              title: destination_specs
              type: object
            device_id:
              type: string
            exchange_rate:
              type: number
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            external_id:
              type: string
            idempotency_key:
              type: string
            invoice:
              type: string
            invoice_source:
              type: string
            ip:
              type: string
            level3:
              properties:
                customer_reference:
                  type: string
                line_items:
                  items:
                    properties:
                      discount_amount:
                        type: integer
                      product_code:
                        type: string
                      product_description:
                        type: string
                      quantity:
                        type: integer
                      tax_amount:
                        type: integer
                      unit_cost:
                        type: integer
                    required:
                    - product_code
                    - product_description
                    title: line_item
                    type: object
                  type: array
                merchant_reference:
                  type: string
                shipping_address_zip:
                  type: string
                shipping_amount:
                  type: integer
                shipping_from_zip:
                  type: string
              required:
              - line_items
              - merchant_reference
              title: level3
              type: object
            metadata:
              type: object
            on_behalf_of:
              type: string
            order:
              type: string
            payment_method:
              type: string
            payment_user_agent:
              type: string
            receipt_email:
              type: string
            recurring:
              type: boolean
            referrer:
              type: string
            shipping:
              properties:
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  required:
                  - line1
                  title: address
                  type: object
                carrier:
                  type: string
                name:
                  type: string
                phone:
                  type: string
                tracking_number:
                  type: string
              required:
              - address
              - name
              title: shipping
              type: object
            source: {}
            statement_address:
              properties:
                city:
                  type: string
                line1:
                  type: string
                line2:
                  type: string
                postal_code:
                  type: string
                state:
                  type: string
              required:
              - city
              - line1
              - postal_code
              - state
              title: charge_address
              type: object
            statement_descriptor:
              type: string
            transfer_group:
              type: string
            trust:
              properties:
                safety:
                  enum:
                  - fraudulent
                  - safe
                  type: string
              title: user_specified_trust
              type: object
            uncaptured:
              type: boolean
            user_agent:
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}":
    get:
      description: "<p>Retrieves the details of a charge that has previously been
        created. Supply the unique charge ID that was returned from your previous
        request, and Stripe will return the corresponding charge information. The
        same information is returned when creating or refunding the charge.</p>"
      operationId: RetrieveCharge
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the charge to be retrieved.
        in: path
        name: charge
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the specified charge by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.</p>"
      operationId: UpdateCharge
      parameters:
      - in: path
        name: charge
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            customer:
              description: The ID of an existing customer that will be associated
                with this request. This field may only be updated if there is no existing
                associated customer with this charge.
              type: string
            description:
              description: An arbitrary string which you can attach to a charge object.
                It is displayed when in the web interface alongside the charge. Note
                that if you use Stripe to send automatic email receipts to your customers,
                your receipt emails will include the `description` of the charge(s)
                that they are describing.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            fraud_details:
              description: A set of key/value pairs you can attach to a charge giving
                information about its riskiness. If you believe a charge is fraudulent,
                include a `user_report` key with a value of `fraudulent`. If you believe
                a charge is safe, include a `user_report` key with a value of `safe`.
                Note that you must refund a charge before setting the `user_report`
                to `fraudulent`. Stripe will use the information you send to improve
                our fraud detection algorithms.
              type: object
            metadata:
              description: Set of key-value pairs that you can attach to an object.
                This can be useful for storing additional information about the object
                in a structured format. Individual keys can be unset by posting an
                empty value to them. All keys can be unset by posting an empty value
                to `metadata`.
              type: object
            receipt_email:
              description: This is the email address that the receipt for this charge
                will be sent to. If this field is updated, then a new email receipt
                will be sent to the updated address.
              type: string
            shipping:
              description: Shipping information for the charge. Helps prevent fraud
                on charges for physical goods.
              properties:
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  required:
                  - line1
                  title: address
                  type: object
                carrier:
                  type: string
                name:
                  type: string
                phone:
                  type: string
                tracking_number:
                  type: string
              required:
              - address
              - name
              title: shipping
              type: object
            transfer_group:
              description: A string that identifies this transaction as part of a
                group. `transfer_group` may only be provided if it has not been set.
                See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions)
                for details.
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/capture":
    post:
      description: <p>Capture the payment of an existing, uncaptured, charge. This
        is the second half of the two-step payment flow, where first you <a href="#create_charge">created
        a charge</a> with the capture option set to false.</p><p>Uncaptured payments
        expire exactly seven days after they are created. If they are not captured
        by that point in time, they will be marked as refunded and will no longer
        be capturable.</p>
      operationId: ChargeCapture
      parameters:
      - in: path
        name: charge
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              description: The amount to capture, which must be less than or equal
                to the original amount. Any additional amount will be automatically
                refunded.
              type: integer
            application_fee:
              description: An application fee to add on to this charge. Can only be
                used with Stripe Connect.
              type: integer
            destination:
              description: An optional dictionary containing a new destination amount
                to use. Can only be used with destination charges created with Stripe
                Connect.
              properties:
                amount:
                  type: integer
              title: destination_specs
              type: object
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            receipt_email:
              description: The email address to send this charge's receipt to. This
                will override the previously-specified email address for this charge,
                if one was set. Receipts will not be sent in test mode.
              type: string
            statement_descriptor:
              description: An arbitrary string to be displayed on your customer's
                credit card statement. This may be up to *22 characters*. As an example,
                if your website is `RunClub` and the item you're charging for is a
                race ticket, you may want to specify a `statement_descriptor` of `RunClub
                5K race ticket`. The statement description must contain at least one
                letter, may not include `<>"'` characters, and will appear on your
                customer's statement in capital letters. Non-ASCII characters are
                automatically stripped. Updating this value will overwrite the previous
                statement descriptor of this charge. While most banks display this
                information consistently, some may display it incorrectly or not at
                all.
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/dispute":
    get:
      description: ''
      operationId: RetrieveChargeDispute
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: charge
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/dispute"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateChargeDispute
      parameters:
      - in: path
        name: charge
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            evidence:
              description: Evidence to upload, to respond to a dispute. Updating any
                field in the hash will submit all fields in the hash for review. The
                combined character count of all fields is limited to 150,000.
              properties:
                access_activity_log:
                  type: string
                billing_address:
                  type: string
                cancellation_policy:
                  type: string
                cancellation_policy_disclosure:
                  type: string
                cancellation_rebuttal:
                  type: string
                customer_communication:
                  type: string
                customer_email_address:
                  type: string
                customer_name:
                  type: string
                customer_purchase_ip:
                  type: string
                customer_signature:
                  type: string
                duplicate_charge_documentation:
                  type: string
                duplicate_charge_explanation:
                  type: string
                duplicate_charge_id:
                  type: string
                product_description:
                  type: string
                receipt:
                  type: string
                refund_policy:
                  type: string
                refund_policy_disclosure:
                  type: string
                refund_refusal_explanation:
                  type: string
                service_date:
                  type: string
                service_documentation:
                  type: string
                shipping_address:
                  type: string
                shipping_carrier:
                  type: string
                shipping_date:
                  type: string
                shipping_documentation:
                  type: string
                shipping_tracking_number:
                  type: string
                uncategorized_file:
                  type: string
                uncategorized_text:
                  type: string
              title: dispute_evidence_params
              type: object
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: A set of key-value pairs that you can attach to a dispute
                object. This can be useful for storing additional information about
                the dispute in a structured format.
              type: object
            submit:
              description: Whether to immediately submit evidence to the bank. If
                `false`, evidence is staged on the dispute. Staged evidence is visible
                in the API and Dashboard, and can be submitted to the bank by making
                another request with this attribute set to `true` (the default).
              type: boolean
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/dispute"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/dispute/close":
    post:
      description: ''
      operationId: CloseChargeDispute
      parameters:
      - in: path
        name: charge
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/dispute"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/refund":
    post:
      description: ''
      operationId: ChargeRefund
      parameters:
      - in: path
        name: charge
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              type: integer
            description:
              type: string
            directive:
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
            reason:
              enum:
              - duplicate
              - fraudulent
              - requested_by_customer
              type: string
            refund_application_fee:
              type: boolean
            reverse_transfer:
              type: boolean
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/refunds":
    get:
      description: "<p>You can see a list of the refunds belonging to a specific charge.
        Note that the 10 most recent refunds are always available by default on the
        charge object. If you need more than those 10, you can use this API method
        and the <code>limit</code> and <code>starting_after</code> parameters to page
        through additional refunds.</p>"
      operationId: AllChargeRefunds
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the charge whose refunds will be retrieved.
        in: path
        name: charge
        required: true
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/refund"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: RefundList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UnifiedPaymentsCreateRefund
      parameters:
      - in: path
        name: charge
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              type: integer
            description:
              type: string
            directive:
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
            reason:
              enum:
              - duplicate
              - fraudulent
              - requested_by_customer
              type: string
            refund_application_fee:
              type: boolean
            reverse_transfer:
              type: boolean
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/refunds/{refund}":
    get:
      description: ''
      operationId: RetrieveChargeRefund
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: charge
        required: true
        type: string
      - in: path
        name: refund
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateChargeRefund
      parameters:
      - in: path
        name: charge
        required: true
        type: string
      - in: path
        name: refund
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/country_specs":
    get:
      description: "<p>Lists all Country Spec objects available in the API.</p>"
      operationId: AllCountrySpecs
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/country_spec"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/country_specs/{country}":
    get:
      description: "<p>Returns a Country Spec for a given Country code.</p>"
      operationId: RetrieveCountrySpec
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: An ISO 3166-1 alpha-2 country code. Available country codes can
          be listed with the [List Country Specs](/docs/api#list_country_specs) endpoint.
        in: path
        name: country
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/country_spec"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/coupons":
    get:
      description: "<p>Returns a list of your coupons.</p>"
      operationId: AllCoupons
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: A filter on the list, based on the object `created` field. The
          value can be a string with an integer Unix timestamp, or it can be a dictionary
          with a number of different query options.
        in: query
        name: created
        required: false
        type: integer
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/coupon"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>You can create coupons easily via the <a href="https://dashboard.stripe.com/coupons">coupon
        management</a> page of the Stripe dashboard. Coupon creation is also accessible
        via the API if you need to create coupons on the fly.</p><p>A coupon has either
        a <code>percent_off</code> or an <code>amount_off</code> and <code>currency</code>.
        If you set an <code>amount_off</code>, that amount will be subtracted from
        any invoice’s subtotal. For example, an invoice with a subtotal of <currency>100</currency>
        will have a final total of <currency>0</currency> if a coupon with an <code>amount_off</code>
        of <amount>200</amount> is applied to it and an invoice with a subtotal of
        <currency>300</currency> will have a final total of <currency>100</currency>
        if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied
        to it.</p>
      operationId: CreateCoupon
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            amount_off:
              description: A positive integer representing the amount to subtract
                from an invoice total (required if `percent_off` is not passed).
              type: integer
            currency:
              description: Three-letter [ISO code for the currency](https://stripe.com/docs/currencies)
                of the `amount_off` parameter (required if `amount_off` is passed).
              type: string
            duration:
              description: Specifies how long the discount will be in effect. Can
                be `forever`, `once`, or `repeating`.
              enum:
              - forever
              - once
              - repeating
              type: string
            duration_in_months:
              description: Required only if `duration` is `repeating`, in which case
                it must be a positive integer that specifies the number of months
                the discount will be in effect.
              type: integer
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            id:
              description: Unique string of your choice that will be used to identify
                this coupon when applying it to a customer. This is often a specific
                code you'll give to your customer to use when signing up (e.g., `FALL25OFF`).
                If you don't want to specify a particular code, you can leave the
                ID blank and we'll generate a random code for you.
              type: string
            max_redemptions:
              description: A positive integer specifying the number of times the coupon
                can be redeemed before it's no longer valid. For example, you might
                have a 50% off coupon that the first 20 readers of your blog can use.
              type: integer
            metadata:
              description: A set of key/value pairs that you can attach to a coupon
                object. It can be useful for storing additional information about
                the coupon in a structured format.
              type: object
            name:
              description: Name of the coupon displayed to customers on for instance
                invoices or receipts. By default the `id` is shown if `name` is not
                set.
              type: string
            percent_off:
              description: A positive integer between 1 and 100 that represents the
                discount the coupon will apply (required if `amount_off` is not passed).
              type: integer
            redeem_by:
              description: Unix timestamp specifying the last time at which the coupon
                can be redeemed. After the redeem_by date, the coupon can no longer
                be applied to new customers.
              type: integer
          required:
          - duration
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/coupon"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/coupons/{coupon}":
    delete:
      description: <p>You can delete coupons via the <a href="https://dashboard.stripe.com/coupons">coupon
        management</a> page of the Stripe dashboard. However, deleting a coupon does
        not affect any customers who have already applied the coupon; it means that
        new customers can’t redeem the coupon. You can also delete coupons via the
        API.</p>
      operationId: DeleteCoupon
      parameters:
      - description: The identifier of the coupon to be deleted.
        in: path
        name: coupon
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the coupon with the given ID.</p>"
      operationId: RetrieveCoupon
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the desired coupon.
        in: path
        name: coupon
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/coupon"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the metadata of a coupon. Other coupon details (currency,
        duration, amount_off) are, by design, not editable.</p>"
      operationId: UpdateCoupon
      parameters:
      - description: The identifier of the coupon to be updated.
        in: path
        name: coupon
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: A set of key/value pairs that you can attach to a coupon
                object. It can be useful for storing additional information about
                the coupon in a structured format.
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/coupon"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers":
    get:
      description: "<p>Returns a list of your customers. The customers are returned
        sorted by creation date, with the most recent customers appearing first.</p>"
      operationId: AllCustomers
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: query
        name: created
        required: false
        type: integer
      - description: A filter on the list based on the customer's `email` field. The
          value must be a string.
        in: query
        name: email
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/customer"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Creates a new customer object.</p>"
      operationId: CustomerCreate
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            account_balance:
              description: An integer amount in %s that represents the account balance
                for your customer. Account balances only affect invoices. A negative
                amount represents a credit that decreases the amount due on an invoice;
                a positive amount increases the amount due on an invoice.
              type: integer
            bank_account:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's bank account details.
            business_vat_id:
              description: The customer's VAT identification number. If you are using
                Relay, this field gets passed to tax provider you are using for your
                orders.
              type: string
            card:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's credit card details.
            coupon:
              description: If you provide a coupon code, the customer will have a
                discount applied on all recurring charges. Charges you create through
                the API will not have the discount.
              type: string
            customer:
              type: string
            default_source:
              type: string
            description:
              description: An arbitrary string that you can attach to a customer object.
                It is displayed alongside the customer in the dashboard.
              type: string
            email:
              description: Customer's email address. It's displayed alongside the
                customer in your dashboard and can be useful for searching and tracking.
                This may be up to *512 characters*.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            id:
              description: A custom ID to use for the customer
              type: string
            invoice_prefix:
              description: The prefix for the customer used to generate unique invoice
                numbers.
              type: string
            metadata:
              description: A set of key/value pairs that you can attach to a customer
                object. It can be useful for storing additional information about
                the customer in a structured format.
              type: object
            shipping:
              properties:
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  required:
                  - line1
                  title: address
                  type: object
                name:
                  type: string
                phone:
                  type: string
              required:
              - address
              - name
              title: customer_shipping
              type: object
            source: {}
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}":
    delete:
      description: "<p>Permanently deletes a customer. It cannot be undone. Also immediately
        cancels any active subscriptions on the customer.</p>"
      operationId: DeleteCustomer
      parameters:
      - description: The identifier of the customer to be deleted.
        in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the details of an existing customer. You need only
        supply the unique customer identifier that was returned upon customer creation.</p>"
      operationId: RetrieveCustomer
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the customer to be retrieved.
        in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CustomerUpdate
      parameters:
      - description: The identifier of the customer to subscribe.
        in: path
        name: customer
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            account_balance:
              description: An integer amount in %s that represents the account balance
                for your customer. Account balances only affect invoices. A negative
                amount represents a credit that decreases the amount due on an invoice;
                a positive amount increases the amount due on an invoice.
              type: integer
            bank_account:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's bank account details.
            business_vat_id:
              description: The customer's VAT identification number. If you are using
                Relay, this field gets passed to tax provider you are using for your
                orders.
              type: string
            card:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's credit card details.
            coupon:
              description: If you provide a coupon code, the customer will have a
                discount applied on all recurring charges. Charges you create through
                the API will not have the discount.
              type: string
            default_alipay_account:
              description: ID of Alipay account to make the customer's new default
                for invoice payments.
              type: string
            default_bank_account:
              description: ID of bank account to make the customer's new default for
                invoice payments.
              type: string
            default_card:
              description: ID of card to make the customer's new default for invoice
                payments.
              type: string
            default_source:
              type: string
            description:
              description: An arbitrary string that you can attach to a customer object.
                It is displayed alongside the customer in the dashboard.
              type: string
            email:
              description: Customer's email address. It's displayed alongside the
                customer in your dashboard and can be useful for searching and tracking.
                This may be up to *512 characters*.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            invoice_prefix:
              description: The prefix for the customer used to generate unique invoice
                numbers.
              type: string
            metadata:
              description: A set of key/value pairs that you can attach to a customer
                object. It can be useful for storing additional information about
                the customer in a structured format.
              type: object
            shipping:
              properties:
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  required:
                  - line1
                  title: address
                  type: object
                name:
                  type: string
                phone:
                  type: string
              required:
              - address
              - name
              title: customer_shipping
              type: object
            source: {}
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/bank_accounts":
    get:
      deprecated: true
      description: "<p>You can see a list of the bank accounts belonging to a Customer.
        Note that the 10 most recent sources are always available by default on the
        Customer. If you need more than those 10, you can use this API method and
        the <code>limit</code> and <code>starting_after</code> parameters to page
        through additional bank accounts.</p>"
      operationId: AllCustomerBankAccounts
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the customer whose bank accounts will be retrieved.
        in: path
        name: customer
        required: true
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/bank_account"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: BankAccountList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateCustomerSource
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            alipay_account:
              description: A token returned by [Stripe.js](https://stripe.com/docs/stripe.js)
                representing the user’s Alipay account details.
            bank_account:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's bank account details.
            card:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's credit card details.
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: A set of key/value pairs that you can attach to a card
                object. It can be useful for storing additional information about
                the card in a structured format.
              type: object
            source:
              description: This string to be replaced by DocSpecGenerator.
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer_source_create"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/bank_accounts/{id}":
    delete:
      description: ''
      operationId: DeleteCustomerSource
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      - description: The ID of the source to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      deprecated: true
      description: "<p>By default, you can see the 10 most recent sources stored on
        a Customer directly on the object, but you can also retrieve details about
        a specific bank account stored on the Stripe account.</p>"
      operationId: RetrieveCustomerBankAccount
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: customer
        required: true
        type: string
      - description: ID of bank account to retrieve.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/bank_account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateCustomerSource
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      - description: The ID of the card to be updated.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            account_holder_name:
              description: The name of the person or business that owns the bank account.
              type: string
            account_holder_type:
              description: The type of entity that holds the account. This can be
                either `individual` or `company`.
              type: string
            address_city:
              description: City/District/Suburb/Town/Village.
              type: string
            address_country:
              description: Billing address country, if provided when creating card.
              type: string
            address_line1:
              description: Address line 1 (Street address/PO Box/Company name).
              type: string
            address_line2:
              description: Address line 2 (Apartment/Suite/Unit/Building).
              type: string
            address_state:
              description: State/County/Province/Region.
              type: string
            address_zip:
              description: ZIP or postal code
              type: string
            exp_month:
              description: Two digit number representing the card’s expiration month.
              type: string
            exp_year:
              description: Four digit number representing the card’s expiration year.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
            name:
              description: Cardholder name.
              type: string
            owner:
              properties:
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  title: source_address
                  type: object
                email:
                  type: string
                name:
                  type: string
                phone:
                  type: string
              title: owner
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/bank_account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/bank_accounts/{id}/verify":
    post:
      description: ''
      operationId: VerifyCustomerSource
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      - description: The ID of the source to be verified.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amounts:
              description: Two positive integers, in *cents*, equal to the values
                of the microdeposits sent to the bank account.
              items:
                type: integer
              type: array
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            verification_method:
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/bank_account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/cards":
    get:
      deprecated: true
      description: ''
      operationId: AllCustomerCards
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the customer whose cards will be retrieved.
        in: path
        name: customer
        required: true
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/card"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: CardList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateCustomerSource
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            alipay_account:
              description: A token returned by [Stripe.js](https://stripe.com/docs/stripe.js)
                representing the user’s Alipay account details.
            bank_account:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's bank account details.
            card:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's credit card details.
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: A set of key/value pairs that you can attach to a card
                object. It can be useful for storing additional information about
                the card in a structured format.
              type: object
            source:
              description: This string to be replaced by DocSpecGenerator.
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer_source_create"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/cards/{id}":
    delete:
      description: ''
      operationId: DeleteCustomerSource
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      - description: The ID of the source to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      deprecated: true
      description: ''
      operationId: RetrieveCustomerCard
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: customer
        required: true
        type: string
      - description: The ID of the card to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/card"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateCustomerSource
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      - description: The ID of the card to be updated.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            account_holder_name:
              description: The name of the person or business that owns the bank account.
              type: string
            account_holder_type:
              description: The type of entity that holds the account. This can be
                either `individual` or `company`.
              type: string
            address_city:
              description: City/District/Suburb/Town/Village.
              type: string
            address_country:
              description: Billing address country, if provided when creating card.
              type: string
            address_line1:
              description: Address line 1 (Street address/PO Box/Company name).
              type: string
            address_line2:
              description: Address line 2 (Apartment/Suite/Unit/Building).
              type: string
            address_state:
              description: State/County/Province/Region.
              type: string
            address_zip:
              description: ZIP or postal code
              type: string
            exp_month:
              description: Two digit number representing the card’s expiration month.
              type: string
            exp_year:
              description: Four digit number representing the card’s expiration year.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
            name:
              description: Cardholder name.
              type: string
            owner:
              properties:
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  title: source_address
                  type: object
                email:
                  type: string
                name:
                  type: string
                phone:
                  type: string
              title: owner
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/bank_account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/discount":
    delete:
      description: "<p>Removes the currently applied discount on a customer.</p>"
      operationId: DeleteCustomerDiscount
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_discount"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveCustomerDiscount
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/discount"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/sources":
    get:
      description: ''
      operationId: AllCustomerSources
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the customer whose sources will be retrieved.
        in: path
        name: customer
        required: true
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - in: query
        name: type
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                description: The list contains all payment sources that have been
                  attached to the customer.
                items:
                  "$ref": "#/definitions/account_debit_account"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: SourceList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateCustomerSource
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            alipay_account:
              description: A token returned by [Stripe.js](https://stripe.com/docs/stripe.js)
                representing the user’s Alipay account details.
            bank_account:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's bank account details.
            card:
              description: Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/stripe.js),
                or a dictionary containing a user's credit card details.
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: A set of key/value pairs that you can attach to a card
                object. It can be useful for storing additional information about
                the card in a structured format.
              type: object
            source:
              description: This string to be replaced by DocSpecGenerator.
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer_source_create"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/sources/{id}":
    delete:
      description: ''
      operationId: DeleteCustomerSource
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      - description: The ID of the source to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveCustomerSource
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: customer
        required: true
        type: string
      - description: The ID of the source to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer_source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateCustomerSource
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      - description: The ID of the card to be updated.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            account_holder_name:
              description: The name of the person or business that owns the bank account.
              type: string
            account_holder_type:
              description: The type of entity that holds the account. This can be
                either `individual` or `company`.
              type: string
            address_city:
              description: City/District/Suburb/Town/Village.
              type: string
            address_country:
              description: Billing address country, if provided when creating card.
              type: string
            address_line1:
              description: Address line 1 (Street address/PO Box/Company name).
              type: string
            address_line2:
              description: Address line 2 (Apartment/Suite/Unit/Building).
              type: string
            address_state:
              description: State/County/Province/Region.
              type: string
            address_zip:
              description: ZIP or postal code
              type: string
            exp_month:
              description: Two digit number representing the card’s expiration month.
              type: string
            exp_year:
              description: Four digit number representing the card’s expiration year.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
            name:
              description: Cardholder name.
              type: string
            owner:
              properties:
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  title: source_address
                  type: object
                email:
                  type: string
                name:
                  type: string
                phone:
                  type: string
              title: owner
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/bank_account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/sources/{id}/verify":
    post:
      description: ''
      operationId: VerifyCustomerSource
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      - description: The ID of the source to be verified.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amounts:
              description: Two positive integers, in *cents*, equal to the values
                of the microdeposits sent to the bank account.
              items:
                type: integer
              type: array
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            verification_method:
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/bank_account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/subscriptions":
    get:
      description: "<p>You can see a list of the customer’s active subscriptions.
        Note that the 10 most recent active subscriptions are always available by
        default on the customer object. If you need more than those 10, you can use
        the limit and starting_after parameters to page through additional subscriptions.</p>"
      operationId: AllCustomerSubscriptions
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the customer whose subscriptions will be retrieved.
        in: path
        name: customer
        required: true
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/subscription"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: SubscriptionList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Creates a new subscription on an existing customer.</p>"
      operationId: CreateCustomerSubscription
      parameters:
      - description: The identifier of the customer to subscribe.
        in: path
        name: customer
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            application_fee_percent:
              description: A non-negative decimal between 0 and 100, with at most
                two decimal places. This represents the percentage of the subscription
                invoice subtotal that will be transferred to the application owner's
                Stripe account. The request must be made with an OAuth key in order
                to set an application fee percentage. For more information, see the
                application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
              type: number
            billing:
              description: Either `charge_automatically`, or `send_invoice`. When
                charging automatically, Stripe will attempt to pay this subscription
                at the end of the cycle using the default source attached to the customer.
                When sending an invoice, Stripe will email your customer an invoice
                with payment instructions. Defaults to `charge_automatically`.
              enum:
              - charge_automatically
              - send_invoice
              type: string
            billing_cycle_anchor:
              description: A future timestamp to anchor the subscription's [billing
                cycle](/docs/subscriptions/billing-cycle). This is used to determine
                the date of the first full invoice, and, for plans with `month` or
                `year` intervals, the day of the month for subsequent invoices.
              type: string
            coupon:
              description: The code of the coupon to apply to this subscription. A
                coupon applied to a subscription will only affect invoices created
                for that particular subscription.
              type: string
            days_until_due:
              description: Number of days a customer has to pay invoices generated
                by this subscription. Valid only for subscriptions where `billing`
                is set to `send_invoice`.
              type: integer
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            items:
              description: List of subscription items, each with an attached plan.
              items:
                properties:
                  plan:
                    type: string
                  quantity:
                    type: integer
                required:
                - plan
                title: subscription_item_create_params
                type: object
              type: array
            metadata:
              description: A set of key-value pairs that you can attach to a `Subscription`
                object. It can be useful for storing additional information about
                the subscription in a structured format.
              type: object
            prorate:
              description: Boolean (defaults to `true`) telling us whether to [credit
                for unused time](/docs/subscriptions/billing-cycle#prorations) when
                the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`,
                or starting a trial). If `false`, the anchor period will be free (similar
                to a trial) and no proration adjustments will be created.
              type: boolean
            source:
              description: The source can either be a [Token](/docs/api#tokens) or
                a [Source](/docs/api#sources), as returned by [Elements](https://stripe.com/docs/elements),
                or a dictionary containing a user's credit card details (with the
                options shown below). You must provide a source if the customer does
                not already have a valid source attached, and you are subscribing
                the customer to be charged automatically for a plan that is not free.
                Passing `source` will create a new source object, make it the customer
                default source, and delete the old customer default if one exists.
                If you want to add an additional source, instead use the [card creation
                API](https://stripe.com/docs/api#create_card) to add the card and
                then the [customer update API](https://stripe.com/docs/api#update_customer)
                to set it as the default. Whenever you attach a card to a customer,
                Stripe will automatically validate the card.
            tax_percent:
              description: A non-negative decimal (with at most four decimal places)
                between 0 and 100. This represents the percentage of the subscription
                invoice subtotal that will be calculated and added as tax to the final
                amount in each billing period. For example, a plan which charges $10/month
                with a `tax_percent` of `20.0` will charge $12 per invoice. To unset
                a previously-set value, pass an empty string.
              type: number
            trial_end:
              description: Unix timestamp representing the end of the trial period
                the customer will get before being charged for the first time. This
                will always overwrite any trials that might apply via a subscribed
                plan. If set, trial_end will override the default trial period of
                the plan the customer is being subscribed to. The special value `now`
                can be provided to end the customer's trial immediately.
              type: string
            trial_from_plan:
              description: Indicates if a plan's `trial_period_days` should be applied
                to the subscription. Setting `trial_end` per subscription is preferred,
                and this defaults to `false`. Setting this flag to `true` together
                with `trial_end` is not allowed.
              type: boolean
            trial_period_days:
              description: Integer representing the number of trial period days before
                the customer is charged for the first time. This will always overwrite
                any trials that might apply via a subscribed plan.
              type: integer
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}":
    delete:
      description: <p>Cancels a customer’s subscription. If you set the <code>at_period_end</code>
        parameter to <code>true</code>, the subscription will remain active until
        the end of the period, at which point it will be canceled and not renewed.
        Otherwise, with the default <code>false</code> value, the subscription is
        terminated immediately. In either case, the customer will not be charged again
        for the subscription.</p><p>Note, however, that any pending invoice items
        that you’ve created will still be charged for at the end of the period, unless
        manually <a href="#delete_invoiceitem">deleted</a>. If you’ve set the subscription
        to cancel at the end of the period, any pending prorations will also be left
        in place and collected at the end of the period. But if the subscription is
        set to cancel immediately, pending prorations will be removed.</p><p>By default,
        upon subscription cancellation, Stripe will close all unpaid invoices for
        the customer. This is designed to prevent unexpected payment attempts after
        the customer has canceled a subscription. However, you can reopen the invoices
        manually after subscription cancellation to have us proceed with payment collection.
        Or, you could even re-attempt payment yourself on all unpaid invoices before
        allowing the customer to cancel the subscription at all.</p>
      operationId: DeleteCustomerSubscription
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      - in: path
        name: subscription_exposed_id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            at_period_end:
              description: A flag that, if set to `true`, will delay the subscription's
                cancellation until the end of the current period.
              type: boolean
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the subscription with the given ID on the given customer.</p>"
      operationId: RetrieveCustomerSubscription
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: customer
        required: true
        type: string
      - in: path
        name: subscription_exposed_id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>Updates an existing subscription on a customer to match the
        specified parameters. When changing plans or quantities, we will optionally
        prorate the price we charge next month to make up for any price changes. To
        preview how the proration will be calculated, use the <a href="#upcoming_invoice">upcoming
        invoice</a> endpoint.</p>
      operationId: UpdateCustomerSubscription
      parameters:
      - description: The identifier of the customer to subscribe.
        in: path
        name: customer
        required: true
        type: string
      - description: The identifier of the subscription to update.
        in: path
        name: subscription_exposed_id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            application_fee_percent:
              description: A non-negative decimal between 0 and 100, with at most
                two decimal places. This represents the percentage of the subscription
                invoice subtotal that will be transferred to the application owner's
                Stripe account. The request must be made with an OAuth key in order
                to set an application fee percentage. For more information, see the
                application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
              type: number
            billing:
              description: Either `charge_automatically`, or `send_invoice`. When
                charging automatically, Stripe will attempt to pay this subscription
                at the end of the cycle using the default source attached to the customer.
                When sending an invoice, Stripe will email your customer an invoice
                with payment instructions. Defaults to `charge_automatically`.
              enum:
              - charge_automatically
              - send_invoice
              type: string
            billing_cycle_anchor:
              description: A future timestamp to anchor the subscription's [billing
                cycle](/docs/subscriptions/billing-cycle). This is used to determine
                the date of the first full invoice, and, for plans with `month` or
                `year` intervals, the day of the month for subsequent invoices.
              type: string
            cancel_at_period_end:
              description: Boolean indicating whether this subscription should cancel
                at the end of the current period.
              type: boolean
            coupon:
              description: The code of the coupon to apply to this subscription. A
                coupon applied to a subscription will only affect invoices created
                for that particular subscription.
              type: string
            days_until_due:
              description: Number of days a customer has to pay invoices generated
                by this subscription. Valid only for subscriptions where `billing`
                is set to `send_invoice`.
              type: integer
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            items:
              description: List of subscription items, each with an attached plan.
              items:
                properties:
                  clear_usage:
                    type: boolean
                  deleted:
                    type: boolean
                  id:
                    type: string
                  metadata:
                    type: object
                  plan:
                    type: string
                  quantity:
                    type: integer
                title: subscription_item_update_params
                type: object
              type: array
            metadata:
              description: A set of key-value pairs that you can attach to a subscription
                object. This can be useful for storing additional information about
                the subscription in a structured format.
              type: object
            prorate:
              description: Boolean (defaults to `true`) telling us whether to [credit
                for unused time](/docs/subscriptions/billing-cycle#prorations) when
                the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`,
                or starting a trial). If `false`, the anchor period will be free (similar
                to a trial) and no proration adjustments will be created.
              type: boolean
            proration_date:
              description: If set, the proration will be calculated as though the
                subscription was updated at the given time. This can be used to apply
                exactly the same proration that was previewed with [upcoming invoice](#retrieve_customer_invoice)
                endpoint. It can also be used to implement custom proration logic,
                such as prorating by day instead of by second, by providing the time
                that you wish to use for proration calculations.
              type: integer
            source:
              description: The source can either be a [Token](/docs/api#tokens) or
                a [Source](/docs/api#sources), as returned by [Elements](https://stripe.com/docs/elements),
                or a dictionary containing a user's credit card details (with the
                options shown below). You must provide a source if the customer does
                not already have a valid source attached, and you are subscribing
                the customer to be charged automatically for a plan that is not free.
                Passing `source` will create a new source object, make it the customer
                default source, and delete the old customer default if one exists.
                If you want to add an additional source, instead use the [card creation
                API](https://stripe.com/docs/api#create_card) to add the card and
                then the [customer update API](https://stripe.com/docs/api#update_customer)
                to set it as the default. Whenever you attach a card to a customer,
                Stripe will automatically validate the card.
            tax_percent:
              description: A non-negative decimal (with at most four decimal places)
                between 0 and 100. This represents the percentage of the subscription
                invoice subtotal that will be calculated and added as tax to the final
                amount in each billing period. For example, a plan which charges $10/month
                with a `tax_percent` of `20.0` will charge $12 per invoice. To unset
                a previously-set value, pass an empty string.
              type: number
            trial_end:
              description: Unix timestamp representing the end of the trial period
                the customer will get before being charged for the first time. This
                will always overwrite any trials that might apply via a subscribed
                plan. If set, trial_end will override the default trial period of
                the plan the customer is being subscribed to. The special value `now`
                can be provided to end the customer's trial immediately.
              type: string
            trial_from_plan:
              description: Indicates if a plan's `trial_period_days` should be applied
                to the subscription. Setting `trial_end` per subscription is preferred,
                and this defaults to `false`. Setting this flag to `true` together
                with `trial_end` is not allowed.
              type: boolean
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}/discount":
    delete:
      description: "<p>Removes the currently applied discount on a customer.</p>"
      operationId: DeleteCustomerDiscount
      parameters:
      - in: path
        name: customer
        required: true
        type: string
      - in: path
        name: subscription_exposed_id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_discount"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveCustomerDiscount
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: customer
        required: true
        type: string
      - in: path
        name: subscription_exposed_id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/discount"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/disputes":
    get:
      description: "<p>Returns a list of your disputes.</p>"
      operationId: AllDisputes
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: query
        name: created
        required: false
        type: integer
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/dispute"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/disputes/{dispute}":
    get:
      description: "<p>Retrieves the dispute with the given ID.</p>"
      operationId: RetrieveDispute
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: ID of dispute to retrieve.
        in: path
        name: dispute
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/dispute"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>When you get a dispute, contacting your customer is always the
        best first step. If that doesn’t work, you can submit evidence to help us
        resolve the dispute in your favor. You can do this in your <a href="https://dashboard.stripe.com/disputes">dashboard</a>,
        but if you prefer, you can use the API to submit evidence programmatically.</p><p>Depending
        on your dispute type, different evidence fields will give you a better chance
        of winning your dispute. To figure out which evidence fields to provide, see
        our <a href="/docs/disputes/categories">guide to dispute types</a>.</p>
      operationId: UpdateDispute
      parameters:
      - description: ID of the dispute to update.
        in: path
        name: dispute
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            evidence:
              description: Evidence to upload, to respond to a dispute. Updating any
                field in the hash will submit all fields in the hash for review. The
                combined character count of all fields is limited to 150,000.
              properties:
                access_activity_log:
                  type: string
                billing_address:
                  type: string
                cancellation_policy:
                  type: string
                cancellation_policy_disclosure:
                  type: string
                cancellation_rebuttal:
                  type: string
                customer_communication:
                  type: string
                customer_email_address:
                  type: string
                customer_name:
                  type: string
                customer_purchase_ip:
                  type: string
                customer_signature:
                  type: string
                duplicate_charge_documentation:
                  type: string
                duplicate_charge_explanation:
                  type: string
                duplicate_charge_id:
                  type: string
                product_description:
                  type: string
                receipt:
                  type: string
                refund_policy:
                  type: string
                refund_policy_disclosure:
                  type: string
                refund_refusal_explanation:
                  type: string
                service_date:
                  type: string
                service_documentation:
                  type: string
                shipping_address:
                  type: string
                shipping_carrier:
                  type: string
                shipping_date:
                  type: string
                shipping_documentation:
                  type: string
                shipping_tracking_number:
                  type: string
                uncategorized_file:
                  type: string
                uncategorized_text:
                  type: string
              title: dispute_evidence_params
              type: object
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: A set of key-value pairs that you can attach to a dispute
                object. This can be useful for storing additional information about
                the dispute in a structured format.
              type: object
            submit:
              description: Whether to immediately submit evidence to the bank. If
                `false`, evidence is staged on the dispute. Staged evidence is visible
                in the API and Dashboard, and can be submitted to the bank by making
                another request with this attribute set to `true` (the default).
              type: boolean
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/dispute"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/disputes/{dispute}/close":
    post:
      description: "<p>Closing the dispute for a charge indicates that you do not
        have any evidence to submit and are essentially dismissing the dispute, acknowledging
        it as lost.</p><p>The status of the dispute will change from <code>needs_response</code>
        to <code>lost</code>. <em>Closing a dispute is irreversible</em>.</p>"
      operationId: CloseDispute
      parameters:
      - description: ID of the dispute to close.
        in: path
        name: dispute
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/dispute"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/ephemeral_keys":
    post:
      description: "<p>Creates a short-lived API key for a given resource.</p>"
      operationId: CreateEphemeralKey
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            customer:
              description: The ID of the Customer you'd like to modify using the resulting
                ephemeral key.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
          required:
          - customer
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/ephemeral_key_with_secret"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/ephemeral_keys/{key}":
    delete:
      description: "<p>Invalidates a short-lived API key for a given resource.</p>"
      operationId: DeleteEphemeralKey
      parameters:
      - description: The ID of the key you'd like to invalidate.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/ephemeral_key"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/events":
    get:
      description: "<p>List events, going back up to 30 days.</p>"
      operationId: NotificationEventAll
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: query
        name: created
        required: false
        type: integer
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A string containing a specific event name, or group of events
          using * as a wildcard. The list will be filtered to include only events
          with a matching event property.
        in: query
        name: type
        required: false
        type: string
      - description: An array of up to 20 strings containing specific event names.
          The list will be filtered to include only events with a matching event property.
          You may pass either `type` or `types`, but not both.
        in: query
        name: types
        required: false
        type: array
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/notification_event"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/events/{id}":
    get:
      description: "<p>Retrieves the details of an event. Supply the unique identifier
        of the event, which you might have received in a webhook.</p>"
      operationId: NotificationEventRetrieve
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the event to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/notification_event"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/events/{id}/retry":
    post:
      description: "<p>Resend an event. This only works in testmode</p>"
      operationId: NotificationEventRetry
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/notification_event"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/exchange_rates":
    get:
      description: "<p>Returns a list of objects that contain the rates at which foreign
        currencies are converted to one another. Only shows the currencies for which
        Stripe supports.</p>"
      operationId: AllExchangeRate
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: A cursor for use in pagination. `ending_before` is the currency
          that defines your place in the list. For instance, if you make a list request
          and receive 100 objects, starting with the exchange rate for currency X
          your subsequent call can include `ending_before=obj_bar` in order to fetch
          the previous page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and total number of supported payout currencies, and the default
          is the max.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is the currency
          that defines your place in the list. For instance, if you make a list request
          and receive 100 objects, ending with the exchange rate for currency X, your
          subsequent call can include `starting_after=X` in order to fetch the next
          page of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/exchange_rate"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/exchange_rates/{currency}":
    get:
      description: "<p>Retrieves the exchange rates from the given currency to every
        supported currency.</p>"
      operationId: RetrieveExchangeRate
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        in: path
        name: currency
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/exchange_rate"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/files":
    get:
      description: "<p>Returns a list of the files that you have uploaded to Stripe.
        The file uploads are returned sorted by creation date, with the most recently
        created file uploads appearing first.</p>"
      operationId: FileFileUploadAll
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: query
        name: created
        required: false
        type: integer
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: The file purpose to filter queries by. If none is provided, files
          will not be filtered by purpose.
        in: query
        name: purpose
        required: false
        type: string
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/file_upload"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>To upload a file to Stripe, you’ll need to send a request of
        type <code>multipart/form-data</code>. The request should contain the file
        you would like to upload, as well as the parameters for creating a file.</p><p>All
        of Stripe’s officially supported API libraries should have support for sending
        <code>multipart/form-data</code>.</p>"
      operationId: FileFileUploadCreate
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            file:
              description: A file to upload. The file should follow the specifications
                of RFC 2388 (which defines file transfers for the `multipart/form-data`
                protocol).
              type: string
            purpose:
              description: The purpose of the uploaded file. Possible values are `business_logo`,
                `customer_signature`, `dispute_evidence`, `identity_document`, `pci_document`,
                or `tax_document_user_upload`
              enum:
              - business_logo
              - customer_signature
              - dispute_evidence
              - identity_document
              - pci_document
              - tax_document_user_upload
              type: string
          required:
          - file
          - purpose
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/file_upload"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/files/{id}":
    get:
      description: "<p>Retrieves the details of an existing file object. Supply the
        unique file upload ID from a file creation request, and Stripe will return
        the corresponding transfer information.</p>"
      operationId: FileFileUploadRetrieve
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the file upload to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/file_upload"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoiceitems":
    get:
      description: "<p>Returns a list of your invoice items. Invoice items are returned
        sorted by creation date, with the most recently created invoice items appearing
        first.</p>"
      operationId: AllInvoiceItems
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: query
        name: created
        required: false
        type: integer
      - description: The identifier of the customer whose invoice items to return.
          If none is provided, all invoice items will be returned.
        in: query
        name: customer
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: Only return invoice items belonging to this invoice. If none
          is provided, all invoice items will be returned. If specifying an invoice,
          no customer identifier is needed.
        in: query
        name: invoice
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/invoice_item"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Adds an arbitrary charge or credit to the customer’s upcoming
        invoice.</p>"
      operationId: CreateInvoiceItem
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            amount:
              description: The integer amount in **%s** of the charge to be applied
                to the upcoming invoice. If you want to apply a credit to the customer's
                account, pass a negative amount.
              type: integer
            currency:
              description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
                in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
              type: string
            customer:
              description: The ID of the customer who will be billed when this invoice
                item is billed.
              type: string
            description:
              description: An arbitrary string which you can attach to the invoice
                item. The description is displayed in the invoice for easy tracking.
              type: string
            discountable:
              description: Controls whether discounts apply to this invoice item.
                Defaults to false for prorations or negative invoice items, and true
                for all other invoice items.
              type: boolean
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            invoice:
              description: The ID of an existing invoice to add this invoice item
                to. When left blank, the invoice item will be added to the next upcoming
                scheduled invoice. Use this when adding invoice items in response
                to an invoice.created webhook. You cannot add an invoice item to an
                invoice that has already been paid, attempted or closed.
              type: string
            metadata:
              description: A set of key/value pairs that you can attach to an invoice
                item object. It can be useful for storing additional information about
                the invoice item in a structured format.
              type: object
            quantity:
              description: Non-negative integer. The quantity of units for the invoice
                item.
              type: integer
            subscription:
              description: The ID of a subscription to add this invoice item to. When
                left blank, the invoice item will be be added to the next upcoming
                scheduled invoice. When set, scheduled invoices for subscriptions
                other than the specified subscription will ignore the invoice item.
                Use this when you want to express that an invoice item has been accrued
                within the context of a particular subscription.
              type: string
            unit_amount:
              description: The integer unit amount in **%s** of the charge to be applied
                to the upcoming invoice. This unit_amount will be multiplied by the
                quantity to get the full amount. If you want to apply a credit to
                the customer's account, pass a negative unit_amount.
              type: integer
          required:
          - currency
          - customer
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice_item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoiceitems/{invoiceitem}":
    delete:
      description: "<p>Removes an invoice item from the upcoming invoice. Removing
        an invoice item is only possible before the invoice it’s attached to is closed.</p>"
      operationId: DeleteInvoiceItem
      parameters:
      - description: The identifier of the invoice item to be deleted.
        in: path
        name: invoiceitem
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the invoice item with the given ID.</p>"
      operationId: RetrieveInvoiceItem
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the desired invoice item.
        in: path
        name: invoiceitem
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice_item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the amount or description of an invoice item on an
        upcoming invoice. Updating an invoice item is only possible before the invoice
        it’s attached to is closed.</p>"
      operationId: UpdateInvoiceItem
      parameters:
      - in: path
        name: invoiceitem
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              description: The integer amount in **%s** of the charge to be applied
                to the upcoming invoice. If you want to apply a credit to the customer's
                account, pass a negative amount.
              type: integer
            description:
              description: An arbitrary string which you can attach to the invoice
                item. The description is displayed in the invoice for easy tracking.
              type: string
            discountable:
              description: Controls whether discounts apply to this invoice item.
                Defaults to false for prorations or negative invoice items, and true
                for all other invoice items. Cannot be set to true for prorations.
              type: boolean
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: A set of key/value pairs that you can attach to an invoice
                item object. It can be useful for storing additional information about
                the invoice item in a structured format.
              type: object
            quantity:
              description: Non-negative integer. The quantity of units for the invoice
                item.
              type: integer
            unit_amount:
              description: The integer unit amount in **%s** of the charge to be applied
                to the upcoming invoice. This unit_amount will be multiplied by the
                quantity to get the full amount. If you want to apply a credit to
                the customer's account, pass a negative unit_amount.
              type: integer
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice_item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoices":
    get:
      description: "<p>You can list all invoices, or list the invoices for a specific
        customer. The invoices are returned sorted by creation date, with the most
        recently created invoices appearing first.</p>"
      operationId: AllInvoices
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The billing mode of the invoice to retrieve. Either `charge_automatically`
          or `send_invoice`.
        in: query
        name: billing
        required: false
        type: string
      - description: Only return invoices for the customer specified by this customer
          ID.
        in: query
        name: customer
        required: false
        type: string
      - in: query
        name: date
        required: false
        type: integer
      - in: query
        name: due_date
        required: false
        type: integer
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: Only return invoices for the subscription specified by this subscription
          ID.
        in: query
        name: subscription
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/invoice"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>If you need to invoice your customer outside the regular billing
        cycle, you can create an invoice that pulls in all pending invoice items,
        including prorations. The customer’s billing cycle and regular subscription
        won’t be affected.</p><p>Once you create the invoice, Stripe will attempt
        to collect payment according to your <a href="https://dashboard.stripe.com/account/recurring">subscriptions
        settings</a>, though you can choose to <a href="#pay_invoice">pay it right</a>
        away.</p>
      operationId: CreateInvoice
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            application_fee:
              description: A fee in %s that will be applied to the invoice and transferred
                to the application owner's Stripe account. The request must be made
                with an OAuth key or the Stripe-Account header in order to take an
                application fee. For more information, see the application fees [documentation](/docs/connect/subscriptions#working-with-invoices).
              type: integer
            billing:
              description: Either `charge_automatically`, or `send_invoice`. When
                charging automatically, Stripe will attempt to pay this invoice using
                the default source attached to the customer. When sending an invoice,
                Stripe will email this invoice to the customer with payment instructions.
                Defaults to `charge_automatically`.
              enum:
              - charge_automatically
              - send_invoice
              type: string
            customer:
              type: string
            days_until_due:
              description: The number of days from which the invoice is created until
                it is due. Only valid for invoices where `billing=send_invoice`.
              type: integer
            description:
              type: string
            due_date:
              description: The date on which payment for this invoice is due. Only
                valid for invoices where `billing=send_invoice`.
              type: integer
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
            statement_descriptor:
              description: Extra information about a charge for the customer's credit
                card statement. It must contain at least one letter. If not specified
                and this invoice is part of a subscription, the default `statement_descriptor`
                will be set to the first subscription item's product's `statement_descriptor`.
              type: string
            subscription:
              description: The ID of the subscription to invoice. If not set, the
                created invoice will include all pending invoice items for the customer.
                If set, the created invoice will exclude pending invoice items that
                pertain to other subscriptions.
              type: string
            tax_percent:
              description: The percent tax rate applied to the invoice, represented
                as a decimal number.
              type: number
          required:
          - customer
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoices/upcoming":
    get:
      description: "<p>At any time, you can preview the upcoming invoice for a customer.
        This will show you all the charges that are pending, including subscription
        renewal charges, invoice item charges, etc. It will also show you any discount
        that is applicable to the customer.</p><p>Note that when you are viewing an
        upcoming invoice, you are simply viewing a preview – the invoice has not yet
        been created. As such, the upcoming invoice will not show up in invoice listing
        calls, and you cannot use the API to pay or edit the invoice. If you want
        to change the amount that your customer will be billed, you can add, remove,
        or update pending invoice items, or update the customer’s discount.</p><p>You
        can preview the effects of updating a subscription, including a preview of
        what proration will take place. To ensure that the actual proration is calculated
        exactly the same as the previewed proration, you should pass a <code>proration_date</code>
        parameter when doing the actual subscription update. The value passed in should
        be the same as the <code>subscription_proration_date</code> returned on the
        upcoming invoice resource. The recommended way to get only the prorations
        being previewed is to consider only proration line items where <code>period[start]</code>
        is equal to the <code>subscription_proration_date</code> on the upcoming invoice
        resource.</p>"
      operationId: RetrieveUpcomingInvoice
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The code of the coupon to apply. If `subscription` or `subscription_items`
          is provided, the invoice returned will preview updating or creating a subscription
          with that coupon. Otherwise, it will preview applying that coupon to the
          customer for the next upcoming invoice from among the customer's subscriptions.
          The invoice can be previewed without a coupon by passing this value as an
          empty string.
        in: query
        name: coupon
        required: false
        type: string
      - description: The identifier of the customer whose upcoming invoice you'd like
          to retrieve.
        in: query
        name: customer
        required: true
        type: string
      - description: List of invoice items to add or update in the upcoming invoice
          preview.
        in: query
        name: invoice_items
        required: false
        type: array
      - description: The identifier of the subscription for which you'd like to retrieve
          the upcoming invoice. If not provided, but a `subscription_items` is provided,
          you will preview creating a subscription with those items. If neither `subscription`
          nor `subscription_items` is provided, you will retrieve the next upcoming
          invoice from among the customer's subscriptions.
        in: query
        name: subscription
        required: false
        type: string
      - description: For new subscriptions, a future timestamp to anchor the subscription's
          [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine
          the date of the first full invoice, and, for plans with `month` or `year`
          intervals, the day of the month for subsequent invoices.For existing subscriptions,
          the value can only be set to `now` or `unchanged`.
        in: query
        name: subscription_billing_cycle_anchor
        required: false
        type: string
      - description: List of subscription items, each with an attached plan.
        in: query
        name: subscription_items
        required: false
        type: array
      - description: If previewing an update to a subscription, this decides whether
          the preview will show the result of applying prorations or not. If set,
          one of `subscription_items` or `subscription`, and one of `subscription_items`
          or `subscription_trial_end` are required.
        in: query
        name: subscription_prorate
        required: false
        type: boolean
      - description: If previewing an update to a subscription, and doing proration,
          `subscription_proration_date` forces the proration to be calculated as though
          the update was done at the specified time. The time given must be within
          the current subscription period, and cannot be before the subscription was
          on its current plan. If set, `subscription`, and one of `subscription_items`,
          or `subscription_trial_end` are required. Also, `subscription_proration`
          cannot be set to false.
        in: query
        name: subscription_proration_date
        required: false
        type: integer
      - description: If provided, the invoice returned will preview updating or creating
          a subscription with that tax percent. If set, one of `subscription_items`
          or `subscription` is required.
        in: query
        name: subscription_tax_percent
        required: false
        type: number
      - description: If provided, the invoice returned will preview updating or creating
          a subscription with that trial end. If set, one of `subscription_items`
          or `subscription` is required.
        in: query
        name: subscription_trial_end
        required: false
        type: string
      - description: Indicates if a plan's `trial_period_days` should be applied to
          the subscription. Setting `subscription_trial_end` per subscription is preferred,
          and this defaults to `false`. Setting this flag to `true` together with
          `subscription_trial_end` is not allowed.
        in: query
        name: subscription_trial_from_plan
        required: false
        type: boolean
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/upcoming_invoice"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoices/upcoming/lines":
    get:
      description: "<p>When retrieving an upcoming invoice, you’ll get a <strong>lines</strong>
        property containing the total count of line items and the first handful of
        those items. There is also a URL where you can retrieve the full (paginated)
        list of line items.</p>"
      operationId: AllUpcomingInvoiceLines
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The code of the coupon to apply. If `subscription` or `subscription_items`
          is provided, the invoice returned will preview updating or creating a subscription
          with that coupon. Otherwise, it will preview applying that coupon to the
          customer for the next upcoming invoice from among the customer's subscriptions.
          The invoice can be previewed without a coupon by passing this value as an
          empty string.
        in: query
        name: coupon
        required: false
        type: string
      - description: The customer of the upcoming invoice is required. In other cases
          it is ignored.
        in: query
        name: customer
        required: true
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: The identifier of the subscription for which you'd like to retrieve
          the upcoming invoice. If not provided, but a `subscription_items` is provided,
          you will preview creating a subscription with those items. If neither `subscription`
          nor `subscription_items` is provided, you will retrieve the next upcoming
          invoice from among the customer's subscriptions.
        in: query
        name: subscription
        required: false
        type: string
      - description: For new subscriptions, a future timestamp to anchor the subscription's
          [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine
          the date of the first full invoice, and, for plans with `month` or `year`
          intervals, the day of the month for subsequent invoices.For existing subscriptions,
          the value can only be set to `now` or `unchanged`.
        in: query
        name: subscription_billing_cycle_anchor
        required: false
        type: string
      - description: Preview updating the subscription with this list of items. Otherwise
          this parameter is ignored.
        in: query
        name: subscription_items
        required: false
        type: array
      - description: If previewing an update to a subscription, this decides whether
          the preview will show the result of applying prorations or not. If set,
          one of `subscription_items` or `subscription`, and one of `subscription_items`
          or `subscription_trial_end` are required.
        in: query
        name: subscription_prorate
        required: false
        type: boolean
      - description: If previewing an update to a subscription, and doing proration,
          `subscription_proration_date` forces the proration to be calculated as though
          the update was done at the specified time. The time given must be within
          the current subscription period, and cannot be before the subscription was
          on its current plan. If set, `subscription`, and one of `subscription_items`,
          or `subscription_trial_end` are required. Also, `subscription_proration`
          cannot be set to false.
        in: query
        name: subscription_proration_date
        required: false
        type: integer
      - description: If provided, the invoice returned will preview updating or creating
          a subscription with that tax percent. If set, one of `subscription_items`
          or `subscription` is required.
        in: query
        name: subscription_tax_percent
        required: false
        type: number
      - description: If provided, the invoice returned will preview updating or creating
          a subscription with that trial end. If set, one of `subscription_items`
          or `subscription` is required.
        in: query
        name: subscription_trial_end
        required: false
        type: string
      - description: Indicates if a plan's `trial_period_days` should be applied to
          the subscription. Setting `subscription_trial_end` per subscription is preferred,
          and this defaults to `false`. Setting this flag to `true` together with
          `subscription_trial_end` is not allowed.
        in: query
        name: subscription_trial_from_plan
        required: false
        type: boolean
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/invoice_line_item"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: InvoiceLinesList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoices/{invoice}":
    get:
      description: "<p>Retrieves the invoice with the given ID.</p>"
      operationId: RetrieveInvoice
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the desired invoice.
        in: path
        name: invoice
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Until an invoice is paid, it is marked as open (<code>closed=false</code>).
        If you’d like to stop Stripe from attempting to collect payment on an invoice
        or would simply like to close the invoice out as no longer owed by the customer,
        you can update the closed parameter.</p>"
      operationId: UpdateInvoice
      parameters:
      - in: path
        name: invoice
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            application_fee:
              description: A fee in %s that will be applied to the invoice and transferred
                to the application owner's Stripe account. The request must be made
                with an OAuth key or the Stripe-Account header in order to take an
                application fee. For more information, see the application fees [documentation](/docs/connect/subscriptions#working-with-invoices).
              type: integer
            closed:
              description: Boolean representing whether an invoice is closed or not.
                To close an invoice, pass true.
              type: boolean
            days_until_due:
              description: The number of days from which the invoice is created until
                it is due. Only valid for invoices where `billing=send_invoice`.
              type: integer
            description:
              type: string
            due_date:
              description: The date on which payment for this invoice is due. Only
                valid for invoices where `billing=send_invoice`.
              type: integer
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            forgiven:
              description: Boolean representing whether an invoice is forgiven or
                not. To forgive an invoice, pass true. Forgiving an invoice instructs
                us to update the subscription status as if the invoice were successfully
                paid. Once an invoice has been forgiven, it cannot be unforgiven or
                reopened.
              type: boolean
            metadata:
              type: object
            paid:
              description: Boolean representing whether an invoice is paid or not.
                To mark invoice as paid, pass true. Only applies to invoices where
                `billing=send_invoice`.
              type: boolean
            statement_descriptor:
              description: Extra information about a charge for the customer's credit
                card statement. It must contain at least one letter. If not specified
                and this invoice is part of a subscription, the default `statement_descriptor`
                will be set to the first subscription item's product's `statement_descriptor`.
              type: string
            tax_percent:
              description: The percent tax rate applied to the invoice, represented
                as a non-negative decimal number (with at most four decimal places)
                between 0 and 100. To unset a previously-set value, pass an empty
                string. The tax rate of an attempted, paid or forgiven invoice cannot
                be changed.
              type: number
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoices/{invoice}/lines":
    get:
      description: "<p>When retrieving an invoice, you’ll get a <strong>lines</strong>
        property containing the total count of line items and the first handful of
        those items. There is also a URL where you can retrieve the full (paginated)
        list of line items.</p>"
      operationId: AllInvoiceLines
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the invoice containing the lines to be retrieved.
        in: path
        name: invoice
        required: true
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/invoice_line_item"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: InvoiceLinesList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoices/{invoice}/pay":
    post:
      description: <p>Stripe automatically creates and then attempts to collect payment
        on invoices for customers on subscriptions according to your <a href="https://dashboard.stripe.com/account/recurring">subscriptions
        settings</a>. However, if you’d like to attempt payment on an invoice out
        of the normal collection schedule or for some other reason, you can do so.</p>
      operationId: PayInvoice
      parameters:
      - description: ID of invoice to pay.
        in: path
        name: invoice
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            forgive:
              description: Determines if invoice should be forgiven if source has
                insufficient funds to fully pay the invoice.
              type: boolean
            source:
              description: A payment source to be charged. The source must be the
                ID of a source belonging to the customer associated with the invoice
                being paid.
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/issuer_fraud_records":
    get:
      description: "<p>Returns a list of issuer fraud records.</p>"
      operationId: DisputesIssuerFraudRecordAll
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: Only return issuer fraud records for the charge specified by
          this charge ID.
        in: query
        name: charge
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/issuer_fraud_record"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: DisputesIssuerFraudRecordList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/issuer_fraud_records/{issuer_fraud_record}":
    get:
      description: <p>Retrieves the details of an issuer fraud record that has previously
        been created. </p><p>Please refer to the <a href="#issuer_fraud_record_object">issuer
        fraud record</a> object reference for more details.</p>
      operationId: DisputesIssuerFraudRecordRetrieve
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the issuer fraud record to be retrieved.
        in: path
        name: issuer_fraud_record
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/issuer_fraud_record"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/order_returns":
    get:
      description: "<p>Returns a list of your order returns. The returns are returned
        sorted by creation date, with the most recently created return appearing first.</p>"
      operationId: AllOrderReturns
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: Date this return was created.
        in: query
        name: created
        required: false
        type: integer
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: The order to retrieve returns for.
        in: query
        name: order
        required: false
        type: string
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/order_return"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/order_returns/{id}":
    get:
      description: "<p>Retrieves the details of an existing order return. Supply the
        unique order ID from either an order return creation request or the order
        return list, and Stripe will return the corresponding order information.</p>"
      operationId: RetrieveOrderReturn
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the order return to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/order_return"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/orders":
    get:
      description: "<p>Returns a list of your orders. The orders are returned sorted
        by creation date, with the most recently created orders appearing first.</p>"
      operationId: AllOrders
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: Date this order was created.
        in: query
        name: created
        required: false
        type: integer
      - description: Only return orders for the given customer.
        in: query
        name: customer
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: Only return orders with the given IDs.
        in: query
        name: ids
        required: false
        type: array
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: Only return orders that have the given status. One of `created`,
          `paid`, `fulfilled`, or `refunded`.
        in: query
        name: status
        required: false
        type: string
      - description: Filter orders based on when they were paid, fulfilled, canceled,
          or returned.
        in: query
        name: status_transitions
        required: false
        type: string
      - description: Only return orders with the given upstream order IDs.
        in: query
        name: upstream_ids
        required: false
        type: array
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/order"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateOrder
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            coupon:
              description: A coupon code that represents a discount to be applied
                to this order. Must be one-time duration and in same currency as the
                order.
              type: string
            currency:
              description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
                in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
              type: string
            customer:
              description: The ID of an existing customer to use for this order. If
                provided, the customer email and shipping address will be used to
                create the order. Subsequently, the customer will also be charged
                to pay the order. If `email` or `shipping` are also provided, they
                will override the values retrieved from the customer object.
              type: string
            email:
              description: The email address of the customer placing the order.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            items:
              description: List of items constituting the order.
              items:
                properties:
                  amount:
                    type: integer
                  currency:
                    type: string
                  description:
                    type: string
                  parent:
                    type: string
                  quantity:
                    type: integer
                  type:
                    enum:
                    - discount
                    - shipping
                    - sku
                    - tax
                    type: string
                title: order_item_specs
                type: object
              type: array
            metadata:
              description: A set of key/value pairs that you can attach to an order
                object. Limited to 500 characters. Metadata can be useful for storing
                additional information about the order in a structured format.
              type: object
            shipping:
              description: Shipping address for the order. Required if any of the
                SKUs are for products that have `shippable` set to true.
              properties:
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  required:
                  - line1
                  title: address
                  type: object
                name:
                  type: string
                phone:
                  type: string
              required:
              - address
              - name
              title: customer_shipping
              type: object
          required:
          - currency
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/order"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/orders/{id}":
    get:
      description: "<p>Retrieves the details of an existing order. Supply the unique
        order ID from either an order creation request or the order list, and Stripe
        will return the corresponding order information.</p>"
      operationId: RetrieveOrder
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the order to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/order"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the specific order by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.</p>"
      operationId: UpdateOrder
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            coupon:
              description: A coupon code that represents a discount to be applied
                to this order. Must be one-time duration and in same currency as the
                order.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: A set of key/value pairs that you can attach to a product
                object. It can be useful for storing additional information about
                the order in a structured format.
              type: object
            selected_shipping_method:
              description: The shipping method to select for fulfilling this order.
                If specified, must be one of the `id`s of a shipping method in the
                `shipping_methods` array. If specified, will overwrite the existing
                selected shipping method, updating `items` as necessary.
              type: string
            shipping:
              description: Tracking information once the order has been fulfilled.
              properties:
                carrier:
                  type: string
                tracking_number:
                  type: string
              required:
              - carrier
              - tracking_number
              title: shipping_tracking_params
              type: object
            status:
              description: Current order status. One of `created`, `paid`, `canceled`,
                `fulfilled`, or `returned`. More detail in the [Relay API Overview](/docs/orders/guide#understanding-order-statuses).
              enum:
              - canceled
              - created
              - fulfilled
              - paid
              - returned
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/order"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/orders/{id}/pay":
    post:
      description: ''
      operationId: PayOrder
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            application_fee:
              type: integer
            customer:
              description: The ID of an existing customer that will be charged for
                this order. If no customer was attached to the order at creation,
                either `source` or `customer` is required. Otherwise, the specified
                customer will be charged instead of the one attached to the order.
              type: string
            email:
              description: The email address of the customer placing the order. Required
                if not previously specified for the order.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: A set of key/value pairs that you can attach to an order
                object. Limited to 500 characters. Metadata can be useful for storing
                additional information about the order in a structured format.
              type: object
            shipping_method:
              type: string
            source:
              description: The source can either be a [Token](/docs/api#tokens)'s
                or a [Source](/docs/api#sources)'s ID, as returned by [Elements](/docs/elements),
                or a dictionary containing a user's credit card details (with the
                options shown below). If no customer was attached to the order at
                creation, either `source` or `customer is required. Otherwise, the
                specified source will be charged intead of the customer attached to
                the order.
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/order"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/orders/{id}/returns":
    post:
      description: "<p>Return all or part of an order. The order must have a status
        of <code>paid</code> or <code>fulfilled</code> before it can be returned.
        Once all items have been returned, the order will become <code>canceled</code>
        or <code>returned</code> depending on which status the order started in.</p>"
      operationId: CreateOrderReturn
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            items:
              description: List of items to return.
              items:
                properties:
                  amount:
                    type: integer
                  description:
                    type: string
                  parent:
                    type: string
                  quantity:
                    type: integer
                  type:
                    enum:
                    - discount
                    - shipping
                    - sku
                    - tax
                    type: string
                title: return_order_item_specs
                type: object
              type: array
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/order_return"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/payments":
    post:
      description: ''
      operationId: CreatePayment
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            alternate_statement_descriptors:
              properties:
                kana:
                  type: string
                kanji:
                  type: string
              title: alternate_statement_descriptors_params
              type: object
            amount:
              type: integer
            application:
              type: string
            application_fee:
              type: integer
            capture:
              type: boolean
            card_program:
              type: string
            currency:
              type: string
            customer:
              type: string
            description:
              type: string
            destination:
              properties:
                account:
                  type: string
                amount:
                  type: integer
              required:
              - account
              title: destination_specs
              type: object
            device_id:
              type: string
            exchange_rate:
              type: number
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            external_id:
              type: string
            idempotency_key:
              type: string
            invoice:
              type: string
            invoice_source:
              type: string
            ip:
              type: string
            level3:
              properties:
                customer_reference:
                  type: string
                line_items:
                  items:
                    properties:
                      discount_amount:
                        type: integer
                      product_code:
                        type: string
                      product_description:
                        type: string
                      quantity:
                        type: integer
                      tax_amount:
                        type: integer
                      unit_cost:
                        type: integer
                    required:
                    - product_code
                    - product_description
                    title: line_item
                    type: object
                  type: array
                merchant_reference:
                  type: string
                shipping_address_zip:
                  type: string
                shipping_amount:
                  type: integer
                shipping_from_zip:
                  type: string
              required:
              - line_items
              - merchant_reference
              title: level3
              type: object
            metadata:
              type: object
            on_behalf_of:
              type: string
            order:
              type: string
            payment_method:
              type: string
            payment_user_agent:
              type: string
            receipt_email:
              type: string
            recurring:
              type: boolean
            referrer:
              type: string
            shipping:
              properties:
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  required:
                  - line1
                  title: address
                  type: object
                carrier:
                  type: string
                name:
                  type: string
                phone:
                  type: string
                tracking_number:
                  type: string
              required:
              - address
              - name
              title: shipping
              type: object
            source:
              type: string
            statement_address:
              properties:
                city:
                  type: string
                line1:
                  type: string
                line2:
                  type: string
                postal_code:
                  type: string
                state:
                  type: string
              required:
              - city
              - line1
              - postal_code
              - state
              title: charge_address
              type: object
            statement_descriptor:
              type: string
            transfer_group:
              type: string
            trust:
              properties:
                safety:
                  enum:
                  - fraudulent
                  - safe
                  type: string
              title: user_specified_trust
              type: object
            uncaptured:
              type: boolean
            user_agent:
              type: string
          required:
          - amount
          - currency
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/payments/{payment}":
    get:
      description: ''
      operationId: RetrievePayment
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: payment
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/payouts":
    get:
      description: "<p>Returns a list of existing payouts sent to third-party bank
        accounts or that Stripe has sent you. The payouts are returned in sorted order,
        with the most recently created payouts appearing first.</p>"
      operationId: PayoutAll
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: query
        name: arrival_date
        required: false
        type: integer
      - in: query
        name: created
        required: false
        type: integer
      - description: The ID of an external account - only return payouts sent to this
          external account.
        in: query
        name: destination
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: 'Only return payouts that have the given status: `pending`, `paid`,
          `failed`, or `canceled`.'
        in: query
        name: status
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/payout"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: PayoutList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>To send funds to your own bank account, you create a new payout
        object. Your <a href="#balance">Stripe balance</a> must be able to cover the
        payout amount, or you’ll receive an “Insufficient Funds” error.</p><p>If your
        API key is in test mode, money won’t actually be sent, though everything else
        will occur as if in live mode.</p><p>If you are creating a manual payout on
        a Stripe account that uses multiple payment source types, you’ll need to specify
        the source type balance that the payout should draw from. The <a href="#balance_object">balance
        object</a> details available and pending amounts by source type.</p>
      operationId: PayoutCreate
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            amount:
              description: A positive integer in cents representing how much to payout.
              type: integer
            currency:
              description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
                in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
              type: string
            description:
              description: An arbitrary string attached to the object. Often useful
                for displaying to users.
              type: string
            destination:
              description: The ID of a bank account or a card to send the payout to.
                If no destination is supplied, the default external account for the
                specified currency will be used.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: A set of key/value pairs that you can attach to a payout
                object. It can be useful for storing additional information about
                the payout in a structured format.
              type: object
            method:
              description: The method used to send this payout, which can be `standard`
                or `instant`. `instant` is only supported for payouts to debit cards.
                (See [Instant payouts for marketplaces for more information](https://stripe.com/blog/instant-payouts-for-marketplaces).)
              enum:
              - instant
              - standard
              type: string
            source_type:
              description: 'The source balance to draw this payout from. Balances
                for different payment sources are kept separately. You can find the
                amounts with the balances API. Valid options are: **alipay_account**,
                **bank_account**, and **card**.'
              enum:
              - alipay_account
              - bank_account
              - bitcoin_receiver
              - card
              - source
              - stripe_account
              type: string
            statement_descriptor:
              description: 'A string to be displayed on the recipient''s bank or card
                statement. This may be at most 22 characters. Attempting to use a
                `statement_descriptor` longer than 22 characters will return an error.
                Note: Most banks will truncate this information and/or display it
                inconsistently. Some may not display it at all.'
              type: string
          required:
          - amount
          - currency
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/payout"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/payouts/{payout}":
    get:
      description: "<p>Retrieves the details of an existing payout. Supply the unique
        payout ID from either a payout creation request or the payout list, and Stripe
        will return the corresponding payout information.</p>"
      operationId: PayoutRetrieve
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the payout to be retrieved.
        in: path
        name: payout
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/payout"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the specified payout by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged. This request accepts
        only the metadata as arguments.</p>"
      operationId: PayoutUpdate
      parameters:
      - description: The identifier of the payout to be updated.
        in: path
        name: payout
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: A set of key/value pairs that you can attach to a payout
                object. It can be useful for storing additional information about
                the payout in a structured format.
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/payout"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/payouts/{payout}/cancel":
    post:
      description: "<p>A previously created payout can be canceled if it has not yet
        been paid out. Funds will be refunded to your available balance. You may not
        cancel automatic Stripe payouts.</p>"
      operationId: PayoutCancel
      parameters:
      - description: The identifier of the payout to be canceled.
        in: path
        name: payout
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/payout"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/plans":
    get:
      description: "<p>Returns a list of your plans.</p>"
      operationId: AllPlans
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: Only return plans that are active or inactive (e.g., pass `false`
          to list all inactive products).
        in: query
        name: active
        required: false
        type: boolean
      - description: A filter on the list, based on the object `created` field. The
          value can be a string with an integer Unix timestamp, or it can be a dictionary
          with a number of different query options.
        in: query
        name: created
        required: false
        type: integer
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: Only return plans for the given product.
        in: query
        name: product
        required: false
        type: string
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/plan"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>You can create plans using the API, or in the Stripe <a href="https://dashboard.stripe.com/subscriptions/products">Dashboard</a>.</p>
      operationId: CreatePlan
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            active:
              description: Whether the plan is currently available for new subscriptions.
                Defaults to `true`.
              type: boolean
            aggregate_usage:
              description: Specifies a usage aggregation strategy for plans of `usage_type=metered`.
                Allowed values are `sum` for summing up all usage during a period,
                `last_during_period` for picking the last usage record reported within
                a period, `last_ever` for picking the last usage record ever (across
                period bounds) or `max` which picks the usage record with the maximum
                reported usage during a period. Defaults to `sum`.
              enum:
              - last_during_period
              - last_ever
              - max
              - sum
              type: string
            amount:
              description: A positive integer in %s (or 0 for a free plan) representing
                how much to charge on a recurring basis. Either `amount` or `tiers`
                is required.
              type: integer
            billing_scheme:
              description: Describes how to compute the price per period. Either `per_unit`
                or `tiered`. `per_unit` indicates that the fixed amount (specified
                in `amount`) will be charged per unit in `quantity` (for plans with
                `usage_type=licensed`), or per unit of total usage (for plans with
                `usage_type=metered`). `tiered` indicates that the unit pricing will
                be computed using a tiering strategy as defined using the `tiers`
                and `tiers_mode` attributes.
              enum:
              - per_unit
              - tiered
              type: string
            currency:
              description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
                in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            id:
              description: An identifier randomly generated by Stripe. Used to identify
                this plan when subscribing a customer. You can optionally override
                this ID, but the ID must be unique across all plans in your Stripe
                account. You can, however, use the same plan ID in both live and test
                modes.
              type: string
            interval:
              description: Specifies billing frequency. Either `day`, `week`, `month`
                or `year`.
              enum:
              - day
              - month
              - week
              - year
              type: string
            interval_count:
              description: The number of intervals between subscription billings.
                For example, `interval=month` and `interval_count=3` bills every 3
                months. Maximum of one year interval allowed (1 year, 12 months, or
                52 weeks).
              type: integer
            metadata:
              description: A set of key/value pairs that you can attach to a plan
                object. It can be useful for storing additional information about
                the plan in a structured format.
              type: object
            name:
              description: The plan name. Customers may see this value on Stripe-generated
                invoices and receipts.
              type: string
            nickname:
              description: A brief description of the plan, hidden from customers.
              type: string
            product: {}
            statement_descriptor:
              description: An arbitrary string to be displayed on your customer's
                credit card statement. This may be up to 22 characters. The statement
                description may not include <>"' characters, and will appear on your
                customer's statement in capital letters. Non-ASCII characters are
                automatically stripped. While most banks display this information
                consistently, some may display it incorrectly or not at all. It must
                contain at least one letter.
              type: string
            tiers:
              description: Each element represents a pricing tier. This parameter
                requires `billing_scheme` to be set to `tiered`. See also the documentation
                for `billing_scheme`. Either `amount` or `tiers` is required.
              items:
                properties:
                  amount:
                    type: integer
                  up_to: {}
                required:
                - amount
                - up_to
                title: plan_tier_param
                type: object
              type: array
            tiers_mode:
              description: Defines if the tiering price should be `graduated` or `volume`
                based. In `volume`-based tiering, the maximum quantity within a period
                determines the per unit price, in `graduated` tiering pricing can
                successively change as the quantity grows.
              enum:
              - graduated
              - volume
              type: string
            transform_usage:
              description: Apply a transformation to the reported usage or set quantity
                before computing the billed price. Cannot be combined with `tiers`.
              properties:
                divide_by:
                  type: integer
                round:
                  enum:
                  - down
                  - up
                  type: string
              required:
              - divide_by
              - round
              title: transform_usage_param
              type: object
            trial_period_days:
              description: Default number of trial days when subscribing a customer
                to this plan using [`trial_from_plan=true`](/docs/api#create_subscription-trial_from_plan).
              type: integer
            usage_type:
              description: Configures how the quantity per period should be determined,
                can be either `metered` or `licensed`. `licensed` will automatically
                bill the `quantity` set for a plan when adding it to a subscription,
                `metered` will aggregate the total usage based on usage records. Defaults
                to `licensed`.
              enum:
              - licensed
              - metered
              type: string
          required:
          - currency
          - interval
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/plan"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/plans/{plan}":
    delete:
      description: "<p>Deleting plans means new subscribers can’t be added. Existing
        subscribers aren’t affected.</p>"
      operationId: DeletePlan
      parameters:
      - description: The identifier of the plan to be deleted.
        in: path
        name: plan
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the plan with the given ID.</p>"
      operationId: RetrievePlan
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the desired plan.
        in: path
        name: plan
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/plan"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the specified plan by setting the values of the parameters
        passed. Any parameters not provided are left unchanged. By design, you cannot
        change a plan’s ID, amount, currency, or billing cycle.</p>"
      operationId: UpdatePlan
      parameters:
      - description: The identifier of the plan to be updated.
        in: path
        name: plan
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            active:
              description: Whether the plan is currently available for new subscriptions.
              type: boolean
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: 'A set of key/value pairs that you can attach to a plan
                object. It can be useful for storing additional information about
                the plan in a structured format. '
              type: object
            name:
              description: 'The plan name. Customers may see this value on Stripe-generated
                invoices and receipts. '
              type: string
            nickname:
              description: A brief description of the plan, hidden from customers.
              type: string
            product:
              description: The product the plan belongs to. Note that after updating,
                statement descriptors and line items of the plan in active subscriptions
                will be affected.
              type: string
            statement_descriptor:
              description: An arbitrary string to be displayed on your customer's
                credit card statement. This may be up to 22 characters. The statement
                description may not include <>"' characters, and will appear on your
                customer's statement in capital letters. Non-ASCII characters are
                automatically stripped. While most banks display this information
                consistently, some may display it incorrectly or not at all. It must
                contain at least one letter.
              type: string
            trial_period_days:
              description: Default number of trial days when subscribing a customer
                to this plan using [`trial_from_plan=true`](/docs/api#create_subscription-trial_from_plan).
              type: integer
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/plan"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/products":
    get:
      description: "<p>Returns a list of your products. The products are returned
        sorted by creation date, with the most recently created products appearing
        first.</p>"
      operationId: AllProducts
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: Only return products that are active or inactive (e.g., pass
          `false` to list all inactive products).
        in: query
        name: active
        required: false
        type: boolean
      - description: Only return products that were created during the given date
          interval.
        in: query
        name: created
        required: false
        type: integer
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: Only return products with the given IDs.
        in: query
        name: ids
        required: false
        type: array
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: Only return products that can be shipped (i.e., physical, not
          digital products).
        in: query
        name: shippable
        required: false
        type: boolean
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: Only return products of this type.
        in: query
        name: type
        required: false
        type: string
      - description: Only return products with the given url.
        in: query
        name: url
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/product"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>Creates a new product object. To create a product for use with
        subscriptions, see <a href="#create_service_product">Subscriptions Products</a>.</p>
      operationId: CreateProduct
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            active:
              description: Whether the product is currently available for purchase.
                Defaults to `true`.
              type: boolean
            attributes:
              description: A list of up to 5 alphanumeric attributes. Applicable to
                both `service` and `good` types.
              items:
                type: string
              type: array
            caption:
              description: A short one-line description of the product, meant to be
                displayable to the customer. May only be set if type=`good`.
              type: string
            deactivate_on:
              description: An array of Connect application names or identifiers that
                should not be able to order the SKUs for this product. May only be
                set if type=`good`.
              items:
                type: string
              type: array
            description:
              description: The product's description, meant to be displayable to the
                customer. May only be set if type=`good`.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            id:
              description: An identifier will be randomly generated by Stripe. You
                can optionally override this ID, but the ID must be unique across
                all products in your Stripe account. Applicable to both `service`
                and `good` types.
              type: string
            images:
              description: A list of up to 8 URLs of images for this product, meant
                to be displayable to the customer. May only be set if type=`good`.
              items:
                type: string
              type: array
            metadata:
              description: A set of key/value pairs that you can attach to a product
                object. It can be useful for storing additional information about
                the product in a structured format. Applicable to both `service` and
                `good` types.
              type: object
            name:
              description: The product's name, meant to be displayable to the customer.
                Applicable to both `service` and `good` types.
              type: string
            package_dimensions:
              description: The dimensions of this product for shipping purposes. A
                SKU associated with this product can override this value by having
                its own `package_dimensions`. May only be set if type=`good`.
              properties:
                height:
                  type: number
                length:
                  type: number
                weight:
                  type: number
                width:
                  type: number
              required:
              - height
              - length
              - weight
              - width
              title: package_dimensions_specs
              type: object
            shippable:
              description: Whether this product is shipped (i.e., physical goods).
                Defaults to `true`. May only be set if type=`good`.
              type: boolean
            statement_descriptor:
              description: An arbitrary string to be displayed on your customer's
                credit card statement. This may be up to 22 characters. The statement
                description may not include <>"' characters, and will appear on your
                customer's statement in capital letters. Non-ASCII characters are
                automatically stripped. While most banks display this information
                consistently, some may display it incorrectly or not at all. It must
                contain at least one letter. May only be set if type=`service`.
              type: string
            type:
              description: The type of the product. The product is either of type
                `service`, which is eligible for use with Subscriptions and Plans
                or `good`, which is eligible for use with Orders and SKUs.
              enum:
              - good
              - service
              type: string
            unit_label:
              description: A label that represents units of this product, such as
                seat(s), in Stripe and on customers’ receipts and invoices. Only available
                on products of type=`service`.
              type: string
            url:
              description: A URL of a publicly-accessible webpage for this product.
                May only be set if type=`good`.
              type: string
          required:
          - name
          - type
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/product"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/products/{id}":
    delete:
      description: "<p>Delete a product. Deleting a product with type=<code>good</code>
        is only possible if it has no SKUs associated with it. Deleting a product
        with type=<code>service</code> is only possible if it has no plans associated
        with it.</p>"
      operationId: DeleteProduct
      parameters:
      - description: The ID of the product to delete.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_product"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the details of an existing product. Supply the unique
        product ID from either a product creation request or the product list, and
        Stripe will return the corresponding product information.</p>"
      operationId: RetrieveProduct
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the product to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/product"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the specific product by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.</p><p>Note that
        a product’s <code>attributes</code> are not editable. Instead, you would need
        to deactivate the existing product and create a new one with the new attribute
        values.</p>"
      operationId: UpdateProduct
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            active:
              description: Whether the product is available for purchase.
              type: boolean
            attributes:
              description: A list of up to 5 alphanumeric attributes that each SKU
                can provide values for (e.g., `["color", "size"]`). If a value for
                `attributes` is specified, the list specified will replace the existing
                attributes list on this product. Any attributes not present after
                the update will be deleted from the SKUs for this product.
              items:
                type: string
              type: array
            caption:
              description: A short one-line description of the product, meant to be
                displayable to the customer.
              type: string
            deactivate_on:
              description: An array of Connect application names or identifiers that
                should not be able to order the SKUs for this product.
              items:
                type: string
              type: array
            description:
              description: The product's description, meant to be displayable to the
                customer.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            images:
              description: A list of up to 8 URLs of images for this product, meant
                to be displayable to the customer.
              items:
                type: string
              type: array
            metadata:
              description: A set of key/value pairs that you can attach to a product
                object. It can be useful for storing additional information about
                the product in a structured format.
              type: object
            name:
              description: The product's name, meant to be displayable to the customer.
                Applicable to both `service` and `good` types.
              type: string
            package_dimensions:
              description: The dimensions of this product for shipping purposes. A
                SKU associated with this product can override this value by having
                its own `package_dimensions`.
              properties:
                height:
                  type: number
                length:
                  type: number
                weight:
                  type: number
                width:
                  type: number
              required:
              - height
              - length
              - weight
              - width
              title: package_dimensions_specs
              type: object
            shippable:
              description: Whether this product is shipped (i.e., physical goods).
                Defaults to `true`.
              type: boolean
            statement_descriptor:
              description: An arbitrary string to be displayed on your customer's
                credit card statement. This may be up to 22 characters. The statement
                description may not include <>"' characters, and will appear on your
                customer's statement in capital letters. Non-ASCII characters are
                automatically stripped. While most banks display this information
                consistently, some may display it incorrectly or not at all. It must
                contain at least one letter. May only be set if type=`service`.
              type: string
            unit_label:
              description: A label that represents units of this product, such as
                seat(s), in Stripe and on customers’ receipts and invoices. Only available
                on products of type=`service`.
              type: string
            url:
              description: A URL of a publicly-accessible webpage for this product.
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/product"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/recipients":
    get:
      deprecated: true
      description: "<p>Returns a list of your recipients. The recipients are returned
        sorted by creation date, with the most recently created recipients appearing
        first.</p>"
      operationId: AllTransferRecipients
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: query
        name: created
        required: false
        type: integer
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - in: query
        name: type
        required: false
        type: string
      - description: Only return recipients that are verified or unverified.
        in: query
        name: verified
        required: false
        type: boolean
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/transfer_recipient"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      deprecated: true
      description: ''
      operationId: TransferRecipientCreate
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            bank_account: {}
            card: {}
            description:
              type: string
            email:
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
            name:
              type: string
            tax_id:
              type: string
            type:
              type: string
          required:
          - name
          - type
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer_recipient"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/recipients/{id}":
    delete:
      deprecated: true
      description: "<p>Permanently deletes a recipient. It cannot be undone.</p>"
      operationId: TransferRecipientDelete
      parameters:
      - description: The identifier of the recipient to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      deprecated: true
      description: "<p>Retrieves the details of an existing recipient. You need only
        supply the unique recipient identifier that was returned upon recipient creation.</p>"
      operationId: RetrieveTransferRecipient
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the recipient to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      deprecated: true
      description: ''
      operationId: TransferRecipientUpdate
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            bank_account: {}
            card: {}
            default_card:
              type: string
            description:
              type: string
            email:
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
            name:
              type: string
            tax_id:
              type: string
            type:
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer_recipient"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/refunds":
    get:
      description: "<p>Returns a list of all refunds you’ve previously created. The
        refunds are returned in sorted order, with the most recent refunds appearing
        first. For convenience, the 10 most recent refunds are always available by
        default on the charge object.</p>"
      operationId: AllRefunds
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: Only return refunds for the charge specified by this charge ID.
        in: query
        name: charge
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/refund"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UnifiedPaymentsCreateRefund
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              type: integer
            charge:
              type: string
            description:
              type: string
            directive:
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              type: object
            reason:
              enum:
              - duplicate
              - fraudulent
              - requested_by_customer
              type: string
            refund_application_fee:
              type: boolean
            reverse_transfer:
              type: boolean
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/refunds/{refund}":
    get:
      description: "<p>Retrieves the details of an existing refund.</p>"
      operationId: RetrieveRefund
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: ID of refund to retrieve.
        in: path
        name: refund
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the specified refund by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.</p><p>This request
        only accepts <code>metadata</code> as an argument.</p>"
      operationId: UpdateRefund
      parameters:
      - in: path
        name: refund
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: Set of key-value pairs that you can attach to an object.
                This can be useful for storing additional information about the object
                in a structured format. Individual keys can be unset by posting an
                empty value to them. All keys can be unset by posting an empty value
                to `metadata`.
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/skus":
    get:
      description: "<p>Returns a list of your SKUs. The SKUs are returned sorted by
        creation date, with the most recently created SKUs appearing first.</p>"
      operationId: AllSKUs
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: Only return SKUs that are active or inactive (e.g., pass `false`
          to list all inactive products).
        in: query
        name: active
        required: false
        type: boolean
      - description: Only return SKUs that have the specified key/value pairs in this
          partially constructed dictionary. Can be specified only if `product` is
          also supplied. For instance, if the associated product has attributes `["color",
          "size"]`, passing in `attributes[color]=red` returns all the SKUs for this
          product that have `color` set to `red`.
        in: query
        name: attributes
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: Only return SKUs with the given IDs.
        in: query
        name: ids
        required: false
        type: array
      - description: Only return SKUs that are either in stock or out of stock (e.g.,
          pass `false` to list all SKUs that are out of stock). If no value is provided,
          all SKUs are returned.
        in: query
        name: in_stock
        required: false
        type: boolean
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: The ID of the product whose SKUs will be retrieved. Must be a
          product with type `good`.
        in: query
        name: product
        required: false
        type: string
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/sku"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Creates a new SKU associated with a product.</p>"
      operationId: CreateSKU
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            active:
              description: Whether the SKU is available for purchase. Default to `true`.
              type: boolean
            attributes:
              description: 'A dictionary of attributes and values for the attributes
                defined by the product. If, for example, a product''s attributes are
                `["size", "gender"]`, a valid SKU has the following dictionary of
                attributes: `{"size": "Medium", "gender": "Unisex"}`.'
              type: object
            currency:
              description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
                in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            id:
              description: The identifier for the SKU. Must be unique. If not provided,
                an identifier will be randomly generated.
              type: string
            image:
              description: The URL of an image for this SKU, meant to be displayable
                to the customer.
              type: string
            inventory:
              description: Description of the SKU's inventory.
              properties:
                quantity:
                  type: integer
                type:
                  enum:
                  - bucket
                  - finite
                  - infinite
                  type: string
                value:
                  enum:
                  - ''
                  - in_stock
                  - limited
                  - out_of_stock
                  type: string
              title: inventory_specs
              type: object
            metadata:
              description: A set of key/value pairs that you can attach to a SKU object.
                It can be useful for storing additional information about the SKU
                in a structured format.
              type: object
            package_dimensions:
              description: The dimensions of this SKU for shipping purposes.
              properties:
                height:
                  type: number
                length:
                  type: number
                weight:
                  type: number
                width:
                  type: number
              required:
              - height
              - length
              - weight
              - width
              title: package_dimensions_specs
              type: object
            price:
              description: The cost of the item as a nonnegative integer in the smallest
                currency unit (that is, 100 cents to charge $1.00, or 100 to charge
                ¥100, Japanese Yen being a zero-decimal currency).
              type: integer
            product:
              description: The ID of the product this SKU is associated with. Must
                be a product with type `good`.
              type: string
          required:
          - currency
          - inventory
          - price
          - product
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/sku"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/skus/{id}":
    delete:
      description: "<p>Delete a SKU. Deleting a SKU is only possible until it has
        been used in an order.</p>"
      operationId: DeleteSKU
      parameters:
      - description: The identifier of the SKU to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the details of an existing SKU. Supply the unique
        SKU identifier from either a SKU creation request or from the product, and
        Stripe will return the corresponding SKU information.</p>"
      operationId: RetrieveSKU
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the SKU to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the specific SKU by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.</p><p>Note that
        a SKU’s <code>attributes</code> are not editable. Instead, you would need
        to deactivate the existing SKU and create a new one with the new attribute
        values.</p>"
      operationId: UpdateSKU
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            active:
              description: Whether this SKU is available for purchase.
              type: boolean
            attributes:
              description: A dictionary of attributes and values for the attributes
                defined by the product. When specified, `attributes` will partially
                update the existing attributes dictionary on the product, with the
                postcondition that a value must be present for each attribute key
                on the product, and that all SKUs for the product must have unique
                sets of attributes.
              type: object
            currency:
              description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
                in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            image:
              description: The URL of an image for this SKU, meant to be displayable
                to the customer.
              type: string
            inventory:
              description: Description of the SKU's inventory.
              properties:
                quantity:
                  type: integer
                type:
                  enum:
                  - bucket
                  - finite
                  - infinite
                  type: string
                value:
                  enum:
                  - ''
                  - in_stock
                  - limited
                  - out_of_stock
                  type: string
              title: inventory_update_specs
              type: object
            metadata:
              description: A set of key/value pairs that you can attach to a SKU object.
                It can be useful for storing additional information about the SKU
                in a structured format.
              type: object
            package_dimensions:
              description: The dimensions of this SKU for shipping purposes.
              properties:
                height:
                  type: number
                length:
                  type: number
                weight:
                  type: number
                width:
                  type: number
              required:
              - height
              - length
              - weight
              - width
              title: package_dimensions_specs
              type: object
            price:
              description: The cost of the item as a positive integer in the smallest
                currency unit (that is, 100 cents to charge $1.00, or 100 to charge
                ¥100, Japanese Yen being a zero-decimal currency).
              type: integer
            product:
              description: The ID of the product that this SKU should belong to. The
                product must exist, have the same set of attribute names as the SKU's
                current product, and be of type `good`.
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/sku"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/sources":
    post:
      description: "<p>Creates a new source object.</p>"
      operationId: CreateSource
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              description: Amount associated with the source. This is the amount for
                which the source will be chargeable once ready. Required for `single_use`
                sources.
              type: integer
            currency:
              description: Three-letter [ISO code for the currency](https://stripe.com/docs/currencies)
                associated with the source. This is the currency for which the source
                will be chargeable once ready.
              type: string
            customer:
              description: The `Customer` to whom the original source is attached
                to. Must be set when the original source is not a `Source` (e.g.,
                `Card`).
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            flow:
              description: The authentication `flow` of the source to create. `flow`
                is one of `redirect`, `receiver`, `code_verification`, `none`. It
                is generally inferred unless a type supports multiple flows.
              enum:
              - code_verification
              - none
              - receiver
              - redirect
              type: string
            mandate:
              description: Information about a mandate possiblity attached to a source
                object (generally for bank debits) as well as its acceptance status.
              properties:
                acceptance:
                  properties:
                    date:
                      type: integer
                    ip:
                      type: string
                    status:
                      enum:
                      - accepted
                      - pending
                      - refused
                      - revoked
                      type: string
                    user_agent:
                      type: string
                  required:
                  - date
                  - ip
                  - status
                  - user_agent
                  title: mandate_acceptance_params
                  type: object
                notification_method:
                  enum:
                  - email
                  - manual
                  - none
                  type: string
              title: mandate_params
              type: object
            metadata:
              description: A set of key/value pairs that you can attach to a source
                object. It can be useful for storing additional information about
                the source in a structured format.
              type: object
            original_source:
              description: The source to share.
              type: string
            owner:
              description: Information about the owner of the payment instrument that
                may be used or required by particular source types.
              properties:
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  title: source_address
                  type: object
                email:
                  type: string
                name:
                  type: string
                phone:
                  type: string
              title: owner
              type: object
            receiver:
              description: Optional parameters for the receiver flow. Can be set only
                if the source is a receiver (`flow` is `receiver`).
              properties:
                refund_attributes_method:
                  enum:
                  - email
                  - manual
                  - none
                  type: string
              title: receiver_params
              type: object
            redirect:
              description: Parameters required for the redirect flow. Required if
                the source is authenticated by a redirect (`flow` is `redirect`).
              properties:
                return_url:
                  type: string
              required:
              - return_url
              title: redirect_params
              type: object
            statement_descriptor:
              description: An arbitrary string to be displayed on your customer's
                statement. As an example, if your website is `RunClub` and the item
                you're charging for is a race ticket, you may want to specify a `statement_descriptor`
                of `RunClub 5K race ticket.` While many payment types will display
                this information, some may not display it at all.
              type: string
            token:
              description: An optional token used to create the source. When passed,
                token properties will override source parameters.
              type: string
            type:
              description: The `type` of the source to create. Required unless `customer`
                and `original_source` are specified (see the [Shared card Sources](/docs/sources/connect#shared-card-sources)
                guide)
              type: string
            usage:
              enum:
              - reusable
              - single_use
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/sources/{source}":
    get:
      description: "<p>Retrieves an existing source object. Supply the unique source
        ID from a source creation request and Stripe will return the corresponding
        up-to-date source object information.</p>"
      operationId: RetrieveSource
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The client secret of the source. Required if a publishable key
          is used to retrieve the source.
        in: query
        name: client_secret
        required: false
        type: string
      - description: The identifier of the source to be retrieved.
        in: path
        name: source
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>Updates the specified source by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.</p><p>This request
        accepts the <code>metadata</code> and <code>owner</code> as arguments. It
        is also possible to update type specific information for selected payment
        methods. Please refer to our <a href="/docs/sources">payment method guides</a>
        for more detail.</p>
      operationId: SourceUpdate
      parameters:
      - in: path
        name: source
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            mandate:
              description: Information about a mandate possiblity attached to a source
                object (generally for bank debits) as well as its acceptance status.
              properties:
                acceptance:
                  properties:
                    date:
                      type: integer
                    ip:
                      type: string
                    status:
                      enum:
                      - accepted
                      - pending
                      - refused
                      - revoked
                      type: string
                    user_agent:
                      type: string
                  required:
                  - date
                  - ip
                  - status
                  - user_agent
                  title: mandate_acceptance_params
                  type: object
                notification_method:
                  enum:
                  - email
                  - manual
                  - none
                  type: string
              title: mandate_params
              type: object
            metadata:
              description: A set of key/value pairs that you can attach to a source
                object. It can be useful for storing additional information about
                the source in a structured format.
              type: object
            owner:
              description: Information about the owner of the payment instrument that
                may be used or required by particular source types.
              properties:
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line1:
                      type: string
                    line2:
                      type: string
                    postal_code:
                      type: string
                    state:
                      type: string
                  title: source_address
                  type: object
                email:
                  type: string
                name:
                  type: string
                phone:
                  type: string
              title: owner
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/sources/{source}/mandate_notifications/{mandate_notification}":
    get:
      description: "<p>Retrieves a new Source MandateNotification.</p>"
      operationId: SourceMandateNotificationRetrieve
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the Source MandateNotification.
        in: path
        name: mandate_notification
        required: true
        type: string
      - description: The ID of the Source that received a ManateNotification.
        in: path
        name: source
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/source_mandate_notification"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/sources/{source}/source_transactions":
    get:
      description: ''
      operationId: AllSourceTransactions
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: The ID of the source whose source transactions will be retrieved.
        in: path
        name: source
        required: true
        type: string
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/source_transaction"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: SourceTransactionList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/sources/{source}/source_transactions/{source_transaction}":
    get:
      description: "<p>Retrieve an existing source transaction object. Supply the
        unique source ID from a source creation request and the source transaction
        ID and Stripe will return the corresponding up-to-date source object information.</p>"
      operationId: RetrieveSourceTransaction
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the source whose source transaction will be retrieved.
        in: path
        name: source
        required: true
        type: string
      - description: The ID of the source transaction that will be retrieved.
        in: path
        name: source_transaction
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/source_transaction"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/sources/{source}/verify":
    post:
      description: ''
      operationId: VerifySource
      parameters:
      - description: The ID of the desired source.
        in: path
        name: source
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            values:
              description: The values needed to verify the source.
              items:
                type: string
              type: array
          required:
          - values
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/subscription_items":
    get:
      description: "<p>Returns a list of your subscription items for a given subscription.</p>"
      operationId: AllSubscriptionItems
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: The ID of the subscription whose items will be retrieved.
        in: query
        name: subscription
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/subscription_item"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Adds a new item to an existing subscription. No existing items
        will be changed or replaced.</p>"
      operationId: CreateSubscriptionItem
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: Set of key-value pairs that you can attach to an object.
                This can be useful for storing additional information about the object
                in a structured format.
              type: object
            plan:
              description: The identifier of the plan to add to the subscription.
              type: string
            prorate:
              description: Flag indicating whether to [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration)
                switching plans during a billing cycle.
              type: boolean
            proration_date:
              description: If set, the proration will be calculated as though the
                subscription was updated at the given time. This can be used to apply
                the same proration that was previewed with the [upcoming invoice](#retrieve_customer_invoice)
                endpoint.
              type: integer
            quantity:
              description: The quantity you'd like to apply to the subscription item
                you're creating.
              type: integer
            subscription:
              description: The identifier of the subscription to modify.
              type: string
          required:
          - plan
          - subscription
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription_item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/subscription_items/{item}":
    delete:
      description: "<p>Deletes an item from the subscription. Removing a subscription
        item from a subscription will not cancel the subscription.</p>"
      operationId: DeleteSubscriptionItem
      parameters:
      - description: The identifier of the subscription item to delete.
        in: path
        name: item
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            clear_usage:
              description: Delete all usage for the given subscription item. Allowed
                only when the current plan's `usage_type` is `metered`.
              type: boolean
            prorate:
              description: Flag indicating whether to [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration)
                switching plans during a billing cycle.
              type: boolean
            proration_date:
              description: If set, the proration will be calculated as though the
                subscription was updated at the given time. This can be used to apply
                the same proration that was previewed with the [upcoming invoice](#retrieve_customer_invoice)
                endpoint.
              type: integer
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the invoice item with the given ID.</p>"
      operationId: RetrieveSubscriptionItem
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the subscription item to retrieve.
        in: path
        name: item
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription_item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the plan or quantity of an item on a current subscription.</p>"
      operationId: UpdateSubscriptionItem
      parameters:
      - description: The identifier of the subscription item to modify.
        in: path
        name: item
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: Set of key-value pairs that you can attach to an object.
                This can be useful for storing additional information about the object
                in a structured format.
              type: object
            plan:
              description: The identifier of the new plan for this subscription item.
              type: string
            prorate:
              description: Flag indicating whether to [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration)
                switching plans during a billing cycle.
              type: boolean
            proration_date:
              description: If set, the proration will be calculated as though the
                subscription was updated at the given time. This can be used to apply
                the same proration that was previewed with the [upcoming invoice](#retrieve_customer_invoice)
                endpoint.
              type: integer
            quantity:
              description: The quantity you'd like to apply to the subscription item
                you're creating.
              type: integer
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription_item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/subscription_items/{subscription_item}/usage_records":
    post:
      description: "<p>Creates a usage record for a specified subscription item and
        date, and fills it with a quantity.</p>"
      operationId: CreateUsageRecord
      parameters:
      - description: The ID of the subscription item for this usage record.
        in: path
        name: subscription_item
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            action:
              description: Valid values are `increment` (default) or `set`. When using
                `increment` the specified `quantity` will be added to the usage at
                the specified timestamp. The `set` action will overwrite the usage
                quantity at that timestamp.
              enum:
              - increment
              - set
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            quantity:
              description: The usage quantity for the specified timestamp.
              type: integer
            timestamp:
              description: The timestamp for the usage event. This timestamp must
                be within the current billing period of the subscription of the provided
                `subscription_item`.
              type: integer
          required:
          - quantity
          - timestamp
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/usage_record"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/subscriptions":
    get:
      description: "<p>By default, returns a list of subscriptions that have not been
        canceled. In order to list canceled subscriptions, specify <code>status=canceled</code>.</p>"
      operationId: AllSubscriptions
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The billing mode of the subscriptions to retrieve. Either `charge_automatically`
          or `send_invoice`.
        in: query
        name: billing
        required: false
        type: string
      - in: query
        name: created
        required: false
        type: integer
      - description: The ID of the customer whose subscriptions will be retrieved.
        in: query
        name: customer
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: The ID of the plan whose subscriptions will be retrieved.
        in: query
        name: plan
        required: false
        type: string
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: 'The status of the subscriptions to retrieve. One of: `trialing`,
          `active`, `past_due`, `unpaid`, `canceled`, or `all`. Passing in a value
          of `canceled` will return all canceled subscriptions, including those belonging
          to deleted customers. Passing in a value of `all` will return subscriptions
          of all statuses.'
        in: query
        name: status
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/subscription"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Creates a new subscription on an existing customer.</p>"
      operationId: CreateSubscription
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            application_fee_percent:
              description: A non-negative decimal between 0 and 100, with at most
                two decimal places. This represents the percentage of the subscription
                invoice subtotal that will be transferred to the application owner's
                Stripe account. The request must be made with an OAuth key in order
                to set an application fee percentage. For more information, see the
                application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
              type: number
            billing:
              description: Either `charge_automatically`, or `send_invoice`. When
                charging automatically, Stripe will attempt to pay this subscription
                at the end of the cycle using the default source attached to the customer.
                When sending an invoice, Stripe will email your customer an invoice
                with payment instructions. Defaults to `charge_automatically`.
              enum:
              - charge_automatically
              - send_invoice
              type: string
            billing_cycle_anchor:
              description: A future timestamp to anchor the subscription's [billing
                cycle](/docs/subscriptions/billing-cycle). This is used to determine
                the date of the first full invoice, and, for plans with `month` or
                `year` intervals, the day of the month for subsequent invoices.
              type: string
            coupon:
              description: The code of the coupon to apply to this subscription. A
                coupon applied to a subscription will only affect invoices created
                for that particular subscription.
              type: string
            customer:
              description: The identifier of the customer to subscribe.
              type: string
            days_until_due:
              description: Number of days a customer has to pay invoices generated
                by this subscription. Valid only for subscriptions where `billing`
                is set to `send_invoice`.
              type: integer
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            items:
              description: List of subscription items, each with an attached plan.
              items:
                properties:
                  plan:
                    type: string
                  quantity:
                    type: integer
                required:
                - plan
                title: subscription_item_create_params
                type: object
              type: array
            metadata:
              description: A set of key-value pairs that you can attach to a `Subscription`
                object. It can be useful for storing additional information about
                the subscription in a structured format.
              type: object
            prorate:
              description: Boolean (defaults to `true`) telling us whether to [credit
                for unused time](/docs/subscriptions/billing-cycle#prorations) when
                the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`,
                or starting a trial). If `false`, the anchor period will be free (similar
                to a trial) and no proration adjustments will be created.
              type: boolean
            source:
              description: The source can either be a [Token](/docs/api#tokens) or
                a [Source](/docs/api#sources), as returned by [Elements](https://stripe.com/docs/elements),
                or a dictionary containing a user's credit card details (with the
                options shown below). You must provide a source if the customer does
                not already have a valid source attached, and you are subscribing
                the customer to be charged automatically for a plan that is not free.
                Passing `source` will create a new source object, make it the customer
                default source, and delete the old customer default if one exists.
                If you want to add an additional source, instead use the [card creation
                API](https://stripe.com/docs/api#create_card) to add the card and
                then the [customer update API](https://stripe.com/docs/api#update_customer)
                to set it as the default. Whenever you attach a card to a customer,
                Stripe will automatically validate the card.
            tax_percent:
              description: A non-negative decimal (with at most four decimal places)
                between 0 and 100. This represents the percentage of the subscription
                invoice subtotal that will be calculated and added as tax to the final
                amount in each billing period. For example, a plan which charges $10/month
                with a `tax_percent` of `20.0` will charge $12 per invoice. To unset
                a previously-set value, pass an empty string.
              type: number
            trial_end:
              description: Unix timestamp representing the end of the trial period
                the customer will get before being charged for the first time. This
                will always overwrite any trials that might apply via a subscribed
                plan. If set, trial_end will override the default trial period of
                the plan the customer is being subscribed to. The special value `now`
                can be provided to end the customer's trial immediately.
              type: string
            trial_from_plan:
              description: Indicates if a plan's `trial_period_days` should be applied
                to the subscription. Setting `trial_end` per subscription is preferred,
                and this defaults to `false`. Setting this flag to `true` together
                with `trial_end` is not allowed.
              type: boolean
            trial_period_days:
              description: Integer representing the number of trial period days before
                the customer is charged for the first time. This will always overwrite
                any trials that might apply via a subscribed plan.
              type: integer
          required:
          - customer
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/subscriptions/{subscription_exposed_id}":
    delete:
      description: <p>Cancels a customer’s subscription. If you set the <code>at_period_end</code>
        parameter to <code>true</code>, the subscription will remain active until
        the end of the period, at which point it will be canceled and not renewed.
        Otherwise, with the default <code>false</code> value, the subscription is
        terminated immediately. In either case, the customer will not be charged again
        for the subscription.</p><p>Note, however, that any pending invoice items
        that you’ve created will still be charged for at the end of the period, unless
        manually <a href="#delete_invoiceitem">deleted</a>. If you’ve set the subscription
        to cancel at the end of the period, any pending prorations will also be left
        in place and collected at the end of the period. But if the subscription is
        set to cancel immediately, pending prorations will be removed.</p><p>By default,
        upon subscription cancellation, Stripe will close all unpaid invoices for
        the customer. This is designed to prevent unexpected payment attempts after
        the customer has canceled a subscription. However, you can reopen the invoices
        manually after subscription cancellation to have us proceed with payment collection.
        Or, you could even re-attempt payment yourself on all unpaid invoices before
        allowing the customer to cancel the subscription at all.</p>
      operationId: DeleteSubscription
      parameters:
      - in: path
        name: subscription_exposed_id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            at_period_end:
              description: A flag that, if set to `true`, will delay the subscription's
                cancellation until the end of the current period.
              type: boolean
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the subscription with the given ID.</p>"
      operationId: RetrieveSubscription
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: path
        name: subscription_exposed_id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>Updates an existing subscription on a customer to match the
        specified parameters. When changing plans or quantities, we will optionally
        prorate the price we charge next month to make up for any price changes. To
        preview how the proration will be calculated, use the <a href="#upcoming_invoice">upcoming
        invoice</a> endpoint.</p>
      operationId: UpdateSubscription
      parameters:
      - description: The identifier of the subscription to update.
        in: path
        name: subscription_exposed_id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            application_fee_percent:
              description: A non-negative decimal between 0 and 100, with at most
                two decimal places. This represents the percentage of the subscription
                invoice subtotal that will be transferred to the application owner's
                Stripe account. The request must be made with an OAuth key in order
                to set an application fee percentage. For more information, see the
                application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
              type: number
            billing:
              description: Either `charge_automatically`, or `send_invoice`. When
                charging automatically, Stripe will attempt to pay this subscription
                at the end of the cycle using the default source attached to the customer.
                When sending an invoice, Stripe will email your customer an invoice
                with payment instructions. Defaults to `charge_automatically`.
              enum:
              - charge_automatically
              - send_invoice
              type: string
            billing_cycle_anchor:
              description: A future timestamp to anchor the subscription's [billing
                cycle](/docs/subscriptions/billing-cycle). This is used to determine
                the date of the first full invoice, and, for plans with `month` or
                `year` intervals, the day of the month for subsequent invoices.
              type: string
            cancel_at_period_end:
              description: Boolean indicating whether this subscription should cancel
                at the end of the current period.
              type: boolean
            coupon:
              description: The code of the coupon to apply to this subscription. A
                coupon applied to a subscription will only affect invoices created
                for that particular subscription.
              type: string
            days_until_due:
              description: Number of days a customer has to pay invoices generated
                by this subscription. Valid only for subscriptions where `billing`
                is set to `send_invoice`.
              type: integer
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            items:
              description: List of subscription items, each with an attached plan.
              items:
                properties:
                  clear_usage:
                    type: boolean
                  deleted:
                    type: boolean
                  id:
                    type: string
                  metadata:
                    type: object
                  plan:
                    type: string
                  quantity:
                    type: integer
                title: subscription_item_update_params
                type: object
              type: array
            metadata:
              description: A set of key-value pairs that you can attach to a subscription
                object. This can be useful for storing additional information about
                the subscription in a structured format.
              type: object
            prorate:
              description: Boolean (defaults to `true`) telling us whether to [credit
                for unused time](/docs/subscriptions/billing-cycle#prorations) when
                the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`,
                or starting a trial). If `false`, the anchor period will be free (similar
                to a trial) and no proration adjustments will be created.
              type: boolean
            proration_date:
              description: If set, the proration will be calculated as though the
                subscription was updated at the given time. This can be used to apply
                exactly the same proration that was previewed with [upcoming invoice](#retrieve_customer_invoice)
                endpoint. It can also be used to implement custom proration logic,
                such as prorating by day instead of by second, by providing the time
                that you wish to use for proration calculations.
              type: integer
            source:
              description: The source can either be a [Token](/docs/api#tokens) or
                a [Source](/docs/api#sources), as returned by [Elements](https://stripe.com/docs/elements),
                or a dictionary containing a user's credit card details (with the
                options shown below). You must provide a source if the customer does
                not already have a valid source attached, and you are subscribing
                the customer to be charged automatically for a plan that is not free.
                Passing `source` will create a new source object, make it the customer
                default source, and delete the old customer default if one exists.
                If you want to add an additional source, instead use the [card creation
                API](https://stripe.com/docs/api#create_card) to add the card and
                then the [customer update API](https://stripe.com/docs/api#update_customer)
                to set it as the default. Whenever you attach a card to a customer,
                Stripe will automatically validate the card.
            tax_percent:
              description: A non-negative decimal (with at most four decimal places)
                between 0 and 100. This represents the percentage of the subscription
                invoice subtotal that will be calculated and added as tax to the final
                amount in each billing period. For example, a plan which charges $10/month
                with a `tax_percent` of `20.0` will charge $12 per invoice. To unset
                a previously-set value, pass an empty string.
              type: number
            trial_end:
              description: Unix timestamp representing the end of the trial period
                the customer will get before being charged for the first time. This
                will always overwrite any trials that might apply via a subscribed
                plan. If set, trial_end will override the default trial period of
                the plan the customer is being subscribed to. The special value `now`
                can be provided to end the customer's trial immediately.
              type: string
            trial_from_plan:
              description: Indicates if a plan's `trial_period_days` should be applied
                to the subscription. Setting `trial_end` per subscription is preferred,
                and this defaults to `false`. Setting this flag to `true` together
                with `trial_end` is not allowed.
              type: boolean
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/subscriptions/{subscription_exposed_id}/discount":
    delete:
      description: "<p>Removes the currently applied discount on a customer.</p>"
      operationId: DeleteSubscriptionDiscount
      parameters:
      - in: path
        name: subscription_exposed_id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_discount"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/tax_rate_templates":
    get:
      description: "<p>Returns a list of your tax rate templates. Tax rate templates
        are returned sorted by creation date, with the most recently created tax rate
        templates appearing first.</p>"
      operationId: AllTaxRateTemplates
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/tax_rate_template"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Creates a new tax rate template.</p>"
      operationId: CreateTaxRateTemplate
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            description:
              description: The customer-facing description of this tax rate template.
              type: string
            effective_since:
              description: When this tax rate template starts taking effect.
              type: integer
            effective_until:
              description: When this tax rate template stops taking effect.
              type: integer
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            inclusive:
              description: If this tax rate template is inclusive or not.
              type: boolean
            name:
              description: The name of this tax rate template.
              type: string
            percentage:
              description: A non-negative decimal (with at most four decimal places)
                between 0 and 100. This is percentage of this tax rate template.
              type: number
          required:
          - inclusive
          - name
          - percentage
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/tax_rate_template"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/tax_rate_templates/{tax_rate_template}":
    delete:
      description: "<p>Removes a tax rate template from the dashboard.</p>"
      operationId: DeleteTaxRateTemplate
      parameters:
      - description: The identifier of the tax rate template to be deleted.
        in: path
        name: tax_rate_template
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/deleted_object"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the tax rate template with the given ID.</p>"
      operationId: RetrieveTaxRateTemplate
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the desired tax rate template.
        in: path
        name: tax_rate_template
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/tax_rate_template"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates a new tax rate template.</p>"
      operationId: UpdateTaxRateTemplate
      parameters:
      - in: path
        name: tax_rate_template
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            description:
              description: The customer-facing description of this tax rate template.
              type: string
            effective_since:
              description: When this tax rate template starts taking effect.
              type: integer
            effective_until:
              description: When this tax rate template stops taking effect.
              type: integer
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            inclusive:
              description: If this tax rate template is inclusive or not.
              type: boolean
            name:
              description: The name of this tax rate template.
              type: string
            percentage:
              description: A non-negative decimal (with at most four decimal places)
                between 0 and 100. This is percentage of this tax rate template.
              type: number
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/tax_rate_template"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/tokens":
    post:
      description: ''
      operationId: CreateToken
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            account:
              description: Information about the account.
              properties:
                legal_entity:
                  properties:
                    additional_owners:
                      items:
                        properties:
                          address:
                            properties:
                              city:
                                type: string
                              country:
                                type: string
                              line1:
                                type: string
                              line2:
                                type: string
                              postal_code:
                                type: string
                              state:
                                type: string
                            title: account_address_specs
                            type: object
                          dob:
                            properties:
                              day:
                                type: integer
                              month:
                                type: integer
                              year:
                                type: integer
                            required:
                            - day
                            - month
                            - year
                            title: date_of_birth_specs
                            type: object
                          first_name:
                            type: string
                          last_name:
                            type: string
                          maiden_name:
                            type: string
                          personal_id_number:
                            type: string
                          verification:
                            properties: {}
                            title: account_person_verification_specs
                            type: object
                        title: account_owner_specs
                        type: object
                    address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      title: account_address_specs
                      type: object
                    address_kana:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                        town:
                          type: string
                      title: japan_address_kana_specs
                      type: object
                    address_kanji:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                        town:
                          type: string
                      title: japan_address_kanji_specs
                      type: object
                    business_name:
                      type: string
                    business_name_kana:
                      type: string
                    business_name_kanji:
                      type: string
                    business_tax_id:
                      type: string
                    business_vat_id:
                      type: string
                    dob:
                      properties:
                        day:
                          type: integer
                        month:
                          type: integer
                        year:
                          type: integer
                      required:
                      - day
                      - month
                      - year
                      title: date_of_birth_specs
                      type: object
                    first_name:
                      type: string
                    first_name_kana:
                      type: string
                    first_name_kanji:
                      type: string
                    gender:
                      type: string
                    last_name:
                      type: string
                    last_name_kana:
                      type: string
                    last_name_kanji:
                      type: string
                    maiden_name:
                      type: string
                    personal_address:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                      title: account_address_specs
                      type: object
                    personal_address_kana:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                        town:
                          type: string
                      title: japan_address_kana_specs
                      type: object
                    personal_address_kanji:
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        line1:
                          type: string
                        line2:
                          type: string
                        postal_code:
                          type: string
                        state:
                          type: string
                        town:
                          type: string
                      title: japan_address_kanji_specs
                      type: object
                    personal_id_number:
                      type: string
                    phone_number:
                      type: string
                    ssn_last_4:
                      type: string
                    tax_id_registrar:
                      type: string
                    type:
                      type: string
                    verification:
                      properties: {}
                      title: account_person_verification_specs
                      type: object
                  title: account_legal_entity_specs
                  type: object
                tos_shown_and_accepted:
                  type: boolean
              required:
              - legal_entity
              title: connect_js_account_token_specs
              type: object
            amount:
              type: integer
            bank_account: {}
            card: {}
            currency:
              type: string
            customer:
              type: string
            email:
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            external_id:
              type: string
            iovation_blackbox:
              type: string
            ip:
              type: string
            payment_user_agent:
              type: string
            pii:
              properties:
                personal_id_number:
                  type: string
              required:
              - personal_id_number
              title: pii_token_specs
              type: object
            recipient:
              type: string
            referrer:
              type: string
            request_id:
              type: string
            user_agent:
              type: string
            validation_type:
              type: string
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/token"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/tokens/{token}":
    get:
      description: "<p>Retrieves the token with the given ID.</p>"
      operationId: RetrieveToken
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the desired token.
        in: path
        name: token
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/token"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/topups":
    get:
      description: "<p>Returns a list of Top-ups.</p>"
      operationId: TopupAll
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: A positive integer in %s representing how much to transfer.
        in: query
        name: amount
        required: false
        type: integer
      - description: A filter on the list, based on the object `created` field. The
          value can be a string with an integer Unix timestamp, or it can be a dictionary
          with a number of different query options.
        in: query
        name: created
        required: false
        type: integer
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: Only return top-ups that have the given status. One of `failed`,
          `pending` or `succeeded`.
        in: query
        name: status
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/topup"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: TopupList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Top up the balance of an account</p>"
      operationId: TopupCreate
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            amount:
              description: A positive integer in %s representing how much to transfer.
              type: integer
            currency:
              description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
                in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
              type: string
            description:
              description: An arbitrary string attached to the object. Often useful
                for displaying to users.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: Set of key-value pairs that you can attach to an object.
                This can be useful for storing additional information about the object
                in a structured format.
              type: object
            source:
              description: The source to transfer funds from.
              type: string
            statement_descriptor:
              description: Extra information about a top-up for the source's bank
                statement.
              type: string
          required:
          - amount
          - currency
          - description
          - statement_descriptor
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/topup"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/topups/{topup}":
    get:
      description: "<p>Retrieves the details of a Top-up that has previously been
        created. Supply the unique Top-up ID that was returned from your previous
        request, and Stripe will return the corresponding Top-up information.</p>"
      operationId: TopupRetrieve
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The ID of the topup to retrieve.
        in: path
        name: topup
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/topup"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the metadata of a Top-up. Other Top-up details are
        not editable by design.</p>"
      operationId: TopupUpdate
      parameters:
      - description: The ID of the topup to retrieve.
        in: path
        name: topup
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            description:
              description: An arbitrary string attached to the object. Often useful
                for displaying to users.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: Set of key-value pairs that you can attach to an object.
                This can be useful for storing additional information about the object
                in a structured format.
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/topup"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/transfers":
    get:
      description: "<p>Returns a list of existing transfers sent to connected accounts.
        The transfers are returned in sorted order, with the most recently created
        transfers appearing first.</p>"
      operationId: AllTransfers
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - in: query
        name: created
        required: false
        type: integer
      - description: Only return transfers for the destination specified by this account
          ID.
        in: query
        name: destination
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: Only return transfers with the specified transfer group.
        in: query
        name: transfer_group
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/transfer"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: TransferList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>To send funds from your Stripe account to a connected account,
        you create a new transfer object. Your <a href="#balance">Stripe balance</a>
        must be able to cover the transfer amount, or you’ll receive an “Insufficient
        Funds” error.</p>
      operationId: TransferCreate
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            amount:
              description: A positive integer in %s representing how much to transfer.
              type: integer
            currency:
              description: 3-letter [ISO code for currency](/docs/payouts).
              type: string
            destination:
              description: The ID of a connected Stripe account. <a href="/docs/connect/charges-transfers">See
                the Connect documentation</a> for details.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: Set of key-value pairs that you can attach to an object.
                This can be useful for storing additional information about the object
                in a structured format. Individual keys can be unset by posting an
                empty value to them. All keys can be unset by posting an empty value
                to `metadata`.
              type: object
            source_transaction:
              description: You can use this parameter to transfer funds from a charge
                before they are added to your available balance. A pending balance
                will transfer immediately but the funds will not become available
                until the original charge becomes available. [See the Connect documentation](/docs/connect/charges-transfers#transfer-availability)
                for details.
              type: string
            transfer_group:
              description: A string that identifies this transaction as part of a
                group. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions)
                for details.
              type: string
          required:
          - amount
          - currency
          - destination
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/transfers/{id}/reversals":
    get:
      description: "<p>You can see a list of the reversals belonging to a specific
        transfer. Note that the 10 most recent reversals are always available by default
        on the transfer object. If you need more than those 10, you can use this API
        method and the <code>limit</code> and <code>starting_after</code> parameters
        to page through additional reversals.</p>"
      operationId: TransferReversalAll
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the transfer whose reversals will be retrieved.
        in: path
        name: id
        required: true
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              data:
                items:
                  "$ref": "#/definitions/transfer_reversal"
                type: array
              has_more:
                description: True if this list has another page of items after this
                  one that can be fetched.
                type: boolean
              object:
                description: String representing the object's type. Objects of the
                  same type share the same value. Always has the value `list`.
                enum:
                - list
                type: string
              url:
                description: The URL where this list can be accessed.
                type: string
            required:
            - data
            - has_more
            - object
            - url
            title: TransferReversalList
            type: object
            x-expandableFields:
            - data
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>When you create a new reversal, you must specify a transfer
        to create it on.</p><p>When reversing transfers, you can optionally reverse
        part of the transfer. You can do so as many times as you wish until the entire
        transfer has been reversed.</p><p>Once entirely reversed, a transfer can’t
        be reversed again. This method will return an error when called on an already-reversed
        transfer, or when trying to reverse more money than is left on a transfer.</p>"
      operationId: CreateTransferReversal
      parameters:
      - description: The ID of the transfer to be reversed.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              description: A positive integer in %s representing how much of this
                transfer to reverse. Can only reverse up to the unreversed amount
                remaining of the transfer. Partial transfer reversals are only allowed
                for transfers to Stripe Accounts.
              type: integer
            description:
              description: An arbitrary string which you can attach to a reversal
                object. It is displayed alongside the reversal in the Dashboard. This
                will be unset if you POST an empty value.
              type: string
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: Set of key-value pairs that you can attach to an object.
                This can be useful for storing additional information about the object
                in a structured format. Individual keys can be unset by posting an
                empty value to them. All keys can be unset by posting an empty value
                to `metadata`.
              type: object
            refund_application_fee:
              description: Boolean indicating whether the application fee should be
                refunded when reversing this transfer. If a full transfer reversal
                is given, the full application fee will be refunded. Otherwise, the
                application fee will be refunded with an amount proportional to the
                amount of the transfer reversed.
              type: boolean
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/legacy_transfer_reversal"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/transfers/{transfer}":
    get:
      description: "<p>Retrieves the details of an existing transfer. Supply the unique
        transfer ID from either a transfer creation request or the transfer list,
        and Stripe will return the corresponding transfer information.</p>"
      operationId: RetrieveTransfer
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: The identifier of the transfer to be retrieved.
        in: path
        name: transfer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the specified transfer by setting the values of the
        parameters passed. Any parameters not provided will be left unchanged.</p><p>This
        request accepts only metadata as an argument.</p>"
      operationId: UpdateTransfer
      parameters:
      - description: The ID of the transfer to be updated.
        in: path
        name: transfer
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: Set of key-value pairs that you can attach to an object.
                This can be useful for storing additional information about the object
                in a structured format. Individual keys can be unset by posting an
                empty value to them. All keys can be unset by posting an empty value
                to `metadata`.
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/transfers/{transfer}/reversals/{id}":
    get:
      description: "<p>By default, you can see the 10 most recent reversals stored
        directly on the transfer object, but you can also retrieve details about a
        specific reversal stored on the transfer.</p>"
      operationId: TransferReversalRetrieve
      parameters:
      - description: Specifies which fields in the response should be expanded.
        in: query
        name: expand
        required: false
        items:
          type: string
        type: array
      - description: ID of reversal to retrieve.
        in: path
        name: id
        required: true
        type: string
      - description: ID of the transfer reversed.
        in: path
        name: transfer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer_reversal"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the specified reversal by setting the values of the
        parameters passed. Any parameters not provided will be left unchanged.</p><p>This
        request only accepts metadata and description as arguments.</p>"
      operationId: TransferReversalUpdate
      parameters:
      - description: ID of reversal to retrieve.
        in: path
        name: id
        required: true
        type: string
      - description: ID of the transfer reversed.
        in: path
        name: transfer
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            expand:
              description: Specifies which fields in the response should be expanded.
              items:
                type: string
              type: array
            metadata:
              description: Set of key-value pairs that you can attach to an object.
                This can be useful for storing additional information about the object
                in a structured format. Individual keys can be unset by posting an
                empty value to them. All keys can be unset by posting an empty value
                to `metadata`.
              type: object
          type: object
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer_reversal"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
produces:
- application/json
schemes:
- https
swagger: '2.0'
